### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions:interface'
    summary: >-
      A scoped collection of custom XML parts. A scoped collection is the result of some operation, e.g. filtering by
      namespace. A scoped collection cannot be scoped any further.


      \[Api set: ExcelApi 1.5\]
    name: Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions
    fullName: Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions
    langs:
      - typeScript
    type: interface
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions#$all:member'
      - 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions#id:member'
      - 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions#namespaceUri:member'
  - uid: 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions#$all:member'
    summary: >-
      Specifying `$all` for the LoadOptions loads all the scalar properties (e.g.: `Range.address`<!-- -->) but not the
      navigational properties (e.g.: `Range.format.fill.color`<!-- -->).
    name: $all
    fullName: $all
    langs:
      - typeScript
    type: property
    syntax:
      content: '$all?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions#id:member'
    summary: |-
      For EACH ITEM in the collection: The custom XML part's ID. Read-only.

      \[Api set: ExcelApi 1.5\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel-scripts!Excel.Interfaces.CustomXmlPartScopedCollectionLoadOptions#namespaceUri:member'
    summary: |-
      For EACH ITEM in the collection: The custom XML part's namespace URI. Read-only.

      \[Api set: ExcelApi 1.5\]
    name: namespaceUri
    fullName: namespaceUri
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceUri?: boolean;'
      return:
        type:
          - boolean
