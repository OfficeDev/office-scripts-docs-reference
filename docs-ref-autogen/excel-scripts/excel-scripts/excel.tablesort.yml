### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.TableSort:class'
    summary: |-
      Manages sorting operations on Table objects.

      \[Api set: ExcelApi 1.2\]
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.TableSort#apply:member(1)'
      - 'excel-scripts!Excel.TableSort#apply:member(2)'
      - 'excel-scripts!Excel.TableSort#clear:member(1)'
      - 'excel-scripts!Excel.TableSort#context:member'
      - 'excel-scripts!Excel.TableSort#fields:member'
      - 'excel-scripts!Excel.TableSort#load:member(1)'
      - 'excel-scripts!Excel.TableSort#load:member(2)'
      - 'excel-scripts!Excel.TableSort#matchCase:member'
      - 'excel-scripts!Excel.TableSort#method:member'
      - 'excel-scripts!Excel.TableSort#reapply:member(1)'
      - 'excel-scripts!Excel.TableSort#toJSON:member(1)'
  - uid: 'excel-scripts!Excel.TableSort#apply:member(1)'
    summary: |-
      Perform a sort operation.

      \[Api set: ExcelApi 1.2\]
    name: 'apply(fields, matchCase, method)'
    fullName: 'apply(fields, matchCase, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type:
            - 'excel-scripts!Excel.TableSort#apply~0:complex'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type:
            - boolean
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type:
            - 'excel-scripts!Excel.SortMethod:enum'
  - uid: 'excel-scripts!Excel.TableSort#apply:member(2)'
    summary: |-
      Perform a sort operation.

      \[Api set: ExcelApi 1.2\]
    name: 'apply(fields, matchCase, methodStringString)'
    fullName: 'apply(fields, matchCase, methodStringString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodStringString?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type:
            - 'excel-scripts!Excel.TableSort#apply~1:complex'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type:
            - boolean
        - id: methodStringString
          description: Optional. The ordering method used for Chinese characters.
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: 'excel-scripts!Excel.TableSort#clear:member(1)'
    summary: >-
      Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the
      state of the header buttons.


      \[Api set: ExcelApi 1.2\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.TableSort#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.TableSort#fields:member'
    summary: |-
      Represents the current conditions used to last sort the table. Read-only.

      \[Api set: ExcelApi 1.2\]
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'excel-scripts!Excel.TableSort#fields~0:complex'
  - uid: 'excel-scripts!Excel.TableSort#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      return:
        type:
          - 'excel-scripts!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.TableSort#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableSort;
      return:
        type:
          - 'excel-scripts!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel-scripts!Excel.TableSort#matchCase:member'
    summary: |-
      Represents whether the casing impacted the last sort of the table. Read-only.

      \[Api set: ExcelApi 1.2\]
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel-scripts!Excel.TableSort#method:member'
    summary: |-
      Represents Chinese character ordering method last used to sort the table. Read-only.

      \[Api set: ExcelApi 1.2\]
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - 'excel-scripts!Excel.TableSort#method~0:complex'
  - uid: 'excel-scripts!Excel.TableSort#reapply:member(1)'
    summary: |-
      Reapplies the current sorting parameters to the table.

      \[Api set: ExcelApi 1.2\]
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.TableSort#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.TableSort object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.TableSortData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - 'excel-scripts!Excel.Interfaces.TableSortData:interface'
        description: ''
references:
  - uid: 'excel-scripts!Excel.TableSort#apply~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel-scripts!Excel.SortMethod:enum'
    name: Excel.SortMethod
  - uid: 'excel-scripts!Excel.TableSort#apply~1:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.TableSort#fields~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel-scripts!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel-scripts!Excel.TableSort#method~0:complex'
    name: Excel.SortMethod | "PinYin" | "StrokeCount"
    fullName: Excel.SortMethod | "PinYin" | "StrokeCount"
    spec.typeScript:
      - uid: 'excel-scripts!Excel.SortMethod:enum'
        name: Excel.SortMethod
        fullName: Excel.SortMethod
      - name: ' | "PinYin" | "StrokeCount"'
        fullName: ' | "PinYin" | "StrokeCount"'
  - uid: 'excel-scripts!Excel.Interfaces.TableSortData:interface'
    name: Excel.Interfaces.TableSortData
