{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.10",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "excel!",
  "docComment": "",
  "name": "excel",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "excel!",
      "name": "",
      "members": [
        {
          "kind": "Namespace",
          "canonicalReference": "excel!ExcelScript:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ExcelScript "
            }
          ],
          "releaseTag": "Public",
          "name": "ExcelScript",
          "members": [
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.AggregationFunction:enum",
              "docComment": "/**\n * Aggregation Function for the Data Pivot Field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum AggregationFunction "
                }
              ],
              "releaseTag": "Public",
              "name": "AggregationFunction",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.automatic:member",
                  "docComment": "/**\n * Excel will automatically select the aggregation based on the data items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.average:member",
                  "docComment": "/**\n * Aggregate using the average of the data, equivalent to the AVERAGE function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "average"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "average",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.count:member",
                  "docComment": "/**\n * Aggregate using the count of items in the data, equivalent to the COUNTA function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "count"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.countNumbers:member",
                  "docComment": "/**\n * Aggregate using the count of numbers in the data, equivalent to the COUNT function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "countNumbers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "countNumbers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.max:member",
                  "docComment": "/**\n * Aggregate using the maximum value of the data, equivalent to the MAX function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "max"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "max",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.min:member",
                  "docComment": "/**\n * Aggregate using the minimum value of the data, equivalent to the MIN function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "min"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "min",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.product:member",
                  "docComment": "/**\n * Aggregate using the product of the data, equivalent to the PRODUCT function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "product"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "product",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.standardDeviation:member",
                  "docComment": "/**\n * Aggregate using the standard deviation of the data, equivalent to the STDEV function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviation"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviation",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.standardDeviationP:member",
                  "docComment": "/**\n * Aggregate using the standard deviation of the data, equivalent to the STDEVP function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviationP"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviationP",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.sum:member",
                  "docComment": "/**\n * Aggregate using the sum of the data, equivalent to the SUM function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sum"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sum",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.unknown:member",
                  "docComment": "/**\n * Aggregation function is unknown or unsupported.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.variance:member",
                  "docComment": "/**\n * Aggregate using the variance of the data, equivalent to the VAR function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "variance"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "variance",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AggregationFunction.varianceP:member",
                  "docComment": "/**\n * Aggregate using the variance of the data, equivalent to the VARP function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "varianceP"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "varianceP",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Application:interface",
              "docComment": "/**\n * Represents the Excel application that manages the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Application "
                }
              ],
              "releaseTag": "Public",
              "name": "Application",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Application#calculate:member(1)",
                  "docComment": "/**\n * Recalculate all currently opened workbooks in Excel.\n *\n * @param calculationType - Specifies the calculation type to use. See Excel.CalculationType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(calculationType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationType",
                      "canonicalReference": "excel!ExcelScript.CalculationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "calculationType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "calculate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Application#getCalculationEngineVersion:member(1)",
                  "docComment": "/**\n * Returns the Excel calculation engine version used for the last full recalculation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCalculationEngineVersion(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCalculationEngineVersion"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Application#getCalculationMode:member(1)",
                  "docComment": "/**\n * Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode. Possible values are: `Automatic`, where Excel controls recalculation; `AutomaticExceptTables`, where Excel controls recalculation but ignores changes in tables; `Manual`, where calculation is done when the user requests it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCalculationMode(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationMode",
                      "canonicalReference": "excel!ExcelScript.CalculationMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCalculationMode"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Application#getCalculationState:member(1)",
                  "docComment": "/**\n * Returns the calculation state of the application. See Excel.CalculationState for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCalculationState(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationState",
                      "canonicalReference": "excel!ExcelScript.CalculationState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCalculationState"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Application#getIterativeCalculation:member(1)",
                  "docComment": "/**\n * Returns the Iterative Calculation settings. In Excel on Windows and Mac, the settings will apply to the Excel Application. In Excel on the web and other platforms, the settings will apply to the active workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIterativeCalculation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "IterativeCalculation",
                      "canonicalReference": "excel!ExcelScript.IterativeCalculation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIterativeCalculation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Application#setCalculationMode:member(1)",
                  "docComment": "/**\n * Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode. Possible values are: `Automatic`, where Excel controls recalculation; `AutomaticExceptTables`, where Excel controls recalculation but ignores changes in tables; `Manual`, where calculation is done when the user requests it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCalculationMode(calculationMode: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationMode",
                      "canonicalReference": "excel!ExcelScript.CalculationMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "calculationMode",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCalculationMode"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ArrowheadLength:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ArrowheadLength "
                }
              ],
              "releaseTag": "Public",
              "name": "ArrowheadLength",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadLength.long:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "long"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "long",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadLength.medium:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "medium"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "medium",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadLength.short:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "short"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "short",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ArrowheadStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ArrowheadStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ArrowheadStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadStyle.diamond:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diamond"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diamond",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadStyle.open:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "open"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "open",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadStyle.oval:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oval"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oval",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadStyle.stealth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stealth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stealth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadStyle.triangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "triangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "triangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ArrowheadWidth:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ArrowheadWidth "
                }
              ],
              "releaseTag": "Public",
              "name": "ArrowheadWidth",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadWidth.medium:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "medium"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "medium",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadWidth.narrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "narrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "narrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ArrowheadWidth.wide:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wide"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wide",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.AutoFillType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum AutoFillType "
                }
              ],
              "releaseTag": "Public",
              "name": "AutoFillType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillCopy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillCopy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillCopy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillDays:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillDays"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillDays",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillDefault:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillDefault"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillDefault",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillFormats:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillFormats"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillFormats",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillMonths:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillMonths"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillMonths",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillSeries:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillSeries"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillSeries",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillValues"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillValues",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillWeekdays:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillWeekdays"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillWeekdays",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.fillYears:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillYears"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillYears",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.flashFill:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flashFill"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flashFill",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.growthTrend:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "growthTrend"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "growthTrend",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.AutoFillType.linearTrend:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linearTrend"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linearTrend",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.AutoFilter:interface",
              "docComment": "/**\n * Represents the AutoFilter object. AutoFilter turns the values in Excel column into specific filters based on the cell contents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AutoFilter "
                }
              ],
              "releaseTag": "Public",
              "name": "AutoFilter",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#apply:member(1)",
                  "docComment": "/**\n * Applies the AutoFilter to a range. This filters the column if column index and filter criteria are specified.\n *\n * @param range - The range over which the AutoFilter will apply on.\n *\n * @param columnIndex - The zero-based column index to which the AutoFilter is applied.\n *\n * @param criteria - The filter criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(\n            range: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            columnIndex?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!ExcelScript.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "range",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "columnIndex",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#clearCriteria:member(1)",
                  "docComment": "/**\n * Clears the filter criteria of the AutoFilter.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearCriteria(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearCriteria"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#getCriteria:member(1)",
                  "docComment": "/**\n * An array that holds all the filter criteria in the autofiltered range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCriteria(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!ExcelScript.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCriteria"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#getEnabled:member(1)",
                  "docComment": "/**\n * Specifies if the AutoFilter is enabled.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnabled(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEnabled"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#getIsDataFiltered:member(1)",
                  "docComment": "/**\n * Specifies if the AutoFilter has filter criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsDataFiltered(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsDataFiltered"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#getRange:member(1)",
                  "docComment": "/**\n * Returns the Range object that represents the range to which the AutoFilter applies. If there is no Range object associated with the AutoFilter, this method returns a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#reapply:member(1)",
                  "docComment": "/**\n * Applies the specified Autofilter object currently on the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reapply(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "reapply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.AutoFilter#remove:member(1)",
                  "docComment": "/**\n * Removes the AutoFilter for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "remove"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.BasicDataValidation:interface",
              "docComment": "/**\n * Represents the Basic Type data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface BasicDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "BasicDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.BasicDataValidation#formula1:member",
                  "docComment": "/**\n * Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand. For example, setting formula1 to 10 and operator to GreaterThan means that valid data for the range must be greater than 10. When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.BasicDataValidation#formula2:member",
                  "docComment": "/**\n * With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan. When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.BasicDataValidation#operator:member",
                  "docComment": "/**\n * The operator to use for validating the data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationOperator",
                      "canonicalReference": "excel!ExcelScript.DataValidationOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Binding:interface",
              "docComment": "/**\n * Represents an Office.js binding that is defined in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Binding "
                }
              ],
              "releaseTag": "Public",
              "name": "Binding",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Binding#delete:member(1)",
                  "docComment": "/**\n * Deletes the binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Binding#getId:member(1)",
                  "docComment": "/**\n * Represents binding identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Binding#getRange:member(1)",
                  "docComment": "/**\n * Returns the range represented by the binding. Will throw an error if binding is not of the correct type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Binding#getTable:member(1)",
                  "docComment": "/**\n * Returns the table represented by the binding. Will throw an error if binding is not of the correct type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTable(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Binding#getText:member(1)",
                  "docComment": "/**\n * Returns the text represented by the binding. Will throw an error if binding is not of the correct type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Binding#getType:member(1)",
                  "docComment": "/**\n * Returns the type of the binding. See Excel.BindingType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!ExcelScript.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.BindingType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BindingType "
                }
              ],
              "releaseTag": "Public",
              "name": "BindingType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BindingType.range:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "range"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "range",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BindingType.table:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "table"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "table",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BindingType.text:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.BorderIndex:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BorderIndex "
                }
              ],
              "releaseTag": "Public",
              "name": "BorderIndex",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.diagonalDown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalDown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalDown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.diagonalUp:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalUp"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalUp",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.edgeBottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeBottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeBottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.edgeLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeLeft"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeLeft",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.edgeRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeRight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeRight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.edgeTop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeTop"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeTop",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.insideHorizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideHorizontal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideHorizontal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderIndex.insideVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideVertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideVertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.BorderLineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BorderLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "BorderLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.continuous:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continuous"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continuous",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderLineStyle.slantDashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "slantDashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "slantDashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.BorderWeight:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BorderWeight "
                }
              ],
              "releaseTag": "Public",
              "name": "BorderWeight",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderWeight.hairline:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hairline"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hairline",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderWeight.medium:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "medium"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "medium",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderWeight.thick:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thick"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thick",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BorderWeight.thin:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thin"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thin",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.BuiltInStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BuiltInStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "BuiltInStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent1_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1_20"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1_20",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent1_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1_40"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1_40",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent1_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1_60"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1_60",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent2_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2_20"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2_20",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent2_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2_40"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2_40",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent2_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2_60"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2_60",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent3_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3_20"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3_20",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent3_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3_40"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3_40",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent3_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3_60"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3_60",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent4_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4_20"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4_20",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent4_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4_40"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4_40",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent4_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4_60"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4_60",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent5_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5_20"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5_20",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent5_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5_40"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5_40",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent5_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5_60"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5_60",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent6_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6_20"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6_20",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent6_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6_40"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6_40",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.accent6_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6_60"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6_60",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.bad:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bad"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bad",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.calculation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculation"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculation",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.checkCell:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "checkCell"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "checkCell",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.comma:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "comma"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "comma",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.currency:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "currency"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "currency",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.emphasis1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emphasis1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "emphasis1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.emphasis2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emphasis2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "emphasis2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.emphasis3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emphasis3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "emphasis3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.explanatoryText:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "explanatoryText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "explanatoryText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.good:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "good"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "good",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.heading1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.heading2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.heading3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.heading4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.hlink:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hlink"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hlink",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.hlinkTrav:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hlinkTrav"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hlinkTrav",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.input:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "input"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "input",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.linkedCell:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkedCell"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkedCell",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.neutral:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "neutral"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "neutral",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.normal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "normal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.note:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "note"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "note",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.output:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "output"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "output",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.sheetTitle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sheetTitle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sheetTitle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.total:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "total"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "total",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.warningText:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "warningText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "warningText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.wholeComma:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeComma"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeComma",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.BuiltInStyle.wholeDollar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeDollar"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeDollar",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.CalculationMode:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum CalculationMode "
                }
              ],
              "releaseTag": "Public",
              "name": "CalculationMode",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationMode.automatic:member",
                  "docComment": "/**\n * The default recalculation behavior where Excel calculates new formula results every time the relevant data is changed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationMode.automaticExceptTables:member",
                  "docComment": "/**\n * Calculates new formula results every time the relevant data is changed, unless the formula is in a data table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automaticExceptTables"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automaticExceptTables",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationMode.manual:member",
                  "docComment": "/**\n * Calculations only occur when the user or add-in requests them.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "manual"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "manual",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.CalculationState:enum",
              "docComment": "/**\n * Represents the state of calculation across the entire Excel application.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum CalculationState "
                }
              ],
              "releaseTag": "Public",
              "name": "CalculationState",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationState.calculating:member",
                  "docComment": "/**\n * Calculations in progress.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculating"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculating",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationState.done:member",
                  "docComment": "/**\n * Calculations complete.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "done"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "done",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationState.pending:member",
                  "docComment": "/**\n * Changes that trigger calculation have been made, but a recalculation has not yet been performed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.CalculationType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum CalculationType "
                }
              ],
              "releaseTag": "Public",
              "name": "CalculationType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationType.full:member",
                  "docComment": "/**\n * This will mark all cells as dirty and then recalculate them.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "full"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "full",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationType.fullRebuild:member",
                  "docComment": "/**\n * This will rebuild the full dependency chain, mark all cells as dirty and then recalculate them.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fullRebuild"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fullRebuild",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.CalculationType.recalculate:member",
                  "docComment": "/**\n * Recalculates all cells that Excel has marked as dirty, that is, dependents of volatile or changed data, and cells programmatically marked as dirty.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recalculate"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "recalculate",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellBorder:interface",
              "docComment": "/**\n * Represents the properties of a single border returned by `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the border property input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "CellBorder",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorder#color:member",
                  "docComment": "/**\n * Represents the `color` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorder#style:member",
                  "docComment": "/**\n * Represents the `style` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderLineStyle",
                      "canonicalReference": "excel!ExcelScript.BorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorder#tintAndShade:member",
                  "docComment": "/**\n * Represents the `tintAndShade` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorder#weight:member",
                  "docComment": "/**\n * Represents the `weight` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderWeight",
                      "canonicalReference": "excel!ExcelScript.BorderWeight:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellBorderCollection:interface",
              "docComment": "/**\n * Represents the `format.borders` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.borders` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellBorderCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CellBorderCollection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#bottom:member",
                  "docComment": "/**\n * Represents the `format.borders.bottom` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#diagonalDown:member",
                  "docComment": "/**\n * Represents the `format.borders.diagonalDown` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalDown?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalDown",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#diagonalUp:member",
                  "docComment": "/**\n * Represents the `format.borders.diagonalUp` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalUp?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalUp",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#horizontal:member",
                  "docComment": "/**\n * Represents the `format.borders.horizontal` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontal?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#left:member",
                  "docComment": "/**\n * Represents the `format.borders.left` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#right:member",
                  "docComment": "/**\n * Represents the `format.borders.right` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#top:member",
                  "docComment": "/**\n * Represents the `format.borders.top` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellBorderCollection#vertical:member",
                  "docComment": "/**\n * Represents the `format.borders.vertical` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!ExcelScript.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellPropertiesBorderLoadOptions:interface",
              "docComment": "/**\n * Specifies which properties to load on the `format.borders` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesBorderLoadOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesBorderLoadOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesBorderLoadOptions#color:member",
                  "docComment": "/**\n * Specifies whether to load on the `color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesBorderLoadOptions#style:member",
                  "docComment": "/**\n * Specifies whether to load on the `style` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesBorderLoadOptions#tintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load on the `tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesBorderLoadOptions#weight:member",
                  "docComment": "/**\n * Specifies whether to load on the `weight` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellPropertiesFill:interface",
              "docComment": "/**\n * Represents the `format.fill` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.fill` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFill "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFill",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFill#color:member",
                  "docComment": "/**\n * Represents the `format.fill.color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFill#pattern:member",
                  "docComment": "/**\n * Represents the `format.fill.pattern` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FillPattern",
                      "canonicalReference": "excel!ExcelScript.FillPattern:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFill#patternColor:member",
                  "docComment": "/**\n * Represents the `format.fill.patternColor` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternColor?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFill#patternTintAndShade:member",
                  "docComment": "/**\n * Represents the `format.fill.patternTintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternTintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternTintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFill#tintAndShade:member",
                  "docComment": "/**\n * Represents the `format.fill.tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellPropertiesFillLoadOptions:interface",
              "docComment": "/**\n * Specifies which properties to load on the `format.fill` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFillLoadOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFillLoadOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFillLoadOptions#color:member",
                  "docComment": "/**\n * Specifies whether to load the `color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFillLoadOptions#pattern:member",
                  "docComment": "/**\n * Specifies whether to load the `pattern` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFillLoadOptions#patternColor:member",
                  "docComment": "/**\n * Specifies whether to load the `patternColor` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternColor?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFillLoadOptions#patternTintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load the `patternTintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternTintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternTintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFillLoadOptions#tintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load the `tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellPropertiesFont:interface",
              "docComment": "/**\n * Represents the `format.font` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.font` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFont "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFont",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#bold:member",
                  "docComment": "/**\n * Represents the `format.font.bold` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#color:member",
                  "docComment": "/**\n * Represents the `format.font.color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#italic:member",
                  "docComment": "/**\n * Represents the `format.font.italic` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#name:member",
                  "docComment": "/**\n * Represents the `format.font.name` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#size:member",
                  "docComment": "/**\n * Represents the `format.font.size` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#strikethrough:member",
                  "docComment": "/**\n * Represents the `format.font.strikethrough` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strikethrough?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strikethrough",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#subscript:member",
                  "docComment": "/**\n * Represents the `format.font.subscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#superscript:member",
                  "docComment": "/**\n * Represents the `format.font.superscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "superscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "superscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#tintAndShade:member",
                  "docComment": "/**\n * Represents the `format.font.tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFont#underline:member",
                  "docComment": "/**\n * Represents the `format.font.underline` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions:interface",
              "docComment": "/**\n * Specifies which properties to load on the `format.font` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFontLoadOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFontLoadOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#bold:member",
                  "docComment": "/**\n * Specifies whether to load on the `bold` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#color:member",
                  "docComment": "/**\n * Specifies whether to load on the `color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#italic:member",
                  "docComment": "/**\n * Specifies whether to load on the `italic` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#name:member",
                  "docComment": "/**\n * Specifies whether to load on the `name` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#size:member",
                  "docComment": "/**\n * Specifies whether to load on the `size` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#strikethrough:member",
                  "docComment": "/**\n * Specifies whether to load on the `strikethrough` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strikethrough?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strikethrough",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#subscript:member",
                  "docComment": "/**\n * Specifies whether to load on the `subscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#superscript:member",
                  "docComment": "/**\n * Specifies whether to load on the `superscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "superscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "superscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#tintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load on the `tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesFontLoadOptions#underline:member",
                  "docComment": "/**\n * Specifies whether to load on the `underline` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellPropertiesProtection:interface",
              "docComment": "/**\n * Represents the `format.protection` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.protection` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesProtection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesProtection#formulaHidden:member",
                  "docComment": "/**\n * Represents the `format.protection.formulaHidden` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulaHidden?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulaHidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CellPropertiesProtection#locked:member",
                  "docComment": "/**\n * Represents the `format.protection.locked` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "locked?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "locked",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CellValueConditionalFormat:interface",
              "docComment": "/**\n * Represents a cell value conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellValueConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "CellValueConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CellValueConditionalFormat#getFormat:member(1)",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CellValueConditionalFormat#getRule:member(1)",
                  "docComment": "/**\n * Specifies the Rule object on this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalCellValueRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalCellValueRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CellValueConditionalFormat#setRule:member(1)",
                  "docComment": "/**\n * Specifies the Rule object on this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRule(rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalCellValueRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalCellValueRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Chart:interface",
              "docComment": "/**\n * Represents a chart object in a workbook. To learn more about the Chart object model, see {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts | Work with charts using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Chart "
                }
              ],
              "releaseTag": "Public",
              "name": "Chart",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#activate:member(1)",
                  "docComment": "/**\n * Activates the chart in the Excel UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "activate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "activate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#addChartSeries:member(1)",
                  "docComment": "/**\n * Add a new series to the collection. The new added series is not visible until set values/x axis values/bubble sizes for it (depending on chart type).\n *\n * @param name - Optional. Name of the series.\n *\n * @param index - Optional. Index value of the series to be added. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addChartSeries(name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeries",
                      "canonicalReference": "excel!ExcelScript.ChartSeries:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addChartSeries"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#delete:member(1)",
                  "docComment": "/**\n * Deletes the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getAxes:member(1)",
                  "docComment": "/**\n * Represents chart axes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAxes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxes",
                      "canonicalReference": "excel!ExcelScript.ChartAxes:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAxes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getCategoryLabelLevel:member(1)",
                  "docComment": "/**\n * Specifies a ChartCategoryLabelLevel enumeration constant referring to the level of where the category labels are being sourced from. Read/Write.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCategoryLabelLevel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCategoryLabelLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getChartType:member(1)",
                  "docComment": "/**\n * Specifies the type of the chart. See Excel.ChartType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getChartType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!ExcelScript.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getChartType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getDataLabels:member(1)",
                  "docComment": "/**\n * Represents the datalabels on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataLabels(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabels",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabels:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataLabels"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getDisplayBlanksAs:member(1)",
                  "docComment": "/**\n * Specifies the way that blank cells are plotted on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDisplayBlanksAs(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDisplayBlanksAs",
                      "canonicalReference": "excel!ExcelScript.ChartDisplayBlanksAs:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDisplayBlanksAs"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getFormat:member(1)",
                  "docComment": "/**\n * Encapsulates the format properties for the chart area.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAreaFormat",
                      "canonicalReference": "excel!ExcelScript.ChartAreaFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getId:member(1)",
                  "docComment": "/**\n * The unique id of chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getImage:member(1)",
                  "docComment": "/**\n * Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions. The aspect ratio is preserved as part of the resizing.\n *\n * @param height - (Optional) The desired height of the resulting image.\n *\n * @param width - (Optional) The desired width of the resulting image.\n *\n * @param fittingMode - (Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getImage(\n            width?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            height?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            fittingMode?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ImageFittingMode",
                      "canonicalReference": "excel!ExcelScript.ImageFittingMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "fittingMode",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "getImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getLeft:member(1)",
                  "docComment": "/**\n * The distance, in points, from the left side of the chart to the worksheet origin.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getLegend:member(1)",
                  "docComment": "/**\n * Represents the legend for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLegend(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegend",
                      "canonicalReference": "excel!ExcelScript.ChartLegend:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLegend"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getName:member(1)",
                  "docComment": "/**\n * Specifies the name of a chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getPivotOptions:member(1)",
                  "docComment": "/**\n * Encapsulates the options for a pivot chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotOptions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPivotOptions",
                      "canonicalReference": "excel!ExcelScript.ChartPivotOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPivotOptions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getPlotArea:member(1)",
                  "docComment": "/**\n * Represents the plotArea for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPlotArea(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotArea",
                      "canonicalReference": "excel!ExcelScript.ChartPlotArea:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPlotArea"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getPlotBy:member(1)",
                  "docComment": "/**\n * Specifies the way columns or rows are used as data series on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPlotBy(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotBy",
                      "canonicalReference": "excel!ExcelScript.ChartPlotBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPlotBy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getPlotVisibleOnly:member(1)",
                  "docComment": "/**\n * True if only visible cells are plotted. False if both visible and hidden cells are plotted.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPlotVisibleOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPlotVisibleOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getSeries:member(1)",
                  "docComment": "/**\n * Represents either a single series or collection of series in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSeries(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeries",
                      "canonicalReference": "excel!ExcelScript.ChartSeries:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSeries"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getSeriesNameLevel:member(1)",
                  "docComment": "/**\n * Specifies a ChartSeriesNameLevel enumeration constant referring to the level of where the series names are being sourced from.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSeriesNameLevel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSeriesNameLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getShowAllFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display all field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowAllFieldButtons(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowAllFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getShowDataLabelsOverMaximum:member(1)",
                  "docComment": "/**\n * Specifies whether to show the data labels when the value is greater than the maximum value on the value axis. If value axis became smaller than the size of data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowDataLabelsOverMaximum(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowDataLabelsOverMaximum"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getStyle:member(1)",
                  "docComment": "/**\n * Specifies the chart style for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStyle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getTitle:member(1)",
                  "docComment": "/**\n * Specifies the title of the specified chart, including the text, visibility, position, and formatting of the title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTitle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitle",
                      "canonicalReference": "excel!ExcelScript.ChartTitle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTitle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getTop:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#getWorksheet:member(1)",
                  "docComment": "/**\n * The worksheet containing the current chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setCategoryLabelLevel:member(1)",
                  "docComment": "/**\n * Specifies a ChartCategoryLabelLevel enumeration constant referring to the level of where the category labels are being sourced from. Read/Write.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCategoryLabelLevel(categoryLabelLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "categoryLabelLevel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCategoryLabelLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setChartType:member(1)",
                  "docComment": "/**\n * Specifies the type of the chart. See Excel.ChartType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setChartType(chartType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!ExcelScript.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "chartType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setChartType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setData:member(1)",
                  "docComment": "/**\n * Resets the source data for the chart.\n *\n * @param sourceData - The range object corresponding to the source data.\n *\n * @param seriesBy - Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto (default), Rows, and Columns. See Excel.ChartSeriesBy for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setData(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", seriesBy?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesBy",
                      "canonicalReference": "excel!ExcelScript.ChartSeriesBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "seriesBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "setData"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setDisplayBlanksAs:member(1)",
                  "docComment": "/**\n * Specifies the way that blank cells are plotted on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDisplayBlanksAs(displayBlanksAs: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDisplayBlanksAs",
                      "canonicalReference": "excel!ExcelScript.ChartDisplayBlanksAs:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "displayBlanksAs",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setDisplayBlanksAs"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHeight(height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setLeft:member(1)",
                  "docComment": "/**\n * The distance, in points, from the left side of the chart to the worksheet origin.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setName:member(1)",
                  "docComment": "/**\n * Specifies the name of a chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setPlotBy:member(1)",
                  "docComment": "/**\n * Specifies the way columns or rows are used as data series on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPlotBy(plotBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotBy",
                      "canonicalReference": "excel!ExcelScript.ChartPlotBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "plotBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPlotBy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setPlotVisibleOnly:member(1)",
                  "docComment": "/**\n * True if only visible cells are plotted. False if both visible and hidden cells are plotted.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPlotVisibleOnly(plotVisibleOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "plotVisibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPlotVisibleOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setPosition:member(1)",
                  "docComment": "/**\n * Positions the chart relative to cells on the worksheet.\n *\n * @param startCell - The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.\n *\n * @param endCell - (Optional) The end cell. If specified, the chart's width and height will be set to fully cover up this cell/range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(startCell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", endCell?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "startCell",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "endCell",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setSeriesNameLevel:member(1)",
                  "docComment": "/**\n * Specifies a ChartSeriesNameLevel enumeration constant referring to the level of where the series names are being sourced from.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSeriesNameLevel(seriesNameLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "seriesNameLevel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSeriesNameLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setShowAllFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display all field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowAllFieldButtons(showAllFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showAllFieldButtons",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowAllFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setShowDataLabelsOverMaximum:member(1)",
                  "docComment": "/**\n * Specifies whether to show the data labels when the value is greater than the maximum value on the value axis. If value axis became smaller than the size of data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowDataLabelsOverMaximum(showDataLabelsOverMaximum: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showDataLabelsOverMaximum",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowDataLabelsOverMaximum"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setStyle:member(1)",
                  "docComment": "/**\n * Specifies the chart style for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStyle(style: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "style",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setTop:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Chart#setWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWidth(width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWidth"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartAreaFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the overall chart area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAreaFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAreaFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#getBorder:member(1)",
                  "docComment": "/**\n * Represents the border format of chart area, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#getColorScheme:member(1)",
                  "docComment": "/**\n * Specifies the color scheme of the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColorScheme(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartColorScheme",
                      "canonicalReference": "excel!ExcelScript.ChartColorScheme:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColorScheme"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#getFill:member(1)",
                  "docComment": "/**\n * Represents the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#getFont:member(1)",
                  "docComment": "/**\n * Represents the font attributes (font name, font size, color, etc.) for the current object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#getRoundedCorners:member(1)",
                  "docComment": "/**\n * Specifies if the chart area of the chart has rounded corners.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRoundedCorners(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRoundedCorners"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#setColorScheme:member(1)",
                  "docComment": "/**\n * Specifies the color scheme of the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColorScheme(colorScheme: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartColorScheme",
                      "canonicalReference": "excel!ExcelScript.ChartColorScheme:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "colorScheme",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColorScheme"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAreaFormat#setRoundedCorners:member(1)",
                  "docComment": "/**\n * Specifies if the chart area of the chart has rounded corners.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRoundedCorners(roundedCorners: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "roundedCorners",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRoundedCorners"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartAxes:interface",
              "docComment": "/**\n * Represents the chart axes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxes "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxes",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxes#getCategoryAxis:member(1)",
                  "docComment": "/**\n * Represents the category axis in a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCategoryAxis(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!ExcelScript.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCategoryAxis"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxes#getSeriesAxis:member(1)",
                  "docComment": "/**\n * Represents the series axis of a 3-dimensional chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSeriesAxis(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!ExcelScript.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSeriesAxis"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxes#getValueAxis:member(1)",
                  "docComment": "/**\n * Represents the value axis in an axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValueAxis(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!ExcelScript.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValueAxis"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartAxis:interface",
              "docComment": "/**\n * Represents a single axis in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxis "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxis",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getAlignment:member(1)",
                  "docComment": "/**\n * Specifies the alignment for the specified axis tick label. See Excel.ChartTextHorizontalAlignment for detail.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTickLabelAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTickLabelAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getAxisGroup:member(1)",
                  "docComment": "/**\n * Specifies the group for the specified axis. See Excel.ChartAxisGroup for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAxisGroup(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisGroup",
                      "canonicalReference": "excel!ExcelScript.ChartAxisGroup:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAxisGroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getBaseTimeUnit:member(1)",
                  "docComment": "/**\n * Specifies the base unit for the specified category axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBaseTimeUnit(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBaseTimeUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getCategoryType:member(1)",
                  "docComment": "/**\n * Specifies the category axis type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCategoryType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisCategoryType",
                      "canonicalReference": "excel!ExcelScript.ChartAxisCategoryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCategoryType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getCustomDisplayUnit:member(1)",
                  "docComment": "/**\n * Specifies the custom axis display unit value. To set this property, please use the SetCustomDisplayUnit(double) method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCustomDisplayUnit(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCustomDisplayUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getDisplayUnit:member(1)",
                  "docComment": "/**\n * Represents the axis display unit. See Excel.ChartAxisDisplayUnit for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDisplayUnit(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisDisplayUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDisplayUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getFormat:member(1)",
                  "docComment": "/**\n * Represents the formatting of a chart object, which includes line and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisFormat",
                      "canonicalReference": "excel!ExcelScript.ChartAxisFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the chart axis. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getIsBetweenCategories:member(1)",
                  "docComment": "/**\n * Specifies if the value axis crosses the category axis between categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsBetweenCategories(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsBetweenCategories"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getLeft:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the left edge of the axis to the left of chart area. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells. If true, the number format will change in the labels when it changes in the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinkNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getLogBase:member(1)",
                  "docComment": "/**\n * Specifies the base of the logarithm when using logarithmic scales.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLogBase(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLogBase"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMajorGridlines:member(1)",
                  "docComment": "/**\n * Returns a Gridlines object that represents the major gridlines for the specified axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMajorGridlines(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGridlines",
                      "canonicalReference": "excel!ExcelScript.ChartGridlines:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMajorGridlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMajorTickMark:member(1)",
                  "docComment": "/**\n * Specifies the type of major tick mark for the specified axis. See Excel.ChartAxisTickMark for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMajorTickMark(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickMark",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTickMark:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMajorTickMark"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMajorTimeUnitScale:member(1)",
                  "docComment": "/**\n * Specifies the major unit scale value for the category axis when the CategoryType property is set to TimeScale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMajorTimeUnitScale(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMajorTimeUnitScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMajorUnit:member(1)",
                  "docComment": "/**\n * Represents the interval between two major tick marks. Can be set to a numeric value or an empty string. The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMajorUnit(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMajorUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMaximum:member(1)",
                  "docComment": "/**\n * Represents the maximum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMaximum(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMaximum"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMinimum:member(1)",
                  "docComment": "/**\n * Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMinimum(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMinimum"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMinorGridlines:member(1)",
                  "docComment": "/**\n * Returns a Gridlines object that represents the minor gridlines for the specified axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMinorGridlines(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGridlines",
                      "canonicalReference": "excel!ExcelScript.ChartGridlines:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMinorGridlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMinorTickMark:member(1)",
                  "docComment": "/**\n * Specifies the type of minor tick mark for the specified axis. See Excel.ChartAxisTickMark for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMinorTickMark(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickMark",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTickMark:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMinorTickMark"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMinorTimeUnitScale:member(1)",
                  "docComment": "/**\n * Specifies the minor unit scale value for the category axis when the CategoryType property is set to TimeScale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMinorTimeUnitScale(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMinorTimeUnitScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMinorUnit:member(1)",
                  "docComment": "/**\n * Represents the interval between two minor tick marks. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMinorUnit(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMinorUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getMultiLevel:member(1)",
                  "docComment": "/**\n * Specifies if an axis is multilevel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMultiLevel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMultiLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies the format code for the axis tick label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getOffset:member(1)",
                  "docComment": "/**\n * Specifies the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOffset(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOffset"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getPosition:member(1)",
                  "docComment": "/**\n * Specifies the specified axis position where the other axis crosses. See Excel.ChartAxisPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisPosition",
                      "canonicalReference": "excel!ExcelScript.ChartAxisPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getPositionAt:member(1)",
                  "docComment": "/**\n * Specifies the specified axis position where the other axis crosses at. You should use the SetPositionAt(double) method to set this property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPositionAt(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPositionAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getReversePlotOrder:member(1)",
                  "docComment": "/**\n * Specifies if Excel plots data points from last to first.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReversePlotOrder(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReversePlotOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getScaleType:member(1)",
                  "docComment": "/**\n * Specifies the value axis scale type. See Excel.ChartAxisScaleType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getScaleType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisScaleType",
                      "canonicalReference": "excel!ExcelScript.ChartAxisScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getScaleType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getShowDisplayUnitLabel:member(1)",
                  "docComment": "/**\n * Specifies if the axis display unit label is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowDisplayUnitLabel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowDisplayUnitLabel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getTextOrientation:member(1)",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart axis tick label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getTickLabelPosition:member(1)",
                  "docComment": "/**\n * Specifies the position of tick-mark labels on the specified axis. See Excel.ChartAxisTickLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTickLabelPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickLabelPosition",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTickLabelPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getTickLabelSpacing:member(1)",
                  "docComment": "/**\n * Specifies the number of categories or series between tick-mark labels. Can be a value from 1 through 31999 or an empty string for automatic setting. The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTickLabelSpacing(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTickLabelSpacing"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getTickMarkSpacing:member(1)",
                  "docComment": "/**\n * Specifies the number of categories or series between tick marks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTickMarkSpacing(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTickMarkSpacing"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getTitle:member(1)",
                  "docComment": "/**\n * Represents the axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTitle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTitle",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTitle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTitle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getTop:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of the axis to the top of chart area. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getType:member(1)",
                  "docComment": "/**\n * Specifies the axis type. See Excel.ChartAxisType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisType",
                      "canonicalReference": "excel!ExcelScript.ChartAxisType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the axis is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#getWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the chart axis. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setAlignment:member(1)",
                  "docComment": "/**\n * Specifies the alignment for the specified axis tick label. See Excel.ChartTextHorizontalAlignment for detail.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAlignment(alignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTickLabelAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTickLabelAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "alignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setBaseTimeUnit:member(1)",
                  "docComment": "/**\n * Specifies the base unit for the specified category axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBaseTimeUnit(baseTimeUnit: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "baseTimeUnit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBaseTimeUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setCategoryNames:member(1)",
                  "docComment": "/**\n * Sets all the category names for the specified axis.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCategoryNames(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCategoryNames"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setCategoryType:member(1)",
                  "docComment": "/**\n * Specifies the category axis type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCategoryType(categoryType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisCategoryType",
                      "canonicalReference": "excel!ExcelScript.ChartAxisCategoryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "categoryType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCategoryType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setCustomDisplayUnit:member(1)",
                  "docComment": "/**\n * Sets the axis display unit to a custom value.\n *\n * @param value - Custom value of the display unit.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCustomDisplayUnit(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCustomDisplayUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setDisplayUnit:member(1)",
                  "docComment": "/**\n * Represents the axis display unit. See Excel.ChartAxisDisplayUnit for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDisplayUnit(displayUnit: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisDisplayUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "displayUnit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setDisplayUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setIsBetweenCategories:member(1)",
                  "docComment": "/**\n * Specifies if the value axis crosses the category axis between categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIsBetweenCategories(isBetweenCategories: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "isBetweenCategories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIsBetweenCategories"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells. If true, the number format will change in the labels when it changes in the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLinkNumberFormat(linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "linkNumberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setLogBase:member(1)",
                  "docComment": "/**\n * Specifies the base of the logarithm when using logarithmic scales.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLogBase(logBase: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "logBase",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLogBase"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMajorTickMark:member(1)",
                  "docComment": "/**\n * Specifies the type of major tick mark for the specified axis. See Excel.ChartAxisTickMark for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMajorTickMark(majorTickMark: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickMark",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTickMark:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "majorTickMark",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMajorTickMark"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMajorTimeUnitScale:member(1)",
                  "docComment": "/**\n * Specifies the major unit scale value for the category axis when the CategoryType property is set to TimeScale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMajorTimeUnitScale(majorTimeUnitScale: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "majorTimeUnitScale",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMajorTimeUnitScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMajorUnit:member(1)",
                  "docComment": "/**\n * Represents the interval between two major tick marks. Can be set to a numeric value or an empty string. The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMajorUnit(majorUnit: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "majorUnit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMajorUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMaximum:member(1)",
                  "docComment": "/**\n * Represents the maximum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMaximum(maximum: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "maximum",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMaximum"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMinimum:member(1)",
                  "docComment": "/**\n * Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMinimum(minimum: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "minimum",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMinimum"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMinorTickMark:member(1)",
                  "docComment": "/**\n * Specifies the type of minor tick mark for the specified axis. See Excel.ChartAxisTickMark for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMinorTickMark(minorTickMark: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickMark",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTickMark:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "minorTickMark",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMinorTickMark"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMinorTimeUnitScale:member(1)",
                  "docComment": "/**\n * Specifies the minor unit scale value for the category axis when the CategoryType property is set to TimeScale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMinorTimeUnitScale(minorTimeUnitScale: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "minorTimeUnitScale",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMinorTimeUnitScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMinorUnit:member(1)",
                  "docComment": "/**\n * Represents the interval between two minor tick marks. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMinorUnit(minorUnit: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "minorUnit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMinorUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setMultiLevel:member(1)",
                  "docComment": "/**\n * Specifies if an axis is multilevel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMultiLevel(multiLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "multiLevel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMultiLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies the format code for the axis tick label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setOffset:member(1)",
                  "docComment": "/**\n * Specifies the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOffset(offset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "offset",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOffset"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setPosition:member(1)",
                  "docComment": "/**\n * Specifies the specified axis position where the other axis crosses. See Excel.ChartAxisPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisPosition",
                      "canonicalReference": "excel!ExcelScript.ChartAxisPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setPositionAt:member(1)",
                  "docComment": "/**\n * Sets the specified axis position where the other axis crosses at.\n *\n * @param value - Custom value of the crosses at\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPositionAt(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPositionAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setReversePlotOrder:member(1)",
                  "docComment": "/**\n * Specifies if Excel plots data points from last to first.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setReversePlotOrder(reversePlotOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "reversePlotOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setReversePlotOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setScaleType:member(1)",
                  "docComment": "/**\n * Specifies the value axis scale type. See Excel.ChartAxisScaleType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setScaleType(scaleType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisScaleType",
                      "canonicalReference": "excel!ExcelScript.ChartAxisScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "scaleType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setScaleType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setShowDisplayUnitLabel:member(1)",
                  "docComment": "/**\n * Specifies if the axis display unit label is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowDisplayUnitLabel(showDisplayUnitLabel: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showDisplayUnitLabel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowDisplayUnitLabel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setTextOrientation:member(1)",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart axis tick label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setTickLabelPosition:member(1)",
                  "docComment": "/**\n * Specifies the position of tick-mark labels on the specified axis. See Excel.ChartAxisTickLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTickLabelPosition(\n            tickLabelPosition: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickLabelPosition",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tickLabelPosition",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setTickLabelPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setTickLabelSpacing:member(1)",
                  "docComment": "/**\n * Specifies the number of categories or series between tick-mark labels. Can be a value from 1 through 31999 or an empty string for automatic setting. The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTickLabelSpacing(tickLabelSpacing: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tickLabelSpacing",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTickLabelSpacing"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setTickMarkSpacing:member(1)",
                  "docComment": "/**\n * Specifies the number of categories or series between tick marks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTickMarkSpacing(tickMarkSpacing: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tickMarkSpacing",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTickMarkSpacing"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxis#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the axis is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisCategoryType:enum",
              "docComment": "/**\n * Specifies the type of the category axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisCategoryType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisCategoryType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisCategoryType.automatic:member",
                  "docComment": "/**\n * Excel controls the axis type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisCategoryType.dateAxis:member",
                  "docComment": "/**\n * Axis groups data on a time scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dateAxis"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dateAxis",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisCategoryType.textAxis:member",
                  "docComment": "/**\n * Axis groups data by an arbitrary set of categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textAxis"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textAxis",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisDisplayUnit "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisDisplayUnit",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.billions:member",
                  "docComment": "/**\n * This will set the axis in units of billions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "billions"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "billions",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.custom:member",
                  "docComment": "/**\n * This will set the axis in units of custom value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.hundredMillions:member",
                  "docComment": "/**\n * This will set the axis in units of hundreds of millions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hundredMillions"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hundredMillions",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.hundreds:member",
                  "docComment": "/**\n * This will set the axis in units of hundreds.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hundreds"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hundreds",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.hundredThousands:member",
                  "docComment": "/**\n * This will set the axis in units of hundreds of thousands.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hundredThousands"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hundredThousands",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.millions:member",
                  "docComment": "/**\n * This will set the axis in units of millions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "millions"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "millions",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.none:member",
                  "docComment": "/**\n * Default option. This will reset display unit to the axis, and set unit label invisible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.tenMillions:member",
                  "docComment": "/**\n * This will set the axis in units of tens of millions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tenMillions"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tenMillions",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.tenThousands:member",
                  "docComment": "/**\n * This will set the axis in units of tens of thousands.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tenThousands"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tenThousands",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.thousands:member",
                  "docComment": "/**\n * This will set the axis in units of thousands.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thousands"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thousands",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisDisplayUnit.trillions:member",
                  "docComment": "/**\n * This will set the axis in units of trillions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "trillions"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "trillions",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartAxisFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxisFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisFormat#getFill:member(1)",
                  "docComment": "/**\n * Specifies chart fill formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisFormat#getFont:member(1)",
                  "docComment": "/**\n * Specifies the font attributes (font name, font size, color, etc.) for a chart axis element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisFormat#getLine:member(1)",
                  "docComment": "/**\n * Specifies chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLine(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!ExcelScript.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLine"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisGroup:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisGroup "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisGroup",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisGroup.primary:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "primary"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "primary",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisGroup.secondary:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "secondary"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "secondary",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisPosition.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisPosition.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisPosition.maximum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maximum"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maximum",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisPosition.minimum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minimum"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minimum",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisScaleType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisScaleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisScaleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisScaleType.linear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linear"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linear",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisScaleType.logarithmic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logarithmic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logarithmic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisTickLabelPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTickLabelPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition.high:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "high"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "high",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition.low:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "low"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "low",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition.nextToAxis:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextToAxis"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextToAxis",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickLabelPosition.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisTickMark:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisTickMark "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTickMark",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickMark.cross:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cross"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cross",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickMark.inside:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inside"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inside",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickMark.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTickMark.outside:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "outside"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outside",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit:enum",
              "docComment": "/**\n * Specifies the unit of time for chart axes and data series.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisTimeUnit "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTimeUnit",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit.days:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "days"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "days",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit.months:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "months"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "months",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTimeUnit.years:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "years"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "years",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartAxisTitle:interface",
              "docComment": "/**\n * Represents the title of a chart axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxisTitle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTitle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitle#getFormat:member(1)",
                  "docComment": "/**\n * Specifies the formatting of chart axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTitleFormat",
                      "canonicalReference": "excel!ExcelScript.ChartAxisTitleFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitle#getText:member(1)",
                  "docComment": "/**\n * Specifies the axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitle#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the axis title is visibile.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitle#setFormula:member(1)",
                  "docComment": "/**\n * A string value that represents the formula of chart axis title using A1-style notation.\n *\n * @param formula - a string that present the formula to set\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitle#setText:member(1)",
                  "docComment": "/**\n * Specifies the axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setText(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitle#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the axis title is visibile.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartAxisTitleFormat:interface",
              "docComment": "/**\n * Represents the chart axis title formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxisTitleFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTitleFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitleFormat#getBorder:member(1)",
                  "docComment": "/**\n * Specifies the chart axis title's border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitleFormat#getFill:member(1)",
                  "docComment": "/**\n * Specifies the chart axis title's fill formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartAxisTitleFormat#getFont:member(1)",
                  "docComment": "/**\n * Specifies the chart axis title's font attributes, such as font name, font size, color, etc. of chart axis title object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartAxisType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisType.category:member",
                  "docComment": "/**\n * Axis displays categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "category"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "category",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisType.series:member",
                  "docComment": "/**\n * Axis displays data series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "series"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "series",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartAxisType.value:member",
                  "docComment": "/**\n * Axis displays values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartBinOptions:interface",
              "docComment": "/**\n * Encapsulates the bin options for histogram charts and pareto charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartBinOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBinOptions",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getAllowOverflow:member(1)",
                  "docComment": "/**\n * Specifies if bin overflow is enabled in a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllowOverflow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAllowOverflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getAllowUnderflow:member(1)",
                  "docComment": "/**\n * Specifies if bin underflow is enabled in a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllowUnderflow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAllowUnderflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getCount:member(1)",
                  "docComment": "/**\n * Specifies the bin count of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getOverflowValue:member(1)",
                  "docComment": "/**\n * Specifies the bin overflow value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOverflowValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOverflowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getType:member(1)",
                  "docComment": "/**\n * Specifies the bin's type for a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBinType",
                      "canonicalReference": "excel!ExcelScript.ChartBinType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getUnderflowValue:member(1)",
                  "docComment": "/**\n * Specifies the bin underflow value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUnderflowValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUnderflowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#getWidth:member(1)",
                  "docComment": "/**\n * Specifies the bin width value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setAllowOverflow:member(1)",
                  "docComment": "/**\n * Specifies if bin overflow is enabled in a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAllowOverflow(allowOverflow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "allowOverflow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAllowOverflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setAllowUnderflow:member(1)",
                  "docComment": "/**\n * Specifies if bin underflow is enabled in a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAllowUnderflow(allowUnderflow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "allowUnderflow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAllowUnderflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setCount:member(1)",
                  "docComment": "/**\n * Specifies the bin count of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCount(count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setOverflowValue:member(1)",
                  "docComment": "/**\n * Specifies the bin overflow value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOverflowValue(overflowValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "overflowValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOverflowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setType:member(1)",
                  "docComment": "/**\n * Specifies the bin's type for a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setType(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBinType",
                      "canonicalReference": "excel!ExcelScript.ChartBinType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setUnderflowValue:member(1)",
                  "docComment": "/**\n * Specifies the bin underflow value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUnderflowValue(underflowValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "underflowValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUnderflowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBinOptions#setWidth:member(1)",
                  "docComment": "/**\n * Specifies the bin width value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWidth(width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWidth"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartBinType:enum",
              "docComment": "/**\n * Specifies the bin's type of a histogram chart or pareto chart series.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartBinType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBinType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartBinType.auto:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "auto"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "auto",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartBinType.binCount:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "binCount"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "binCount",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartBinType.binWidth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "binWidth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "binWidth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartBinType.category:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "category"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "category",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartBorder:interface",
              "docComment": "/**\n * Represents the border formatting of a chart element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBorder",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#clear:member(1)",
                  "docComment": "/**\n * Clear the border format of a chart element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of borders in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#getLineStyle:member(1)",
                  "docComment": "/**\n * Represents the line style of the border. See Excel.ChartLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLineStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineStyle",
                      "canonicalReference": "excel!ExcelScript.ChartLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#getWeight:member(1)",
                  "docComment": "/**\n * Represents weight of the border, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of borders in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#setLineStyle:member(1)",
                  "docComment": "/**\n * Represents the line style of the border. See Excel.ChartLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLineStyle(lineStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineStyle",
                      "canonicalReference": "excel!ExcelScript.ChartLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "lineStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBorder#setWeight:member(1)",
                  "docComment": "/**\n * Represents weight of the border, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWeight(weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "weight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWeight"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartBoxQuartileCalculation:enum",
              "docComment": "/**\n * Represents the quartile calculation type of chart series layout. Only applies to a box and whisker chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartBoxQuartileCalculation "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBoxQuartileCalculation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartBoxQuartileCalculation.exclusive:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "exclusive"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "exclusive",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartBoxQuartileCalculation.inclusive:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inclusive"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inclusive",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions:interface",
              "docComment": "/**\n * Represents the properties of a box and whisker chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartBoxwhiskerOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBoxwhiskerOptions",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#getQuartileCalculation:member(1)",
                  "docComment": "/**\n * Specifies if the quartile calculation type of a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getQuartileCalculation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBoxQuartileCalculation",
                      "canonicalReference": "excel!ExcelScript.ChartBoxQuartileCalculation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getQuartileCalculation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#getShowInnerPoints:member(1)",
                  "docComment": "/**\n * Specifies if inner points are shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowInnerPoints(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowInnerPoints"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#getShowMeanLine:member(1)",
                  "docComment": "/**\n * Specifies if the mean line is shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowMeanLine(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowMeanLine"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#getShowMeanMarker:member(1)",
                  "docComment": "/**\n * Specifies if the mean marker is shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowMeanMarker(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowMeanMarker"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#getShowOutlierPoints:member(1)",
                  "docComment": "/**\n * Specifies if outlier points are shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowOutlierPoints(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowOutlierPoints"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#setQuartileCalculation:member(1)",
                  "docComment": "/**\n * Specifies if the quartile calculation type of a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setQuartileCalculation(\n            quartileCalculation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBoxQuartileCalculation",
                      "canonicalReference": "excel!ExcelScript.ChartBoxQuartileCalculation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "quartileCalculation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setQuartileCalculation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#setShowInnerPoints:member(1)",
                  "docComment": "/**\n * Specifies if inner points are shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowInnerPoints(showInnerPoints: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showInnerPoints",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowInnerPoints"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#setShowMeanLine:member(1)",
                  "docComment": "/**\n * Specifies if the mean line is shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowMeanLine(showMeanLine: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showMeanLine",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowMeanLine"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#setShowMeanMarker:member(1)",
                  "docComment": "/**\n * Specifies if the mean marker is shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowMeanMarker(showMeanMarker: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showMeanMarker",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowMeanMarker"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions#setShowOutlierPoints:member(1)",
                  "docComment": "/**\n * Specifies if outlier points are shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowOutlierPoints(showOutlierPoints: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showOutlierPoints",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowOutlierPoints"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartColorScheme:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartColorScheme "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartColorScheme",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.colorfulPalette1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.colorfulPalette2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.colorfulPalette3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.colorfulPalette4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette10:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette10"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette10",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette11:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette11"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette11",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette12:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette12"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette12",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette13:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette13"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette13",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette6"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette6",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette7:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette7"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette7",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette8:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette8"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette8",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartColorScheme.monochromaticPalette9:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette9"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette9",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartDataLabel:interface",
              "docComment": "/**\n * Represents the data label of a chart point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartDataLabel "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabel",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getAutoText:member(1)",
                  "docComment": "/**\n * Specifies if the data label automatically generates appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getFormat:member(1)",
                  "docComment": "/**\n * Represents the format of chart data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelFormat",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabelFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getFormula:member(1)",
                  "docComment": "/**\n * String value that represents the formula of chart data label using A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormula(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getHeight:member(1)",
                  "docComment": "/**\n * Returns the height, in points, of the chart data label. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for chart data label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of data label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getLeft:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the left edge of chart data label to the left edge of chart area. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinkNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getNumberFormat:member(1)",
                  "docComment": "/**\n * String value that represents the format code for data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getPosition:member(1)",
                  "docComment": "/**\n * DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelPosition",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getSeparator:member(1)",
                  "docComment": "/**\n * String representing the separator used for the data label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSeparator(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSeparator"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getShowBubbleSize:member(1)",
                  "docComment": "/**\n * Specifies if the data label bubble size is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowBubbleSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowBubbleSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getShowCategoryName:member(1)",
                  "docComment": "/**\n * Specifies if the data label category name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowCategoryName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowCategoryName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getShowLegendKey:member(1)",
                  "docComment": "/**\n * Specifies if the data label legend key is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowLegendKey(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowLegendKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getShowPercentage:member(1)",
                  "docComment": "/**\n * Specifies if the data label percentage is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowPercentage(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowPercentage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getShowSeriesName:member(1)",
                  "docComment": "/**\n * Specifies if the data label series name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowSeriesName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowSeriesName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getShowValue:member(1)",
                  "docComment": "/**\n * Specifies if the data label value is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getText:member(1)",
                  "docComment": "/**\n * String representing the text of the data label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getTextOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the chart data label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getTop:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of chart data label to the top of chart area. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of chart data label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of data label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#getWidth:member(1)",
                  "docComment": "/**\n * Returns the width, in points, of the chart data label. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setAutoText:member(1)",
                  "docComment": "/**\n * Specifies if the data label automatically generates appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoText(autoText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoText",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setFormula:member(1)",
                  "docComment": "/**\n * String value that represents the formula of chart data label using A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for chart data label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of data label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(\n            horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setLeft:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the left edge of chart data label to the left edge of chart area. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLinkNumberFormat(linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "linkNumberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setNumberFormat:member(1)",
                  "docComment": "/**\n * String value that represents the format code for data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setPosition:member(1)",
                  "docComment": "/**\n * DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelPosition",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setSeparator:member(1)",
                  "docComment": "/**\n * String representing the separator used for the data label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSeparator(separator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "separator",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSeparator"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setShowBubbleSize:member(1)",
                  "docComment": "/**\n * Specifies if the data label bubble size is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowBubbleSize(showBubbleSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showBubbleSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowBubbleSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setShowCategoryName:member(1)",
                  "docComment": "/**\n * Specifies if the data label category name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowCategoryName(showCategoryName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showCategoryName",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowCategoryName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setShowLegendKey:member(1)",
                  "docComment": "/**\n * Specifies if the data label legend key is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowLegendKey(showLegendKey: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showLegendKey",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowLegendKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setShowPercentage:member(1)",
                  "docComment": "/**\n * Specifies if the data label percentage is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowPercentage(showPercentage: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showPercentage",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowPercentage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setShowSeriesName:member(1)",
                  "docComment": "/**\n * Specifies if the data label series name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowSeriesName(showSeriesName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showSeriesName",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowSeriesName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setShowValue:member(1)",
                  "docComment": "/**\n * Specifies if the data label value is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowValue(showValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setText:member(1)",
                  "docComment": "/**\n * String representing the text of the data label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setText(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setTextOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the chart data label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setTop:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of chart data label to the top of chart area. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabel#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of chart data label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of data label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(\n            verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartDataLabelFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart data labels.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartDataLabelFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabelFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelFormat#getBorder:member(1)",
                  "docComment": "/**\n * Represents the border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelFormat#getFill:member(1)",
                  "docComment": "/**\n * Represents the fill format of the current chart data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelFormat#getFont:member(1)",
                  "docComment": "/**\n * Represents the font attributes (font name, font size, color, etc.) for a chart data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartDataLabelPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabelPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.bestFit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bestFit"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bestFit",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.callout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.insideBase:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideBase"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideBase",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.insideEnd:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideEnd"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideEnd",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.outsideEnd:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "outsideEnd"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outsideEnd",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartDataLabels:interface",
              "docComment": "/**\n * Represents a collection of all the data labels on a chart point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartDataLabels "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabels",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getAutoText:member(1)",
                  "docComment": "/**\n * Specifies if data labels automatically generate appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getFormat:member(1)",
                  "docComment": "/**\n * Specifies the format of chart data labels, which includes fill and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelFormat",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabelFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the horizontal alignment for chart data label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of data label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells. If true, the number format will change in the labels when it changes in the cells\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinkNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies the format code for data labels.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getPosition:member(1)",
                  "docComment": "/**\n * DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelPosition",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getSeparator:member(1)",
                  "docComment": "/**\n * String representing the separator used for the data labels on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSeparator(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSeparator"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getShowBubbleSize:member(1)",
                  "docComment": "/**\n * Specifies if the data label bubble size is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowBubbleSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowBubbleSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getShowCategoryName:member(1)",
                  "docComment": "/**\n * Specifies if the data label category name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowCategoryName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowCategoryName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getShowLegendKey:member(1)",
                  "docComment": "/**\n * Specifies if the data label legend key is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowLegendKey(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowLegendKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getShowPercentage:member(1)",
                  "docComment": "/**\n * Specifies if the data label percentage is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowPercentage(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowPercentage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getShowSeriesName:member(1)",
                  "docComment": "/**\n * Specifies if the data label series name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowSeriesName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowSeriesName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getShowValue:member(1)",
                  "docComment": "/**\n * Specifies if the data label value is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getTextOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for data labels. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of chart data label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of data label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setAutoText:member(1)",
                  "docComment": "/**\n * Specifies if data labels automatically generate appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoText(autoText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoText",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the horizontal alignment for chart data label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of data label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(\n            horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells. If true, the number format will change in the labels when it changes in the cells\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLinkNumberFormat(linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "linkNumberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies the format code for data labels.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setPosition:member(1)",
                  "docComment": "/**\n * DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelPosition",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setSeparator:member(1)",
                  "docComment": "/**\n * String representing the separator used for the data labels on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSeparator(separator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "separator",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSeparator"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setShowBubbleSize:member(1)",
                  "docComment": "/**\n * Specifies if the data label bubble size is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowBubbleSize(showBubbleSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showBubbleSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowBubbleSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setShowCategoryName:member(1)",
                  "docComment": "/**\n * Specifies if the data label category name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowCategoryName(showCategoryName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showCategoryName",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowCategoryName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setShowLegendKey:member(1)",
                  "docComment": "/**\n * Specifies if the data label legend key is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowLegendKey(showLegendKey: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showLegendKey",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowLegendKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setShowPercentage:member(1)",
                  "docComment": "/**\n * Specifies if the data label percentage is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowPercentage(showPercentage: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showPercentage",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowPercentage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setShowSeriesName:member(1)",
                  "docComment": "/**\n * Specifies if the data label series name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowSeriesName(showSeriesName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showSeriesName",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowSeriesName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setShowValue:member(1)",
                  "docComment": "/**\n * Specifies if the data label value is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowValue(showValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setTextOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for data labels. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartDataLabels#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of chart data label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of data label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(\n            verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartDisplayBlanksAs:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartDisplayBlanksAs "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDisplayBlanksAs",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDisplayBlanksAs.interplotted:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interplotted"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "interplotted",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDisplayBlanksAs.notPlotted:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notPlotted"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notPlotted",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartDisplayBlanksAs.zero:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "zero"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "zero",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartErrorBars:interface",
              "docComment": "/**\n * This object represents the attributes for a chart's error bars.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartErrorBars "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBars",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#getEndStyleCap:member(1)",
                  "docComment": "/**\n * Specifies if error bars have an end style cap.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndStyleCap(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndStyleCap"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#getFormat:member(1)",
                  "docComment": "/**\n * Specifies the formatting type of the error bars.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsFormat",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBarsFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#getInclude:member(1)",
                  "docComment": "/**\n * Specifies which parts of the error bars to include.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInclude(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsInclude",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBarsInclude:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInclude"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#getType:member(1)",
                  "docComment": "/**\n * The type of range marked by the error bars.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsType",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBarsType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#getVisible:member(1)",
                  "docComment": "/**\n * Specifies whether the error bars are displayed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#setEndStyleCap:member(1)",
                  "docComment": "/**\n * Specifies if error bars have an end style cap.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEndStyleCap(endStyleCap: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "endStyleCap",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEndStyleCap"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#setInclude:member(1)",
                  "docComment": "/**\n * Specifies which parts of the error bars to include.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInclude(include: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsInclude",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBarsInclude:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "include",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInclude"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#setType:member(1)",
                  "docComment": "/**\n * The type of range marked by the error bars.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setType(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsType",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBarsType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBars#setVisible:member(1)",
                  "docComment": "/**\n * Specifies whether the error bars are displayed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartErrorBarsFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for chart error bars.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartErrorBarsFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBarsFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsFormat#getLine:member(1)",
                  "docComment": "/**\n * Represents the chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLine(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!ExcelScript.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLine"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartErrorBarsInclude:enum",
              "docComment": "/**\n * Represents which parts of the error bar to include.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartErrorBarsInclude "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBarsInclude",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsInclude.both:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "both"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "both",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsInclude.minusValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minusValues"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minusValues",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsInclude.plusValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plusValues"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plusValues",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartErrorBarsType:enum",
              "docComment": "/**\n * Represents the range type for error bars.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartErrorBarsType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBarsType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsType.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsType.fixedValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fixedValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fixedValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsType.stDev:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stDev"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stDev",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartErrorBarsType.stError:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stError"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stError",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartFill:interface",
              "docComment": "/**\n * Represents the fill formatting for a chart element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartFill "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFill#clear:member(1)",
                  "docComment": "/**\n * Clear the fill color of a chart element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFill#setSolidColor:member(1)",
                  "docComment": "/**\n * Sets the fill formatting of a chart element to a uniform color.\n *\n * @param color - HTML color code representing the color of the background, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSolidColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSolidColor"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartFont:interface",
              "docComment": "/**\n * This object represents the font attributes (font name, font size, color, etc.) for a chart object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartFont "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartFont",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#getBold:member(1)",
                  "docComment": "/**\n * Represents the bold status of font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBold(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#getItalic:member(1)",
                  "docComment": "/**\n * Represents the italic status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItalic(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#getName:member(1)",
                  "docComment": "/**\n * Font name (e.g. \"Calibri\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#getSize:member(1)",
                  "docComment": "/**\n * Size of the font (e.g. 11)\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#getUnderline:member(1)",
                  "docComment": "/**\n * Type of underline applied to the font. See Excel.ChartUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUnderline(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.ChartUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUnderline"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#setBold:member(1)",
                  "docComment": "/**\n * Represents the bold status of font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBold(bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bold",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#setItalic:member(1)",
                  "docComment": "/**\n * Represents the italic status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setItalic(italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "italic",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#setName:member(1)",
                  "docComment": "/**\n * Font name (e.g. \"Calibri\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#setSize:member(1)",
                  "docComment": "/**\n * Size of the font (e.g. 11)\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSize(size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "size",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFont#setUnderline:member(1)",
                  "docComment": "/**\n * Type of underline applied to the font. See Excel.ChartUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUnderline(underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.ChartUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "underline",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUnderline"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartFormatString:interface",
              "docComment": "/**\n * Represents the substring in chart related objects that contains text, like ChartTitle object, ChartAxisTitle object, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartFormatString "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartFormatString",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartFormatString#getFont:member(1)",
                  "docComment": "/**\n * Represents the font attributes, such as font name, font size, color, etc. of chart characters object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartGradientStyle:enum",
              "docComment": "/**\n * Represents the gradient style of a chart series. This is only applicable for region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartGradientStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGradientStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartGradientStyle.threePhaseColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threePhaseColor"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threePhaseColor",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartGradientStyle.twoPhaseColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoPhaseColor"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoPhaseColor",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum",
              "docComment": "/**\n * Represents the gradient style type of a chart series. This is only applicable for region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartGradientStyleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGradientStyleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartGradientStyleType.extremeValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "extremeValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "extremeValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartGradientStyleType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartGradientStyleType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartGridlines:interface",
              "docComment": "/**\n * Represents major or minor gridlines on a chart axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartGridlines "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGridlines",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartGridlines#getFormat:member(1)",
                  "docComment": "/**\n * Represents the formatting of chart gridlines.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGridlinesFormat",
                      "canonicalReference": "excel!ExcelScript.ChartGridlinesFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartGridlines#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the axis gridlines are visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartGridlines#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the axis gridlines are visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartGridlinesFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for chart gridlines.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartGridlinesFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGridlinesFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartGridlinesFormat#getLine:member(1)",
                  "docComment": "/**\n * Represents chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLine(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!ExcelScript.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLine"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartLegend:interface",
              "docComment": "/**\n * Represents the legend in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegend "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegend",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getFormat:member(1)",
                  "docComment": "/**\n * Represents the formatting of a chart legend, which includes fill and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendFormat",
                      "canonicalReference": "excel!ExcelScript.ChartLegendFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getLeft:member(1)",
                  "docComment": "/**\n * Specifies the left, in points, of a the legenf on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getLegendEntries:member(1)",
                  "docComment": "/**\n * Represents a collection of legendEntries in the legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLegendEntries(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendEntry",
                      "canonicalReference": "excel!ExcelScript.ChartLegendEntry:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLegendEntries"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getOverlay:member(1)",
                  "docComment": "/**\n * Specifies if the chart legend should overlap with the main body of the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOverlay(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOverlay"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getPosition:member(1)",
                  "docComment": "/**\n * Specifies the position of the legend on the chart. See Excel.ChartLegendPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendPosition",
                      "canonicalReference": "excel!ExcelScript.ChartLegendPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getShowShadow:member(1)",
                  "docComment": "/**\n * Specifies if the legend has a shadow on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowShadow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowShadow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getTop:member(1)",
                  "docComment": "/**\n * Specifies the top of a chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the ChartLegend is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#getWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHeight(height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setLeft:member(1)",
                  "docComment": "/**\n * Specifies the left, in points, of a the legenf on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setOverlay:member(1)",
                  "docComment": "/**\n * Specifies if the chart legend should overlap with the main body of the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOverlay(overlay: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "overlay",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOverlay"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setPosition:member(1)",
                  "docComment": "/**\n * Specifies the position of the legend on the chart. See Excel.ChartLegendPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendPosition",
                      "canonicalReference": "excel!ExcelScript.ChartLegendPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setShowShadow:member(1)",
                  "docComment": "/**\n * Specifies if the legend has a shadow on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowShadow(showShadow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showShadow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowShadow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setTop:member(1)",
                  "docComment": "/**\n * Specifies the top of a chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the ChartLegend is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegend#setWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWidth(width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWidth"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartLegendEntry:interface",
              "docComment": "/**\n * Represents the legendEntry in legendEntryCollection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegendEntry "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendEntry",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#getHeight:member(1)",
                  "docComment": "/**\n * Specifies the height of the legendEntry on the chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#getIndex:member(1)",
                  "docComment": "/**\n * Specifies the index of the legendEntry in the chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIndex(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#getLeft:member(1)",
                  "docComment": "/**\n * Specifies the left of a chart legendEntry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#getTop:member(1)",
                  "docComment": "/**\n * Specifies the top of a chart legendEntry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#getVisible:member(1)",
                  "docComment": "/**\n * Represents the visible of a chart legend entry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#getWidth:member(1)",
                  "docComment": "/**\n * Represents the width of the legendEntry on the chart Legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendEntry#setVisible:member(1)",
                  "docComment": "/**\n * Represents the visible of a chart legend entry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartLegendFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties of a chart legend.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegendFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendFormat#getBorder:member(1)",
                  "docComment": "/**\n * Represents the border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendFormat#getFill:member(1)",
                  "docComment": "/**\n * Represents the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLegendFormat#getFont:member(1)",
                  "docComment": "/**\n * Represents the font attributes such as font name, font size, color, etc. of a chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartLegendPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartLegendPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.corner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "corner"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "corner",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLegendPosition.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartLineFormat:interface",
              "docComment": "/**\n * Encapsulates the formatting options for line elements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLineFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLineFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#clear:member(1)",
                  "docComment": "/**\n * Clear the line format of a chart element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of lines in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#getLineStyle:member(1)",
                  "docComment": "/**\n * Represents the line style. See Excel.ChartLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLineStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineStyle",
                      "canonicalReference": "excel!ExcelScript.ChartLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#getWeight:member(1)",
                  "docComment": "/**\n * Represents weight of the line, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of lines in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#setLineStyle:member(1)",
                  "docComment": "/**\n * Represents the line style. See Excel.ChartLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLineStyle(lineStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineStyle",
                      "canonicalReference": "excel!ExcelScript.ChartLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "lineStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartLineFormat#setWeight:member(1)",
                  "docComment": "/**\n * Represents weight of the line, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWeight(weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "weight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWeight"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartLineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.continuous:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continuous"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continuous",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.grey25:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grey25"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grey25",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.grey50:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grey50"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grey50",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.grey75:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grey75"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grey75",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartLineStyle.roundDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel:enum",
              "docComment": "/**\n * Represents the mapping level of a chart series. This only applies to region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMapAreaLevel "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapAreaLevel",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.city:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "city"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "city",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.continent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.country:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "country"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "country",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.county:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "county"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "county",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.dataOnly:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataOnly"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataOnly",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.state:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "state"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "state",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel.world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "world"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "world",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartMapLabelStrategy:enum",
              "docComment": "/**\n * Represents the region level of a chart series layout. This only applies to region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMapLabelStrategy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapLabelStrategy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapLabelStrategy.bestFit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bestFit"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bestFit",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapLabelStrategy.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapLabelStrategy.showAll:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAll"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAll",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartMapOptions:interface",
              "docComment": "/**\n * Encapsulates the properties for a region map chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartMapOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapOptions",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartMapOptions#getLabelStrategy:member(1)",
                  "docComment": "/**\n * Specifies the series map labels strategy of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLabelStrategy(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapLabelStrategy",
                      "canonicalReference": "excel!ExcelScript.ChartMapLabelStrategy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLabelStrategy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartMapOptions#getLevel:member(1)",
                  "docComment": "/**\n * Specifies the series mapping level of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLevel(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapAreaLevel",
                      "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartMapOptions#getProjectionType:member(1)",
                  "docComment": "/**\n * Specifies the series projection type of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProjectionType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapProjectionType",
                      "canonicalReference": "excel!ExcelScript.ChartMapProjectionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProjectionType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartMapOptions#setLabelStrategy:member(1)",
                  "docComment": "/**\n * Specifies the series map labels strategy of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLabelStrategy(labelStrategy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapLabelStrategy",
                      "canonicalReference": "excel!ExcelScript.ChartMapLabelStrategy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "labelStrategy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLabelStrategy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartMapOptions#setLevel:member(1)",
                  "docComment": "/**\n * Specifies the series mapping level of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLevel(level: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapAreaLevel",
                      "canonicalReference": "excel!ExcelScript.ChartMapAreaLevel:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "level",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartMapOptions#setProjectionType:member(1)",
                  "docComment": "/**\n * Specifies the series projection type of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setProjectionType(projectionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapProjectionType",
                      "canonicalReference": "excel!ExcelScript.ChartMapProjectionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "projectionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setProjectionType"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartMapProjectionType:enum",
              "docComment": "/**\n * Represents the region projection type of a chart series layout. This only applies to region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMapProjectionType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapProjectionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapProjectionType.albers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "albers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "albers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapProjectionType.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapProjectionType.mercator:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mercator"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mercator",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapProjectionType.miller:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "miller"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "miller",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMapProjectionType.robinson:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "robinson"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "robinson",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartMarkerStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMarkerStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMarkerStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.circle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "circle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "circle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.diamond:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diamond"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diamond",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.picture:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "picture"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "picture",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.plus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plus"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plus",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.square:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "square"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "square",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.star:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.triangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "triangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "triangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartMarkerStyle.x:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "x"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "x",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartParentLabelStrategy:enum",
              "docComment": "/**\n * Represents the parent label strategy of the chart series layout. This only applies to treemap charts\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartParentLabelStrategy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartParentLabelStrategy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartParentLabelStrategy.banner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "banner"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "banner",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartParentLabelStrategy.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartParentLabelStrategy.overlapping:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overlapping"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overlapping",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartPivotOptions:interface",
              "docComment": "/**\n * Encapsulates the options for the pivot chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPivotOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPivotOptions",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#getShowAxisFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the axis field buttons on a PivotChart. The ShowAxisFieldButtons property corresponds to the \"Show Axis Field Buttons\" command on the \"Field Buttons\" drop-down list of the \"Analyze\" tab, which is available when a PivotChart is selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowAxisFieldButtons(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowAxisFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#getShowLegendFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the legend field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowLegendFieldButtons(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowLegendFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#getShowReportFilterFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the report filter field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowReportFilterFieldButtons(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowReportFilterFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#getShowValueFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the show value field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowValueFieldButtons(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowValueFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#setShowAxisFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the axis field buttons on a PivotChart. The ShowAxisFieldButtons property corresponds to the \"Show Axis Field Buttons\" command on the \"Field Buttons\" drop-down list of the \"Analyze\" tab, which is available when a PivotChart is selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowAxisFieldButtons(showAxisFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showAxisFieldButtons",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowAxisFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#setShowLegendFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the legend field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowLegendFieldButtons(showLegendFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showLegendFieldButtons",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowLegendFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#setShowReportFilterFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the report filter field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowReportFilterFieldButtons(\n            showReportFilterFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showReportFilterFieldButtons",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowReportFilterFieldButtons"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPivotOptions#setShowValueFieldButtons:member(1)",
                  "docComment": "/**\n * Specifies whether to display the show value field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowValueFieldButtons(showValueFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showValueFieldButtons",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowValueFieldButtons"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartPlotArea:interface",
              "docComment": "/**\n * This object represents the attributes for a chart plotArea object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPlotArea "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotArea",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getFormat:member(1)",
                  "docComment": "/**\n * Specifies the formatting of a chart plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotAreaFormat",
                      "canonicalReference": "excel!ExcelScript.ChartPlotAreaFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getHeight:member(1)",
                  "docComment": "/**\n * Specifies the height value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getInsideHeight:member(1)",
                  "docComment": "/**\n * Specifies the insideHeight value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInsideHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInsideHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getInsideLeft:member(1)",
                  "docComment": "/**\n * Specifies the insideLeft value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInsideLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInsideLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getInsideTop:member(1)",
                  "docComment": "/**\n * Specifies the insideTop value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInsideTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInsideTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getInsideWidth:member(1)",
                  "docComment": "/**\n * Specifies the insideWidth value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInsideWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInsideWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getLeft:member(1)",
                  "docComment": "/**\n * Specifies the left value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getPosition:member(1)",
                  "docComment": "/**\n * Specifies the position of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotAreaPosition",
                      "canonicalReference": "excel!ExcelScript.ChartPlotAreaPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getTop:member(1)",
                  "docComment": "/**\n * Specifies the top value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#getWidth:member(1)",
                  "docComment": "/**\n * Specifies the width value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setHeight:member(1)",
                  "docComment": "/**\n * Specifies the height value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHeight(height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setInsideHeight:member(1)",
                  "docComment": "/**\n * Specifies the insideHeight value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInsideHeight(insideHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "insideHeight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInsideHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setInsideLeft:member(1)",
                  "docComment": "/**\n * Specifies the insideLeft value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInsideLeft(insideLeft: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "insideLeft",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInsideLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setInsideTop:member(1)",
                  "docComment": "/**\n * Specifies the insideTop value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInsideTop(insideTop: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "insideTop",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInsideTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setInsideWidth:member(1)",
                  "docComment": "/**\n * Specifies the insideWidth value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInsideWidth(insideWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "insideWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInsideWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setLeft:member(1)",
                  "docComment": "/**\n * Specifies the left value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setPosition:member(1)",
                  "docComment": "/**\n * Specifies the position of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotAreaPosition",
                      "canonicalReference": "excel!ExcelScript.ChartPlotAreaPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setTop:member(1)",
                  "docComment": "/**\n * Specifies the top value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotArea#setWidth:member(1)",
                  "docComment": "/**\n * Specifies the width value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWidth(width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWidth"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartPlotAreaFormat:interface",
              "docComment": "/**\n * Represents the format properties for chart plotArea.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPlotAreaFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotAreaFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotAreaFormat#getBorder:member(1)",
                  "docComment": "/**\n * Specifies the border attributes of a chart plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPlotAreaFormat#getFill:member(1)",
                  "docComment": "/**\n * Specifies the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartPlotAreaPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartPlotAreaPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotAreaPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartPlotAreaPosition.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartPlotAreaPosition.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartPlotBy:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartPlotBy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotBy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartPlotBy.columns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columns"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartPlotBy.rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartPoint:interface",
              "docComment": "/**\n * Represents a point of a series in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPoint "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPoint",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getDataLabel:member(1)",
                  "docComment": "/**\n * Returns the data label of a chart point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataLabel(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabel",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabel:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataLabel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getFormat:member(1)",
                  "docComment": "/**\n * Encapsulates the format properties chart point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPointFormat",
                      "canonicalReference": "excel!ExcelScript.ChartPointFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getHasDataLabel:member(1)",
                  "docComment": "/**\n * Represents whether a data point has a data label. Not applicable for surface charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHasDataLabel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHasDataLabel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getMarkerBackgroundColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the marker background color of data point. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerBackgroundColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerBackgroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getMarkerForegroundColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the marker foreground color of data point. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerForegroundColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerForegroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getMarkerSize:member(1)",
                  "docComment": "/**\n * Represents marker size of data point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getMarkerStyle:member(1)",
                  "docComment": "/**\n * Represents marker style of a chart data point. See Excel.ChartMarkerStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMarkerStyle",
                      "canonicalReference": "excel!ExcelScript.ChartMarkerStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#getValue:member(1)",
                  "docComment": "/**\n * Returns the value of a chart point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#setHasDataLabel:member(1)",
                  "docComment": "/**\n * Represents whether a data point has a data label. Not applicable for surface charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHasDataLabel(hasDataLabel: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "hasDataLabel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHasDataLabel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#setMarkerBackgroundColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the marker background color of data point. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerBackgroundColor(markerBackgroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerBackgroundColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerBackgroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#setMarkerForegroundColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the marker foreground color of data point. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerForegroundColor(markerForegroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerForegroundColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerForegroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#setMarkerSize:member(1)",
                  "docComment": "/**\n * Represents marker size of data point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerSize(markerSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPoint#setMarkerStyle:member(1)",
                  "docComment": "/**\n * Represents marker style of a chart data point. See Excel.ChartMarkerStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerStyle(markerStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMarkerStyle",
                      "canonicalReference": "excel!ExcelScript.ChartMarkerStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerStyle"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartPointFormat:interface",
              "docComment": "/**\n * Represents formatting object for chart points.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPointFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPointFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPointFormat#getBorder:member(1)",
                  "docComment": "/**\n * Represents the border format of a chart data point, which includes color, style, and weight information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartPointFormat#getFill:member(1)",
                  "docComment": "/**\n * Represents the fill format of a chart, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartSeries:interface",
              "docComment": "/**\n * Represents a series in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartSeries "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeries",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#addChartTrendline:member(1)",
                  "docComment": "/**\n * Adds a new trendline to trendline collection.\n *\n * @param type - Specifies the trendline type. The default value is \"Linear\". See Excel.ChartTrendline for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addChartTrendline(type?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineType",
                      "canonicalReference": "excel!ExcelScript.ChartTrendlineType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendline",
                      "canonicalReference": "excel!ExcelScript.ChartTrendline:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addChartTrendline"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#delete:member(1)",
                  "docComment": "/**\n * Deletes the chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getAxisGroup:member(1)",
                  "docComment": "/**\n * Specifies the group for the specified series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAxisGroup(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisGroup",
                      "canonicalReference": "excel!ExcelScript.ChartAxisGroup:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAxisGroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getBinOptions:member(1)",
                  "docComment": "/**\n * Encapsulates the bin options for histogram charts and pareto charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBinOptions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBinOptions",
                      "canonicalReference": "excel!ExcelScript.ChartBinOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBinOptions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getBoxwhiskerOptions:member(1)",
                  "docComment": "/**\n * Encapsulates the options for the box and whisker charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBoxwhiskerOptions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBoxwhiskerOptions",
                      "canonicalReference": "excel!ExcelScript.ChartBoxwhiskerOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBoxwhiskerOptions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getBubbleScale:member(1)",
                  "docComment": "/**\n * This can be an integer value from 0 (zero) to 300, representing the percentage of the default size. This property only applies to bubble charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBubbleScale(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBubbleScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getChartTrendline:member(1)",
                  "docComment": "/**\n * Get trendline object by index, which is the insertion order in items array.\n *\n * @param index - Represents the insertion order in items array.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getChartTrendline(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendline",
                      "canonicalReference": "excel!ExcelScript.ChartTrendline:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getChartTrendline"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getChartType:member(1)",
                  "docComment": "/**\n * Represents the chart type of a series. See Excel.ChartType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getChartType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!ExcelScript.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getChartType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getDataLabels:member(1)",
                  "docComment": "/**\n * Represents a collection of all dataLabels in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataLabels(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabels",
                      "canonicalReference": "excel!ExcelScript.ChartDataLabels:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataLabels"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getDoughnutHoleSize:member(1)",
                  "docComment": "/**\n * Represents the doughnut hole size of a chart series. Only valid on doughnut and doughnutExploded charts. Throws an invalid argument exception on invalid charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDoughnutHoleSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDoughnutHoleSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getExplosion:member(1)",
                  "docComment": "/**\n * Specifies the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getExplosion(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getExplosion"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getFiltered:member(1)",
                  "docComment": "/**\n * Specifies if the series is filtered. Not applicable for surface charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFiltered(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFiltered"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getFirstSliceAngle:member(1)",
                  "docComment": "/**\n * Specifies the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts. Can be a value from 0 through 360. Read/Write\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirstSliceAngle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFirstSliceAngle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getFormat:member(1)",
                  "docComment": "/**\n * Represents the formatting of a chart series, which includes fill and line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesFormat",
                      "canonicalReference": "excel!ExcelScript.ChartSeriesFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGapWidth:member(1)",
                  "docComment": "/**\n * Represents the gap width of a chart series. Only valid on bar and column charts, as well as specific classes of line and pie charts. Throws an invalid argument exception on invalid charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGapWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGapWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMaximumColor:member(1)",
                  "docComment": "/**\n * Specifies the color for maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMaximumColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMaximumColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMaximumType:member(1)",
                  "docComment": "/**\n * Specifies the type for maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMaximumType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMaximumType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMaximumValue:member(1)",
                  "docComment": "/**\n * Specifies the maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMaximumValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMaximumValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMidpointColor:member(1)",
                  "docComment": "/**\n * Specifies the color for midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMidpointColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMidpointColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMidpointType:member(1)",
                  "docComment": "/**\n * Specifies the type for midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMidpointType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMidpointType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMidpointValue:member(1)",
                  "docComment": "/**\n * Specifies the midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMidpointValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMidpointValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMinimumColor:member(1)",
                  "docComment": "/**\n * Specifies the color for minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMinimumColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMinimumColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMinimumType:member(1)",
                  "docComment": "/**\n * Specifies the type for minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMinimumType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMinimumType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientMinimumValue:member(1)",
                  "docComment": "/**\n * Specifies the minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientMinimumValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientMinimumValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getGradientStyle:member(1)",
                  "docComment": "/**\n * Specifies the series gradient style of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyle",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getHasDataLabels:member(1)",
                  "docComment": "/**\n * Specifies if the series has data labels.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHasDataLabels(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHasDataLabels"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getInvertColor:member(1)",
                  "docComment": "/**\n * Specifies the fill color for negative data points in a series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInvertColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInvertColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getInvertIfNegative:member(1)",
                  "docComment": "/**\n * True if Excel inverts the pattern in the item when it corresponds to a negative number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInvertIfNegative(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInvertIfNegative"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getMapOptions:member(1)",
                  "docComment": "/**\n * Encapsulates the options for a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMapOptions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapOptions",
                      "canonicalReference": "excel!ExcelScript.ChartMapOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMapOptions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getMarkerBackgroundColor:member(1)",
                  "docComment": "/**\n * Specifies the markers background color of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerBackgroundColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerBackgroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getMarkerForegroundColor:member(1)",
                  "docComment": "/**\n * Specifies the markers foreground color of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerForegroundColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerForegroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getMarkerSize:member(1)",
                  "docComment": "/**\n * Specifies the marker size of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getMarkerStyle:member(1)",
                  "docComment": "/**\n * Specifies the marker style of a chart series. See Excel.ChartMarkerStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMarkerStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMarkerStyle",
                      "canonicalReference": "excel!ExcelScript.ChartMarkerStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMarkerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getName:member(1)",
                  "docComment": "/**\n * Specifies the name of a series in a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getOverlap:member(1)",
                  "docComment": "/**\n * Specifies how bars and columns are positioned. Can be a value between –100 and 100. Applies only to 2-D bar and 2-D column charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOverlap(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOverlap"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getParentLabelStrategy:member(1)",
                  "docComment": "/**\n * Specifies the series parent label strategy area for a treemap chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getParentLabelStrategy(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartParentLabelStrategy",
                      "canonicalReference": "excel!ExcelScript.ChartParentLabelStrategy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getParentLabelStrategy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getPlotOrder:member(1)",
                  "docComment": "/**\n * Specifies the plot order of a chart series within the chart group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPlotOrder(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPlotOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getPoints:member(1)",
                  "docComment": "/**\n * Returns a collection of all points in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPoints(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPoint",
                      "canonicalReference": "excel!ExcelScript.ChartPoint:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPoints"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getSecondPlotSize:member(1)",
                  "docComment": "/**\n * Specifies the size of the secondary section of either a pie of pie chart or a bar of pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSecondPlotSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSecondPlotSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getShowConnectorLines:member(1)",
                  "docComment": "/**\n * Specifies whether connector lines are shown in waterfall charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowConnectorLines(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowConnectorLines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getShowLeaderLines:member(1)",
                  "docComment": "/**\n * Specifies whether leader lines are displayed for each data label in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowLeaderLines(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowLeaderLines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getShowShadow:member(1)",
                  "docComment": "/**\n * Specifies if the series has a shadow.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowShadow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowShadow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getSmooth:member(1)",
                  "docComment": "/**\n * Specifies if the series is smooth. Only applicable to line and scatter charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSmooth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSmooth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getSplitType:member(1)",
                  "docComment": "/**\n * Specifies the way the two sections of either a pie of pie chart or a bar of pie chart are split.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSplitType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSplitType",
                      "canonicalReference": "excel!ExcelScript.ChartSplitType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSplitType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getSplitValue:member(1)",
                  "docComment": "/**\n * Specifies the threshold value that separates two sections of either a pie-of-pie chart or a bar-of-pie chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSplitValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSplitValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getTrendlines:member(1)",
                  "docComment": "/**\n * The collection of trendlines in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTrendlines(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendline",
                      "canonicalReference": "excel!ExcelScript.ChartTrendline:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTrendlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getVaryByCategories:member(1)",
                  "docComment": "/**\n * True if Excel assigns a different color or pattern to each data marker. The chart must contain only one series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVaryByCategories(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVaryByCategories"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getXErrorBars:member(1)",
                  "docComment": "/**\n * Represents the error bar object of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getXErrorBars(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBars",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBars:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getXErrorBars"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#getYErrorBars:member(1)",
                  "docComment": "/**\n * Represents the error bar object of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getYErrorBars(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBars",
                      "canonicalReference": "excel!ExcelScript.ChartErrorBars:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getYErrorBars"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setAxisGroup:member(1)",
                  "docComment": "/**\n * Specifies the group for the specified series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAxisGroup(axisGroup: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisGroup",
                      "canonicalReference": "excel!ExcelScript.ChartAxisGroup:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "axisGroup",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAxisGroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setBubbleScale:member(1)",
                  "docComment": "/**\n * This can be an integer value from 0 (zero) to 300, representing the percentage of the default size. This property only applies to bubble charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBubbleScale(bubbleScale: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bubbleScale",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBubbleScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setBubbleSizes:member(1)",
                  "docComment": "/**\n * Sets the bubble sizes for a chart series. Only works for bubble charts.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBubbleSizes(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBubbleSizes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setChartType:member(1)",
                  "docComment": "/**\n * Represents the chart type of a series. See Excel.ChartType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setChartType(chartType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!ExcelScript.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "chartType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setChartType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setDoughnutHoleSize:member(1)",
                  "docComment": "/**\n * Represents the doughnut hole size of a chart series. Only valid on doughnut and doughnutExploded charts. Throws an invalid argument exception on invalid charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDoughnutHoleSize(doughnutHoleSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "doughnutHoleSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setDoughnutHoleSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setExplosion:member(1)",
                  "docComment": "/**\n * Specifies the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setExplosion(explosion: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "explosion",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setExplosion"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setFiltered:member(1)",
                  "docComment": "/**\n * Specifies if the series is filtered. Not applicable for surface charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFiltered(filtered: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "filtered",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFiltered"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setFirstSliceAngle:member(1)",
                  "docComment": "/**\n * Specifies the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts. Can be a value from 0 through 360. Read/Write\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFirstSliceAngle(firstSliceAngle: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "firstSliceAngle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFirstSliceAngle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGapWidth:member(1)",
                  "docComment": "/**\n * Represents the gap width of a chart series. Only valid on bar and column charts, as well as specific classes of line and pie charts. Throws an invalid argument exception on invalid charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGapWidth(gapWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gapWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGapWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMaximumColor:member(1)",
                  "docComment": "/**\n * Specifies the color for maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMaximumColor(gradientMaximumColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMaximumColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientMaximumColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMaximumType:member(1)",
                  "docComment": "/**\n * Specifies the type for maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMaximumType(\n            gradientMaximumType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMaximumType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setGradientMaximumType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMaximumValue:member(1)",
                  "docComment": "/**\n * Specifies the maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMaximumValue(gradientMaximumValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMaximumValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientMaximumValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMidpointColor:member(1)",
                  "docComment": "/**\n * Specifies the color for midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMidpointColor(gradientMidpointColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMidpointColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientMidpointColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMidpointType:member(1)",
                  "docComment": "/**\n * Specifies the type for midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMidpointType(\n            gradientMidpointType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMidpointType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setGradientMidpointType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMidpointValue:member(1)",
                  "docComment": "/**\n * Specifies the midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMidpointValue(gradientMidpointValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMidpointValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientMidpointValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMinimumColor:member(1)",
                  "docComment": "/**\n * Specifies the color for minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMinimumColor(gradientMinimumColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMinimumColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientMinimumColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMinimumType:member(1)",
                  "docComment": "/**\n * Specifies the type for minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMinimumType(\n            gradientMinimumType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMinimumType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setGradientMinimumType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientMinimumValue:member(1)",
                  "docComment": "/**\n * Specifies the minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientMinimumValue(gradientMinimumValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientMinimumValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientMinimumValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setGradientStyle:member(1)",
                  "docComment": "/**\n * Specifies the series gradient style of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientStyle(gradientStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyle",
                      "canonicalReference": "excel!ExcelScript.ChartGradientStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setHasDataLabels:member(1)",
                  "docComment": "/**\n * Specifies if the series has data labels.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHasDataLabels(hasDataLabels: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "hasDataLabels",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHasDataLabels"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setInvertColor:member(1)",
                  "docComment": "/**\n * Specifies the fill color for negative data points in a series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInvertColor(invertColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "invertColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInvertColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setInvertIfNegative:member(1)",
                  "docComment": "/**\n * True if Excel inverts the pattern in the item when it corresponds to a negative number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setInvertIfNegative(invertIfNegative: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "invertIfNegative",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setInvertIfNegative"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setMarkerBackgroundColor:member(1)",
                  "docComment": "/**\n * Specifies the markers background color of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerBackgroundColor(markerBackgroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerBackgroundColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerBackgroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setMarkerForegroundColor:member(1)",
                  "docComment": "/**\n * Specifies the markers foreground color of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerForegroundColor(markerForegroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerForegroundColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerForegroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setMarkerSize:member(1)",
                  "docComment": "/**\n * Specifies the marker size of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerSize(markerSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setMarkerStyle:member(1)",
                  "docComment": "/**\n * Specifies the marker style of a chart series. See Excel.ChartMarkerStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMarkerStyle(markerStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMarkerStyle",
                      "canonicalReference": "excel!ExcelScript.ChartMarkerStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markerStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMarkerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setName:member(1)",
                  "docComment": "/**\n * Specifies the name of a series in a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setOverlap:member(1)",
                  "docComment": "/**\n * Specifies how bars and columns are positioned. Can be a value between –100 and 100. Applies only to 2-D bar and 2-D column charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOverlap(overlap: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "overlap",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOverlap"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setParentLabelStrategy:member(1)",
                  "docComment": "/**\n * Specifies the series parent label strategy area for a treemap chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setParentLabelStrategy(\n            parentLabelStrategy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartParentLabelStrategy",
                      "canonicalReference": "excel!ExcelScript.ChartParentLabelStrategy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "parentLabelStrategy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setParentLabelStrategy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setPlotOrder:member(1)",
                  "docComment": "/**\n * Specifies the plot order of a chart series within the chart group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPlotOrder(plotOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "plotOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPlotOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setSecondPlotSize:member(1)",
                  "docComment": "/**\n * Specifies the size of the secondary section of either a pie of pie chart or a bar of pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSecondPlotSize(secondPlotSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "secondPlotSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSecondPlotSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setShowConnectorLines:member(1)",
                  "docComment": "/**\n * Specifies whether connector lines are shown in waterfall charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowConnectorLines(showConnectorLines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showConnectorLines",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowConnectorLines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setShowLeaderLines:member(1)",
                  "docComment": "/**\n * Specifies whether leader lines are displayed for each data label in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowLeaderLines(showLeaderLines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showLeaderLines",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowLeaderLines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setShowShadow:member(1)",
                  "docComment": "/**\n * Specifies if the series has a shadow.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowShadow(showShadow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showShadow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowShadow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setSmooth:member(1)",
                  "docComment": "/**\n * Specifies if the series is smooth. Only applicable to line and scatter charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSmooth(smooth: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "smooth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSmooth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setSplitType:member(1)",
                  "docComment": "/**\n * Specifies the way the two sections of either a pie of pie chart or a bar of pie chart are split.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSplitType(splitType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSplitType",
                      "canonicalReference": "excel!ExcelScript.ChartSplitType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "splitType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSplitType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setSplitValue:member(1)",
                  "docComment": "/**\n * Specifies the threshold value that separates two sections of either a pie-of-pie chart or a bar-of-pie chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSplitValue(splitValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "splitValue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSplitValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setValues:member(1)",
                  "docComment": "/**\n * Sets the values for a chart series. For scatter chart, it means Y axis values.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValues(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValues"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setVaryByCategories:member(1)",
                  "docComment": "/**\n * True if Excel assigns a different color or pattern to each data marker. The chart must contain only one series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVaryByCategories(varyByCategories: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "varyByCategories",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVaryByCategories"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeries#setXAxisValues:member(1)",
                  "docComment": "/**\n * Sets the values of the X axis for a chart series. Only works for scatter charts.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setXAxisValues(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setXAxisValues"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartSeriesBy:enum",
              "docComment": "/**\n * Specifies whether the series are by rows or by columns. On Desktop, the \"auto\" option will inspect the source data shape to automatically guess whether the data is by rows or columns; in Excel on the web, \"auto\" will simply default to \"columns\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartSeriesBy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeriesBy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSeriesBy.auto:member",
                  "docComment": "/**\n * On Desktop, the \"auto\" option will inspect the source data shape to automatically guess whether the data is by rows or columns; in Excel on the web, \"auto\" will simply default to \"columns\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "auto"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "auto",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSeriesBy.columns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columns"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSeriesBy.rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartSeriesFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart series\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartSeriesFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeriesFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeriesFormat#getFill:member(1)",
                  "docComment": "/**\n * Represents the fill format of a chart series, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartSeriesFormat#getLine:member(1)",
                  "docComment": "/**\n * Represents line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLine(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!ExcelScript.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLine"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartSplitType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartSplitType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSplitType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSplitType.splitByCustomSplit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByCustomSplit"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByCustomSplit",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSplitType.splitByPercentValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByPercentValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByPercentValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSplitType.splitByPosition:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByPosition"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByPosition",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartSplitType.splitByValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum",
              "docComment": "/**\n * Represents the horizontal alignment for the specified object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTextHorizontalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTextHorizontalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum",
              "docComment": "/**\n * Represents the vertical alignment for the specified object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTextVerticalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTextVerticalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartTickLabelAlignment:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTickLabelAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTickLabelAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTickLabelAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTickLabelAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTickLabelAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartTitle:interface",
              "docComment": "/**\n * Represents a chart title object of a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTitle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTitle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getFormat:member(1)",
                  "docComment": "/**\n * Represents the formatting of a chart title, which includes fill and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitleFormat",
                      "canonicalReference": "excel!ExcelScript.ChartTitleFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getHeight:member(1)",
                  "docComment": "/**\n * Returns the height, in points, of the chart title. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the horizontal alignment for chart title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getLeft:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the left edge of chart title to the left edge of chart area. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getOverlay:member(1)",
                  "docComment": "/**\n * Specifies if the chart title will overlay the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOverlay(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOverlay"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getPosition:member(1)",
                  "docComment": "/**\n * Represents the position of chart title. See Excel.ChartTitlePosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitlePosition",
                      "canonicalReference": "excel!ExcelScript.ChartTitlePosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getShowShadow:member(1)",
                  "docComment": "/**\n * Represents a boolean value that determines if the chart title has a shadow.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowShadow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowShadow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getSubstring:member(1)",
                  "docComment": "/**\n * Get the substring of a chart title. Line break '\\n' also counts one character.\n *\n * @param start - Start position of substring to be retrieved. Position start with 0.\n *\n * @param length - Length of substring to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubstring(start: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", length: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFormatString",
                      "canonicalReference": "excel!ExcelScript.ChartFormatString:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "start",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "length",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getSubstring"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getText:member(1)",
                  "docComment": "/**\n * Specifies the chart's title text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getTextOrientation:member(1)",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getTop:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of chart title to the top of chart area. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the vertical alignment of chart title. See Excel.ChartTextVerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the chart title is visibile.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#getWidth:member(1)",
                  "docComment": "/**\n * Specfies the width, in points, of the chart title. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setFormula:member(1)",
                  "docComment": "/**\n * Sets a string value that represents the formula of chart title using A1-style notation.\n *\n * @param formula - A string that represents the formula to set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the horizontal alignment for chart title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(\n            horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setLeft:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the left edge of chart title to the left edge of chart area. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setOverlay:member(1)",
                  "docComment": "/**\n * Specifies if the chart title will overlay the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOverlay(overlay: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "overlay",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOverlay"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setPosition:member(1)",
                  "docComment": "/**\n * Represents the position of chart title. See Excel.ChartTitlePosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitlePosition",
                      "canonicalReference": "excel!ExcelScript.ChartTitlePosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setShowShadow:member(1)",
                  "docComment": "/**\n * Represents a boolean value that determines if the chart title has a shadow.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowShadow(showShadow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showShadow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowShadow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setText:member(1)",
                  "docComment": "/**\n * Specifies the chart's title text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setText(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setTextOrientation:member(1)",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setTop:member(1)",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of chart title to the top of chart area. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the vertical alignment of chart title. See Excel.ChartTextVerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(\n            verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitle#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the chart title is visibile.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartTitleFormat:interface",
              "docComment": "/**\n * Provides access to the office art formatting for chart title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTitleFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTitleFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitleFormat#getBorder:member(1)",
                  "docComment": "/**\n * Represents the border format of chart title, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitleFormat#getFill:member(1)",
                  "docComment": "/**\n * Represents the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTitleFormat#getFont:member(1)",
                  "docComment": "/**\n * Represents the font attributes (font name, font size, color, etc.) for an object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartTitlePosition:enum",
              "docComment": "/**\n * Represents the position of chart title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTitlePosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTitlePosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTitlePosition.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTitlePosition.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTitlePosition.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTitlePosition.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTitlePosition.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartTrendline:interface",
              "docComment": "/**\n * This object represents the attributes for a chart trendline object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendline "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendline",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#delete:member(1)",
                  "docComment": "/**\n * Delete the trendline object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getBackwardPeriod:member(1)",
                  "docComment": "/**\n * Represents the number of periods that the trendline extends backward.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBackwardPeriod(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBackwardPeriod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getFormat:member(1)",
                  "docComment": "/**\n * Represents the formatting of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineFormat",
                      "canonicalReference": "excel!ExcelScript.ChartTrendlineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getForwardPeriod:member(1)",
                  "docComment": "/**\n * Represents the number of periods that the trendline extends forward.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getForwardPeriod(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getForwardPeriod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getIntercept:member(1)",
                  "docComment": "/**\n * Represents the intercept value of the trendline. Can be set to a numeric value or an empty string (for automatic values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntercept(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIntercept"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getLabel:member(1)",
                  "docComment": "/**\n * Represents the label of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLabel(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineLabel",
                      "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLabel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getMovingAveragePeriod:member(1)",
                  "docComment": "/**\n * Represents the period of a chart trendline. Only applicable for trendline with MovingAverage type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMovingAveragePeriod(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMovingAveragePeriod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getName:member(1)",
                  "docComment": "/**\n * Represents the name of the trendline. Can be set to a string value, or can be set to null value represents automatic values. The returned value is always a string\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getPolynomialOrder:member(1)",
                  "docComment": "/**\n * Represents the order of a chart trendline. Only applicable for trendline with Polynomial type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPolynomialOrder(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPolynomialOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getShowEquation:member(1)",
                  "docComment": "/**\n * True if the equation for the trendline is displayed on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowEquation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowEquation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getShowRSquared:member(1)",
                  "docComment": "/**\n * True if the R-squared for the trendline is displayed on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowRSquared(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowRSquared"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#getType:member(1)",
                  "docComment": "/**\n * Represents the type of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineType",
                      "canonicalReference": "excel!ExcelScript.ChartTrendlineType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setBackwardPeriod:member(1)",
                  "docComment": "/**\n * Represents the number of periods that the trendline extends backward.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBackwardPeriod(backwardPeriod: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "backwardPeriod",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBackwardPeriod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setForwardPeriod:member(1)",
                  "docComment": "/**\n * Represents the number of periods that the trendline extends forward.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setForwardPeriod(forwardPeriod: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "forwardPeriod",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setForwardPeriod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setIntercept:member(1)",
                  "docComment": "/**\n * Represents the intercept value of the trendline. Can be set to a numeric value or an empty string (for automatic values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIntercept(intercept: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "intercept",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIntercept"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setMovingAveragePeriod:member(1)",
                  "docComment": "/**\n * Represents the period of a chart trendline. Only applicable for trendline with MovingAverage type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMovingAveragePeriod(movingAveragePeriod: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "movingAveragePeriod",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMovingAveragePeriod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setName:member(1)",
                  "docComment": "/**\n * Represents the name of the trendline. Can be set to a string value, or can be set to null value represents automatic values. The returned value is always a string\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setPolynomialOrder:member(1)",
                  "docComment": "/**\n * Represents the order of a chart trendline. Only applicable for trendline with Polynomial type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPolynomialOrder(polynomialOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "polynomialOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPolynomialOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setShowEquation:member(1)",
                  "docComment": "/**\n * True if the equation for the trendline is displayed on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowEquation(showEquation: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showEquation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowEquation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setShowRSquared:member(1)",
                  "docComment": "/**\n * True if the R-squared for the trendline is displayed on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowRSquared(showRSquared: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showRSquared",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowRSquared"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendline#setType:member(1)",
                  "docComment": "/**\n * Represents the type of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setType(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineType",
                      "canonicalReference": "excel!ExcelScript.ChartTrendlineType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setType"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartTrendlineFormat:interface",
              "docComment": "/**\n * Represents the format properties for chart trendline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineFormat#getLine:member(1)",
                  "docComment": "/**\n * Represents chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLine(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!ExcelScript.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLine"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel:interface",
              "docComment": "/**\n * This object represents the attributes for a chart trendline lable object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineLabel "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineLabel",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getAutoText:member(1)",
                  "docComment": "/**\n * Specifies if trendline label automatically generate appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getFormat:member(1)",
                  "docComment": "/**\n * The format of chart trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineLabelFormat",
                      "canonicalReference": "excel!ExcelScript.ChartTrendlineLabelFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getFormula:member(1)",
                  "docComment": "/**\n * String value that represents the formula of chart trendline label using A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormula(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getHeight:member(1)",
                  "docComment": "/**\n * Returns the height, in points, of the chart trendline label. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for chart trendline label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of trendline label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getLeft:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the left edge of chart trendline label to the left edge of chart area. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinkNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getNumberFormat:member(1)",
                  "docComment": "/**\n * String value that represents the format code for trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getText:member(1)",
                  "docComment": "/**\n * String representing the text of the trendline label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getTextOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the chart trendline label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getTop:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of chart trendline label to the top of chart area. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of chart trendline label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of trendline label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#getWidth:member(1)",
                  "docComment": "/**\n * Returns the width, in points, of the chart trendline label. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setAutoText:member(1)",
                  "docComment": "/**\n * Specifies if trendline label automatically generate appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoText(autoText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoText",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setFormula:member(1)",
                  "docComment": "/**\n * String value that represents the formula of chart trendline label using A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for chart trendline label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of trendline label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(\n            horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setLeft:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the left edge of chart trendline label to the left edge of chart area. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setLinkNumberFormat:member(1)",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLinkNumberFormat(linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "linkNumberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLinkNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setNumberFormat:member(1)",
                  "docComment": "/**\n * String value that represents the format code for trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setText:member(1)",
                  "docComment": "/**\n * String representing the text of the trendline label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setText(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setTextOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the chart trendline label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setTop:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of chart trendline label to the top of chart area. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabel#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of chart trendline label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of trendline label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(\n            verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ChartTrendlineLabelFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart trendline label.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineLabelFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineLabelFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabelFormat#getBorder:member(1)",
                  "docComment": "/**\n * Specifies the border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!ExcelScript.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabelFormat#getFill:member(1)",
                  "docComment": "/**\n * Specifies the fill format of the current chart trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!ExcelScript.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineLabelFormat#getFont:member(1)",
                  "docComment": "/**\n * Specifies the font attributes (font name, font size, color, etc.) for a chart trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!ExcelScript.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartTrendlineType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTrendlineType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineType.exponential:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "exponential"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "exponential",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineType.linear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linear"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linear",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineType.logarithmic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logarithmic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logarithmic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineType.movingAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "movingAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "movingAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineType.polynomial:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "polynomial"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "polynomial",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartTrendlineType.power:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "power"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "power",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.area:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "area"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "area",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.areaStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "areaStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "areaStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.areaStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "areaStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "areaStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.barClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.barOfPie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barOfPie"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barOfPie",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.barStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.barStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.boxwhisker:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boxwhisker"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boxwhisker",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.bubble:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bubble"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bubble",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.bubble3DEffect:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bubble3DEffect"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bubble3DEffect",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.columnClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.columnStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.columnStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneBarClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneBarStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneBarStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneCol:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneCol"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneCol",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneColClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneColClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneColClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneColStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneColStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneColStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.coneColStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneColStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneColStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderBarClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderBarStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderBarStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderCol:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderCol"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderCol",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderColClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderColClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderColClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderColStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderColStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderColStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.cylinderColStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderColStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderColStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.doughnut:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doughnut"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doughnut",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.doughnutExploded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doughnutExploded"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doughnutExploded",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.funnel:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "funnel"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "funnel",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.histogram:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "histogram"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "histogram",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.line:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "line"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.lineMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineMarkers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineMarkers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.lineMarkersStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineMarkersStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineMarkersStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.lineMarkersStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineMarkersStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineMarkersStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.lineStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.lineStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pareto:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pareto"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pareto",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pie"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pie",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pieExploded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pieExploded"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pieExploded",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pieOfPie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pieOfPie"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pieOfPie",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidBarClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidBarStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidBarStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidCol:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidCol"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidCol",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidColClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidColClustered"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidColClustered",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidColStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidColStacked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidColStacked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.pyramidColStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidColStacked100"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidColStacked100",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.radar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radar"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "radar",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.radarFilled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radarFilled"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "radarFilled",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.radarMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radarMarkers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "radarMarkers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.regionMap:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "regionMap"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "regionMap",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.stockHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockHLC"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockHLC",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.stockOHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockOHLC"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockOHLC",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.stockVHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockVHLC"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockVHLC",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.stockVOHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockVOHLC"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockVOHLC",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.sunburst:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sunburst"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sunburst",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.surface:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surface"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surface",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.surfaceTopView:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surfaceTopView"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surfaceTopView",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.surfaceTopViewWireframe:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surfaceTopViewWireframe"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surfaceTopViewWireframe",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.surfaceWireframe:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surfaceWireframe"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surfaceWireframe",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.treemap:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "treemap"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "treemap",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.waterfall:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "waterfall"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "waterfall",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.xyscatter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.xyscatterLines:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterLines"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterLines",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.xyscatterLinesNoMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterLinesNoMarkers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterLinesNoMarkers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.xyscatterSmooth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterSmooth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterSmooth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartType.xyscatterSmoothNoMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterSmoothNoMarkers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterSmoothNoMarkers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ChartUnderlineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ChartUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ClearApplyTo:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ClearApplyTo "
                }
              ],
              "releaseTag": "Public",
              "name": "ClearApplyTo",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ClearApplyTo.all:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "all"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "all",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ClearApplyTo.contents:member",
                  "docComment": "/**\n * Clears the contents of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contents"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "contents",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ClearApplyTo.formats:member",
                  "docComment": "/**\n * Clears all formatting for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formats"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formats",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ClearApplyTo.hyperlinks:member",
                  "docComment": "/**\n * Clears all hyperlinks, but leaves all content and formatting intact.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hyperlinks"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hyperlinks",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ClearApplyTo.removeHyperlinks:member",
                  "docComment": "/**\n * Removes hyperlinks and formatting for the cell but leaves content, conditional formats, and data validation intact.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHyperlinks"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "removeHyperlinks",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ColorScaleConditionalFormat:interface",
              "docComment": "/**\n * Represents ColorScale criteria for conditional formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ColorScaleConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ColorScaleConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ColorScaleConditionalFormat#getCriteria:member(1)",
                  "docComment": "/**\n * The criteria of the color scale. Midpoint is optional when using a two point color scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCriteria(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriteria",
                      "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCriteria"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ColorScaleConditionalFormat#getThreeColorScale:member(1)",
                  "docComment": "/**\n * If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getThreeColorScale(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getThreeColorScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ColorScaleConditionalFormat#setCriteria:member(1)",
                  "docComment": "/**\n * The criteria of the color scale. Midpoint is optional when using a two point color scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCriteria(criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriteria",
                      "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCriteria"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Comment:interface",
              "docComment": "/**\n * Represents a comment in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Comment "
                }
              ],
              "releaseTag": "Public",
              "name": "Comment",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#addCommentReply:member(1)",
                  "docComment": "/**\n * Creates a comment reply for comment.\n *\n * @param content - The comment's content. This can be either a string or Interface CommentRichContent (e.g. for comments with mentions).\n *\n * @param contentType - Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addCommentReply(\n            content: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!ExcelScript.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            contentType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContentType",
                      "canonicalReference": "excel!ExcelScript.ContentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReply",
                      "canonicalReference": "excel!ExcelScript.CommentReply:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "contentType",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addCommentReply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#delete:member(1)",
                  "docComment": "/**\n * Deletes the comment and all the connected replies.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getAuthorEmail:member(1)",
                  "docComment": "/**\n * Gets the email of the comment's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAuthorEmail(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAuthorEmail"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getAuthorName:member(1)",
                  "docComment": "/**\n * Gets the name of the comment's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAuthorName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAuthorName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getCommentReply:member(1)",
                  "docComment": "/**\n * Returns a comment reply identified by its ID.\n *\n * @param commentReplyId - The identifier for the comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCommentReply(commentReplyId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReply",
                      "canonicalReference": "excel!ExcelScript.CommentReply:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "commentReplyId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getCommentReply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getContent:member(1)",
                  "docComment": "/**\n * The comment's content. The string is plain text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getContent(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getContent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getCreationDate:member(1)",
                  "docComment": "/**\n * Gets the creation time of the comment. Returns null if the comment was converted from a note, since the comment does not have a creation date.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCreationDate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCreationDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getId:member(1)",
                  "docComment": "/**\n * Specifies the comment identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getLocation:member(1)",
                  "docComment": "/**\n * Gets the cell where this comment is located.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getMentions:member(1)",
                  "docComment": "/**\n * Gets the entities (e.g. people) that are mentioned in comments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMentions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentMention",
                      "canonicalReference": "excel!ExcelScript.CommentMention:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMentions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getReplies:member(1)",
                  "docComment": "/**\n * Represents a collection of reply objects associated with the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReplies(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReply",
                      "canonicalReference": "excel!ExcelScript.CommentReply:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReplies"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#getRichContent:member(1)",
                  "docComment": "/**\n * Gets the rich comment content (e.g. mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRichContent(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRichContent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#setContent:member(1)",
                  "docComment": "/**\n * The comment's content. The string is plain text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setContent(content: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setContent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Comment#updateMentions:member(1)",
                  "docComment": "/**\n * Updates the comment content with a specially formatted string and a list of mentions.\n *\n * @param contentWithMentions - The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "updateMentions(contentWithMentions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!ExcelScript.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "contentWithMentions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "updateMentions"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CommentMention:interface",
              "docComment": "/**\n * Represents the entity that is mentioned in comments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentMention "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentMention",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CommentMention#email:member",
                  "docComment": "/**\n * The email address of the entity that is mentioned in comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "email: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "email",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CommentMention#id:member",
                  "docComment": "/**\n * The id of the entity. The id matches one of the ids in `CommentRichContent.richContent`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CommentMention#name:member",
                  "docComment": "/**\n * The name of the entity that is mentioned in comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CommentReply:interface",
              "docComment": "/**\n * Represents a comment reply in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentReply "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentReply",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#delete:member(1)",
                  "docComment": "/**\n * Deletes the comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getAuthorEmail:member(1)",
                  "docComment": "/**\n * Gets the email of the comment reply's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAuthorEmail(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAuthorEmail"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getAuthorName:member(1)",
                  "docComment": "/**\n * Gets the name of the comment reply's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAuthorName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAuthorName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getContent:member(1)",
                  "docComment": "/**\n * The comment reply's content. The string is plain text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getContent(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getContent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getCreationDate:member(1)",
                  "docComment": "/**\n * Gets the creation time of the comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCreationDate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCreationDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getId:member(1)",
                  "docComment": "/**\n * Specifies the comment reply identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getLocation:member(1)",
                  "docComment": "/**\n * Gets the cell where this comment reply is located.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getMentions:member(1)",
                  "docComment": "/**\n * The entities (e.g. people) that are mentioned in comments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMentions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentMention",
                      "canonicalReference": "excel!ExcelScript.CommentMention:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMentions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getParentComment:member(1)",
                  "docComment": "/**\n * Gets the parent comment of this reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getParentComment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getParentComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#getRichContent:member(1)",
                  "docComment": "/**\n * The rich comment content (e.g. mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRichContent(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRichContent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#setContent:member(1)",
                  "docComment": "/**\n * The comment reply's content. The string is plain text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setContent(content: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setContent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CommentReply#updateMentions:member(1)",
                  "docComment": "/**\n * Updates the comment content with a specially formatted string and a list of mentions.\n *\n * @param contentWithMentions - The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "updateMentions(contentWithMentions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!ExcelScript.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "contentWithMentions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "updateMentions"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CommentRichContent:interface",
              "docComment": "/**\n * Represents the content contained within a comment or comment reply. Rich content incudes the text string and any other objects contained within the comment body, such as mentions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentRichContent "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentRichContent",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CommentRichContent#mentions:member",
                  "docComment": "/**\n * An array containing all the entities (e.g. people) mentioned within the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mentions?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentMention",
                      "canonicalReference": "excel!ExcelScript.CommentMention:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mentions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CommentRichContent#richContent:member",
                  "docComment": "/**\n * Specifies the rich content of the comment (e.g. comment content with mentions, the first mentioned entity has an id attribute of 0, and the second mentioned entity has an id attribute of 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "richContent: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "richContent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator:enum",
              "docComment": "/**\n * Represents the operator of the text conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalCellValueOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalCellValueOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.between:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "between"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "between",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.equalTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalTo"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalTo",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.greaterThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThan"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThan",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.greaterThanOrEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThanOrEqual"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThanOrEqual",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.lessThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThan"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThan",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.lessThanOrEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThanOrEqual"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThanOrEqual",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.notBetween:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notBetween"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notBetween",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator.notEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notEqualTo"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalCellValueRule:interface",
              "docComment": "/**\n * Represents a cell value conditional format rule.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalCellValueRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalCellValueRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueRule#formula1:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueRule#formula2:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalCellValueRule#operator:member",
                  "docComment": "/**\n * The operator of the cell value conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalCellValueOperator",
                      "canonicalReference": "excel!ExcelScript.ConditionalCellValueOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriteria:interface",
              "docComment": "/**\n * Represents the criteria of the color scale.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalColorScaleCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalColorScaleCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriteria#maximum:member",
                  "docComment": "/**\n * The maximum point Color Scale Criterion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maximum: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriterion",
                      "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maximum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriteria#midpoint:member",
                  "docComment": "/**\n * The midpoint Color Scale Criterion if the color scale is a 3-color scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "midpoint?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriterion",
                      "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "midpoint",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriteria#minimum:member",
                  "docComment": "/**\n * The minimum point Color Scale Criterion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minimum: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriterion",
                      "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minimum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion:interface",
              "docComment": "/**\n * Represents a Color Scale Criterion which contains a type, value, and a color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalColorScaleCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalColorScaleCriterion",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion#color:member",
                  "docComment": "/**\n * HTML color code representation of the color scale color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion#formula:member",
                  "docComment": "/**\n * A number, a formula, or null (if Type is LowestValue).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalColorScaleCriterion#type:member",
                  "docComment": "/**\n * What the criterion conditional formula should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatColorCriterionType",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalDataBarAxisFormat:enum",
              "docComment": "/**\n * Represents the format options for a Data Bar Axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalDataBarAxisFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarAxisFormat",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarAxisFormat.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarAxisFormat.cellMidPoint:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellMidPoint"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellMidPoint",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarAxisFormat.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalDataBarDirection:enum",
              "docComment": "/**\n * Represents the Data Bar direction within a cell.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalDataBarDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarDirection.context:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "context"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "context",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarDirection.leftToRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftToRight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftToRight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarDirection.rightToLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightToLeft"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightToLeft",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat:interface",
              "docComment": "/**\n * Represents a conditional format DataBar Format for the negative side of the data bar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalDataBarNegativeFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarNegativeFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#getBorderColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"Empty String\" if no border is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorderColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorderColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#getFillColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the fill color, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFillColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFillColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#getMatchPositiveBorderColor:member(1)",
                  "docComment": "/**\n * Specifies if the negative DataBar has the same border color as the positive DataBar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMatchPositiveBorderColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMatchPositiveBorderColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#getMatchPositiveFillColor:member(1)",
                  "docComment": "/**\n * Specified if the negative DataBar has the same fill color as the positive DataBar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMatchPositiveFillColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMatchPositiveFillColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#setBorderColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"Empty String\" if no border is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBorderColor(borderColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "borderColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBorderColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#setFillColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the fill color, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFillColor(fillColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fillColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFillColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#setMatchPositiveBorderColor:member(1)",
                  "docComment": "/**\n * Specifies if the negative DataBar has the same border color as the positive DataBar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMatchPositiveBorderColor(matchPositiveBorderColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "matchPositiveBorderColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMatchPositiveBorderColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat#setMatchPositiveFillColor:member(1)",
                  "docComment": "/**\n * Specified if the negative DataBar has the same fill color as the positive DataBar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMatchPositiveFillColor(matchPositiveFillColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "matchPositiveFillColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMatchPositiveFillColor"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat:interface",
              "docComment": "/**\n * Represents a conditional format DataBar Format for the positive side of the data bar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalDataBarPositiveFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarPositiveFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat#getBorderColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"\" (empty string) if no border is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorderColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorderColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat#getFillColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the fill color, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFillColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFillColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat#getGradientFill:member(1)",
                  "docComment": "/**\n * specifies if the DataBar has a gradient.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGradientFill(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGradientFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat#setBorderColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"\" (empty string) if no border is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBorderColor(borderColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "borderColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBorderColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat#setFillColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the fill color, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFillColor(fillColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fillColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFillColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat#setGradientFill:member(1)",
                  "docComment": "/**\n * specifies if the DataBar has a gradient.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGradientFill(gradientFill: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gradientFill",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGradientFill"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule:interface",
              "docComment": "/**\n * Represents a rule-type for a Data Bar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalDataBarRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule#formula:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the databar rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule#type:member",
                  "docComment": "/**\n * The type of rule for the databar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatRuleType",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface",
              "docComment": "/**\n * An object encapsulating a conditional format's range, format, rule, and other properties. To learn more about the conditional formatting object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting | Apply conditional formatting to Excel ranges}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#delete:member(1)",
                  "docComment": "/**\n * Deletes this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getCellValue:member(1)",
                  "docComment": "/**\n * Returns the cell value conditional format properties if the current conditional format is a CellValue type. For example to format all cells between 5 and 10.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCellValue(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellValueConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.CellValueConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCellValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getColorScale:member(1)",
                  "docComment": "/**\n * Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColorScale(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColorScaleConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ColorScaleConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColorScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getCustom:member(1)",
                  "docComment": "/**\n * Returns the custom conditional format properties if the current conditional format is a custom type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCustom(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.CustomConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCustom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getDataBar:member(1)",
                  "docComment": "/**\n * Returns the data bar properties if the current conditional format is a data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataBar(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataBarConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataBar"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getIconSet:member(1)",
                  "docComment": "/**\n * Returns the IconSet conditional format properties if the current conditional format is an IconSet type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIconSet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSetConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIconSet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getId:member(1)",
                  "docComment": "/**\n * The Priority of the Conditional Format within the current ConditionalFormatCollection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getPreset:member(1)",
                  "docComment": "/**\n * Returns the preset criteria conditional format. See Excel.PresetCriteriaConditionalFormat for more details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPreset(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PresetCriteriaConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.PresetCriteriaConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPreset"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getPriority:member(1)",
                  "docComment": "/**\n * The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order. Use a negative priority to begin from the back. Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority. Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPriority(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPriority"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getRange:member(1)",
                  "docComment": "/**\n * Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getRanges:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas, comprising one or more rectangular ranges, the conditonal format is applied to.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRanges(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRanges"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getStopIfTrue:member(1)",
                  "docComment": "/**\n * If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell. Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStopIfTrue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStopIfTrue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getTextComparison:member(1)",
                  "docComment": "/**\n * Returns the specific text conditional format properties if the current conditional format is a text type. For example to format cells matching the word \"Text\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextComparison(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.TextConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextComparison"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getTopBottom:member(1)",
                  "docComment": "/**\n * Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type. For example to format the top 10% or bottom 10 items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTopBottom(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TopBottomConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.TopBottomConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTopBottom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#getType:member(1)",
                  "docComment": "/**\n * A type of conditional format. Only one can be set at a time.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatType",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#setPriority:member(1)",
                  "docComment": "/**\n * The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order. Use a negative priority to begin from the back. Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority. Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPriority(priority: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "priority",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPriority"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormat#setStopIfTrue:member(1)",
                  "docComment": "/**\n * If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell. Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStopIfTrue(stopIfTrue: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "stopIfTrue",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStopIfTrue"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType:enum",
              "docComment": "/**\n * Represents the types of color criterion for conditional formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatColorCriterionType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatColorCriterionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.formula:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.highestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "highestValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "highestValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.lowestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lowestValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lowestValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatColorCriterionType.percentile:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentile"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentile",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatDirection:enum",
              "docComment": "/**\n * Represents the direction for a selection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatDirection.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatDirection.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType:enum",
              "docComment": "/**\n * Represents the types of icon conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatIconRuleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatIconRuleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType.formula:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType.percentile:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentile"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentile",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion:enum",
              "docComment": "/**\n * Represents the criteria for the Preset Criteria conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatPresetCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatPresetCriterion",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.aboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "aboveAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "aboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.belowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "belowAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "belowAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.blanks:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blanks"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blanks",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.duplicateValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicateValues"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "duplicateValues",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.equalOrAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalOrAboveAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalOrAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.equalOrBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalOrBelowAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalOrBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.errors:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errors"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errors",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.lastMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastMonth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastMonth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.lastSevenDays:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastSevenDays"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastSevenDays",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.lastWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastWeek"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastWeek",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.nextMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextMonth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextMonth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.nextWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextWeek"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextWeek",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.nonBlanks:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nonBlanks"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nonBlanks",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.nonErrors:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nonErrors"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nonErrors",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.oneStdDevAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oneStdDevAboveAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oneStdDevAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.oneStdDevBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oneStdDevBelowAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oneStdDevBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.thisMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisMonth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisMonth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.thisWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisWeek"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisWeek",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.threeStdDevAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeStdDevAboveAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeStdDevAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.threeStdDevBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeStdDevBelowAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeStdDevBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.today:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "today"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "today",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.tomorrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tomorrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tomorrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.twoStdDevAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoStdDevAboveAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoStdDevAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.twoStdDevBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoStdDevBelowAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoStdDevBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.uniqueValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "uniqueValues"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "uniqueValues",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion.yesterday:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "yesterday"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yesterday",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatRule:interface",
              "docComment": "/**\n * Represents a rule, for all traditional rule/format pairings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalFormatRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatRule",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRule#getFormula:member(1)",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormula(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRule#getFormulaLocal:member(1)",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on in the user's language.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulaLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulaLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRule#setFormula:member(1)",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRule#setFormulaLocal:member(1)",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on in the user's language.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulaLocal(formulaLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulaLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulaLocal"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType:enum",
              "docComment": "/**\n * Represents the types of conditional format values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatRuleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatRuleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.formula:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.highestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "highestValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "highestValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.lowestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lowestValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lowestValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatRuleType.percentile:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentile"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentile",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalFormatType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.cellValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.colorScale:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorScale"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorScale",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.containsText:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "containsText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "containsText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.dataBar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataBar"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataBar",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.iconSet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "iconSet"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "iconSet",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.presetCriteria:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "presetCriteria"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "presetCriteria",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalFormatType.topBottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topBottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topBottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion:interface",
              "docComment": "/**\n * Represents an Icon Criterion which contains a type, value, an Operator, and an optional custom icon, if not using an iconset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalIconCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalIconCriterion",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion#customIcon:member",
                  "docComment": "/**\n * The custom icon for the current criterion if different from the default IconSet, else null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "customIcon?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!ExcelScript.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "customIcon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion#formula:member",
                  "docComment": "/**\n * A number or a formula depending on the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion#operator:member",
                  "docComment": "/**\n * GreaterThan or GreaterThanOrEqual for each of the rule type for the Icon conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalIconCriterionOperator",
                      "canonicalReference": "excel!ExcelScript.ConditionalIconCriterionOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion#type:member",
                  "docComment": "/**\n * What the icon conditional formula should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatIconRuleType",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatIconRuleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalIconCriterionOperator:enum",
              "docComment": "/**\n * Represents the operator for each icon criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalIconCriterionOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalIconCriterionOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterionOperator.greaterThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThan"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThan",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterionOperator.greaterThanOrEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThanOrEqual"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThanOrEqual",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalIconCriterionOperator.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalPresetCriteriaRule:interface",
              "docComment": "/**\n * Represents the Preset Criteria Conditional Format Rule\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalPresetCriteriaRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalPresetCriteriaRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalPresetCriteriaRule#criterion:member",
                  "docComment": "/**\n * The criterion of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criterion: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatPresetCriterion",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatPresetCriterion:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criterion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface",
              "docComment": "/**\n * Represents the border of an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorder",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder#getSideIndex:member(1)",
                  "docComment": "/**\n * Constant value that indicates the specific side of the border. See Excel.ConditionalRangeBorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSideIndex(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderIndex",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSideIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder#getStyle:member(1)",
                  "docComment": "/**\n * One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderLineStyle",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder#setStyle:member(1)",
                  "docComment": "/**\n * One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStyle(style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderLineStyle",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "style",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStyle"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalRangeBorderIndex "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorderIndex",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex.edgeBottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeBottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeBottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex.edgeLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeLeft"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeLeft",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex.edgeRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeRight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeRight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex.edgeTop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeTop"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeTop",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalRangeBorderLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorderLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle.continuous:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continuous"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continuous",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderLineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeFill:interface",
              "docComment": "/**\n * Represents the background of a conditional range object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeFill "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFill#clear:member(1)",
                  "docComment": "/**\n * Resets the fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFill#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the fill, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFill#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the fill, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeFont:interface",
              "docComment": "/**\n * This object represents the font attributes (font style, color, etc.) for an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeFont "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFont",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#clear:member(1)",
                  "docComment": "/**\n * Resets the font formats.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#getBold:member(1)",
                  "docComment": "/**\n * Specifies if the font is bold.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBold(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#getItalic:member(1)",
                  "docComment": "/**\n * Specifies if the font is italic.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItalic(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#getStrikethrough:member(1)",
                  "docComment": "/**\n * Specifies the strikethrough status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStrikethrough(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStrikethrough"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#getUnderline:member(1)",
                  "docComment": "/**\n * The type of underline applied to the font. See Excel.ConditionalRangeFontUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUnderline(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFontUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFontUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUnderline"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#setBold:member(1)",
                  "docComment": "/**\n * Specifies if the font is bold.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBold(bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bold",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#setItalic:member(1)",
                  "docComment": "/**\n * Specifies if the font is italic.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setItalic(italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "italic",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#setStrikethrough:member(1)",
                  "docComment": "/**\n * Specifies the strikethrough status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStrikethrough(strikethrough: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "strikethrough",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStrikethrough"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFont#setUnderline:member(1)",
                  "docComment": "/**\n * The type of underline applied to the font. See Excel.ConditionalRangeFontUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUnderline(underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFontUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFontUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "underline",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUnderline"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeFontUnderlineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalRangeFontUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFontUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFontUnderlineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFontUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFontUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat:interface",
              "docComment": "/**\n * A format object encapsulating the conditional formats range's font, fill, borders, and other properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getBorders:member(1)",
                  "docComment": "/**\n * Collection of border objects that apply to the overall conditional format range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorders(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorders"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorder:member(1)",
                  "docComment": "/**\n * Gets a border object using its name.\n *\n * @param index - Index value of the border object to be retrieved. See Excel.ConditionalRangeBorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalRangeBorder(\n            index: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderIndex",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getConditionalRangeBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderBottom:member(1)",
                  "docComment": "/**\n * Gets the bottom border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalRangeBorderBottom(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConditionalRangeBorderBottom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderLeft:member(1)",
                  "docComment": "/**\n * Gets the left border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalRangeBorderLeft(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConditionalRangeBorderLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderRight:member(1)",
                  "docComment": "/**\n * Gets the right border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalRangeBorderRight(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConditionalRangeBorderRight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getConditionalRangeBorderTop:member(1)",
                  "docComment": "/**\n * Gets the top border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalRangeBorderTop(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConditionalRangeBorderTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getFill:member(1)",
                  "docComment": "/**\n * Returns the fill object defined on the overall conditional format range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFill",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getFont:member(1)",
                  "docComment": "/**\n * Returns the font object defined on the overall conditional format range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFont",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#getNumberFormat:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given range. Cleared if null is passed in.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat#setNumberFormat:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given range. Cleared if null is passed in.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalTextComparisonRule:interface",
              "docComment": "/**\n * Represents a Cell Value Conditional Format Rule\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalTextComparisonRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTextComparisonRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextComparisonRule#operator:member",
                  "docComment": "/**\n * The operator of the text conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTextOperator",
                      "canonicalReference": "excel!ExcelScript.ConditionalTextOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextComparisonRule#text:member",
                  "docComment": "/**\n * The Text value of conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalTextOperator:enum",
              "docComment": "/**\n * Represents the operator of the text conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalTextOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTextOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextOperator.beginsWith:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginsWith"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginsWith",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextOperator.contains:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contains"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "contains",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextOperator.endsWith:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endsWith"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endsWith",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextOperator.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTextOperator.notContains:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notContains"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notContains",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType:enum",
              "docComment": "/**\n * Represents the criteria for the above/below average conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalTopBottomCriterionType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTopBottomCriterionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType.bottomItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomItems"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomItems",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType.bottomPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomPercent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomPercent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType.topItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topItems"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topItems",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType.topPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topPercent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topPercent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ConditionalTopBottomRule:interface",
              "docComment": "/**\n * Represents the rule of the top/bottom conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalTopBottomRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTopBottomRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomRule#rank:member",
                  "docComment": "/**\n * The rank between 1 and 1000 for numeric ranks or 1 and 100 for percent ranks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rank: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rank",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ConditionalTopBottomRule#type:member",
                  "docComment": "/**\n * Format values based on the top or bottom rank.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTopBottomCriterionType",
                      "canonicalReference": "excel!ExcelScript.ConditionalTopBottomCriterionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ConnectorType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConnectorType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConnectorType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConnectorType.curve:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curve"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curve",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConnectorType.elbow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "elbow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "elbow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ConnectorType.straight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "straight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "straight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ContentType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ContentType "
                }
              ],
              "releaseTag": "Public",
              "name": "ContentType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ContentType.mention:member",
                  "docComment": "/**\n * Comment content containing mentions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mention"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mention",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ContentType.plain:member",
                  "docComment": "/**\n * Indicates plain format type of the comment content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plain"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plain",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CustomConditionalFormat:interface",
              "docComment": "/**\n * Represents a custom conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomConditionalFormat#getFormat:member(1)",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomConditionalFormat#getRule:member(1)",
                  "docComment": "/**\n * Specifies the Rule object on this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CustomDataValidation:interface",
              "docComment": "/**\n * Represents the Custom data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.CustomDataValidation#formula:member",
                  "docComment": "/**\n * A custom data validation formula. This creates special input rules, such as preventing duplicates, or limiting the total in a range of cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CustomProperty:interface",
              "docComment": "/**\n * Represents a custom property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomProperty "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomProperty",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomProperty#delete:member(1)",
                  "docComment": "/**\n * Deletes the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomProperty#getKey:member(1)",
                  "docComment": "/**\n * The key of the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getKey(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomProperty#getType:member(1)",
                  "docComment": "/**\n * The type of the value used for the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DocumentPropertyType",
                      "canonicalReference": "excel!ExcelScript.DocumentPropertyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomProperty#getValue:member(1)",
                  "docComment": "/**\n * The value of the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomProperty#setValue:member(1)",
                  "docComment": "/**\n * The value of the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValue(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValue"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.CustomXmlPart:interface",
              "docComment": "/**\n * Represents a custom XML part object in a workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomXmlPart "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomXmlPart",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomXmlPart#delete:member(1)",
                  "docComment": "/**\n * Deletes the custom XML part.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomXmlPart#getId:member(1)",
                  "docComment": "/**\n * The custom XML part's ID.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomXmlPart#getNamespaceUri:member(1)",
                  "docComment": "/**\n * The custom XML part's namespace URI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNamespaceUri(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNamespaceUri"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomXmlPart#getXml:member(1)",
                  "docComment": "/**\n * Gets the custom XML part's full XML content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getXml(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getXml"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.CustomXmlPart#setXml:member(1)",
                  "docComment": "/**\n * Sets the custom XML part's full XML content.\n *\n * @param xml - XML content for the part.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setXml(xml: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "xml",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setXml"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat:interface",
              "docComment": "/**\n * Represents an Excel Conditional Data Bar Type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataBarConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "DataBarConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getAxisColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the Axis line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"\" (empty string) if no axis is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAxisColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAxisColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getAxisFormat:member(1)",
                  "docComment": "/**\n * Representation of how the axis is determined for an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAxisFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarAxisFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarAxisFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAxisFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getBarDirection:member(1)",
                  "docComment": "/**\n * Specifies the direction that the data bar graphic should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBarDirection(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarDirection",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBarDirection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getLowerBoundRule:member(1)",
                  "docComment": "/**\n * The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar. The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLowerBoundRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLowerBoundRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getNegativeFormat:member(1)",
                  "docComment": "/**\n * Representation of all values to the left of the axis in an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNegativeFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarNegativeFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarNegativeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNegativeFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getPositiveFormat:member(1)",
                  "docComment": "/**\n * Representation of all values to the right of the axis in an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPositiveFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarPositiveFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarPositiveFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPositiveFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getShowDataBarOnly:member(1)",
                  "docComment": "/**\n * If true, hides the values from the cells where the data bar is applied.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowDataBarOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowDataBarOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#getUpperBoundRule:member(1)",
                  "docComment": "/**\n * The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar. The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUpperBoundRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUpperBoundRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#setAxisColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the Axis line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\"). \"\" (empty string) if no axis is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAxisColor(axisColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "axisColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAxisColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#setAxisFormat:member(1)",
                  "docComment": "/**\n * Representation of how the axis is determined for an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAxisFormat(axisFormat: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarAxisFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarAxisFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "axisFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAxisFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#setBarDirection:member(1)",
                  "docComment": "/**\n * Specifies the direction that the data bar graphic should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBarDirection(barDirection: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarDirection",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "barDirection",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBarDirection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#setLowerBoundRule:member(1)",
                  "docComment": "/**\n * The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar. The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLowerBoundRule(lowerBoundRule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "lowerBoundRule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLowerBoundRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#setShowDataBarOnly:member(1)",
                  "docComment": "/**\n * If true, hides the values from the cells where the data bar is applied.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowDataBarOnly(showDataBarOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showDataBarOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowDataBarOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataBarConditionalFormat#setUpperBoundRule:member(1)",
                  "docComment": "/**\n * The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar. The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUpperBoundRule(upperBoundRule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalDataBarRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "upperBoundRule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUpperBoundRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel DataPivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataPivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "DataPivotHierarchy",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getField:member(1)",
                  "docComment": "/**\n * Returns the PivotFields associated with the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getField(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getField"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getId:member(1)",
                  "docComment": "/**\n * Id of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getName:member(1)",
                  "docComment": "/**\n * Name of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getNumberFormat:member(1)",
                  "docComment": "/**\n * Number format of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getPosition:member(1)",
                  "docComment": "/**\n * Position of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getShowAs:member(1)",
                  "docComment": "/**\n * Specifies if the data should be shown as a specific summary calculation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowAs(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShowAsRule",
                      "canonicalReference": "excel!ExcelScript.ShowAsRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowAs"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#getSummarizeBy:member(1)",
                  "docComment": "/**\n * Specifies if all items of the DataPivotHierarchy are shown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSummarizeBy(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "AggregationFunction",
                      "canonicalReference": "excel!ExcelScript.AggregationFunction:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSummarizeBy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#setName:member(1)",
                  "docComment": "/**\n * Name of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#setNumberFormat:member(1)",
                  "docComment": "/**\n * Number format of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#setPosition:member(1)",
                  "docComment": "/**\n * Position of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#setShowAs:member(1)",
                  "docComment": "/**\n * Specifies if the data should be shown as a specific summary calculation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowAs(showAs: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShowAsRule",
                      "canonicalReference": "excel!ExcelScript.ShowAsRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showAs",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowAs"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#setSummarizeBy:member(1)",
                  "docComment": "/**\n * Specifies if all items of the DataPivotHierarchy are shown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSummarizeBy(summarizeBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AggregationFunction",
                      "canonicalReference": "excel!ExcelScript.AggregationFunction:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "summarizeBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSummarizeBy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataPivotHierarchy#setToDefault:member(1)",
                  "docComment": "/**\n * Reset the DataPivotHierarchy back to its default values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setToDefault(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setToDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DataValidation:interface",
              "docComment": "/**\n * Represents the data validation applied to the current range. To learn more about the data validation object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-data-validation | Add data validation to Excel ranges}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidation",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#clear:member(1)",
                  "docComment": "/**\n * Clears the data validation from the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getErrorAlert:member(1)",
                  "docComment": "/**\n * Error alert when user enters invalid data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getErrorAlert(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationErrorAlert",
                      "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getErrorAlert"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getIgnoreBlanks:member(1)",
                  "docComment": "/**\n * Specifies if data validation will be performed on blank cells, it defaults to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIgnoreBlanks(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIgnoreBlanks"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getInvalidCells:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas, comprising one or more rectangular ranges, with invalid cell values. If all cell values are valid, this function will return null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInvalidCells(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInvalidCells"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getPrompt:member(1)",
                  "docComment": "/**\n * Prompt when users select a cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrompt(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationPrompt",
                      "canonicalReference": "excel!ExcelScript.DataValidationPrompt:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrompt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getRule:member(1)",
                  "docComment": "/**\n * Data validation rule that contains different type of data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationRule",
                      "canonicalReference": "excel!ExcelScript.DataValidationRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getType:member(1)",
                  "docComment": "/**\n * Type of the data validation, see Excel.DataValidationType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationType",
                      "canonicalReference": "excel!ExcelScript.DataValidationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#getValid:member(1)",
                  "docComment": "/**\n * Represents if all cell values are valid according to the data validation rules. Returns true if all cell values are valid, or false if all cell values are invalid. Returns null if there are both valid and invalid cell values within the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValid(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValid"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#setErrorAlert:member(1)",
                  "docComment": "/**\n * Error alert when user enters invalid data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setErrorAlert(errorAlert: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationErrorAlert",
                      "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "errorAlert",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setErrorAlert"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#setIgnoreBlanks:member(1)",
                  "docComment": "/**\n * Specifies if data validation will be performed on blank cells, it defaults to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIgnoreBlanks(ignoreBlanks: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "ignoreBlanks",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIgnoreBlanks"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#setPrompt:member(1)",
                  "docComment": "/**\n * Prompt when users select a cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrompt(prompt: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationPrompt",
                      "canonicalReference": "excel!ExcelScript.DataValidationPrompt:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "prompt",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPrompt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DataValidation#setRule:member(1)",
                  "docComment": "/**\n * Data validation rule that contains different type of data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRule(rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationRule",
                      "canonicalReference": "excel!ExcelScript.DataValidationRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.DataValidationAlertStyle:enum",
              "docComment": "/**\n * Represents Data validation error alert style. The default is \"Stop\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DataValidationAlertStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationAlertStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationAlertStyle.information:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "information"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "information",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationAlertStyle.stop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stop"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stop",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationAlertStyle.warning:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "warning"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "warning",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert:interface",
              "docComment": "/**\n * Represents the error alert properties for the data validation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidationErrorAlert "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationErrorAlert",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert#message:member",
                  "docComment": "/**\n * Represents error alert message.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert#showAlert:member",
                  "docComment": "/**\n * Specifies whether to show an error alert dialog when a user enters invalid data. The default is true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAlert: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAlert",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert#style:member",
                  "docComment": "/**\n * The data validation alert type, please see Excel.DataValidationAlertStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationAlertStyle",
                      "canonicalReference": "excel!ExcelScript.DataValidationAlertStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationErrorAlert#title:member",
                  "docComment": "/**\n * Represents error alert dialog title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.DataValidationOperator:enum",
              "docComment": "/**\n * Represents Data validation operator enum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DataValidationOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.between:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "between"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "between",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.equalTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalTo"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalTo",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.greaterThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThan"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThan",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.greaterThanOrEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThanOrEqualTo"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThanOrEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.lessThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThan"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThan",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.lessThanOrEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThanOrEqualTo"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThanOrEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.notBetween:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notBetween"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notBetween",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationOperator.notEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notEqualTo"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DataValidationPrompt:interface",
              "docComment": "/**\n * Represents the user prompt properties for the data validation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidationPrompt "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationPrompt",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationPrompt#message:member",
                  "docComment": "/**\n * Specifies the message of the prompt.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationPrompt#showPrompt:member",
                  "docComment": "/**\n * Specifies if a prompt is shown when a user selects a cell with data validation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showPrompt: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showPrompt",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationPrompt#title:member",
                  "docComment": "/**\n * Specifies the title for the prompt.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DataValidationRule:interface",
              "docComment": "/**\n * Data validation rule contains different types of data validation. You can only use one of them at a time according the Excel.DataValidationType.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidationRule "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#custom:member",
                  "docComment": "/**\n * Custom data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomDataValidation",
                      "canonicalReference": "excel!ExcelScript.CustomDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#date:member",
                  "docComment": "/**\n * Date data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DateTimeDataValidation",
                      "canonicalReference": "excel!ExcelScript.DateTimeDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#decimal:member",
                  "docComment": "/**\n * Decimal data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "decimal?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BasicDataValidation",
                      "canonicalReference": "excel!ExcelScript.BasicDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decimal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#list:member",
                  "docComment": "/**\n * List data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "list?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ListDataValidation",
                      "canonicalReference": "excel!ExcelScript.ListDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "list",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#textLength:member",
                  "docComment": "/**\n * TextLength data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textLength?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BasicDataValidation",
                      "canonicalReference": "excel!ExcelScript.BasicDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textLength",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#time:member",
                  "docComment": "/**\n * Time data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "time?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DateTimeDataValidation",
                      "canonicalReference": "excel!ExcelScript.DateTimeDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "time",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DataValidationRule#wholeNumber:member",
                  "docComment": "/**\n * WholeNumber data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeNumber?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BasicDataValidation",
                      "canonicalReference": "excel!ExcelScript.BasicDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeNumber",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.DataValidationType:enum",
              "docComment": "/**\n * Represents Data validation type enum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DataValidationType "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.custom:member",
                  "docComment": "/**\n * Custom data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.date:member",
                  "docComment": "/**\n * Date data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.decimal:member",
                  "docComment": "/**\n * Decimal data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "decimal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decimal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.inconsistent:member",
                  "docComment": "/**\n * Inconsistent means that the range has inconsistent data validation (there are different rules on different cells)\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inconsistent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inconsistent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.list:member",
                  "docComment": "/**\n * List data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "list"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "list",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.mixedCriteria:member",
                  "docComment": "/**\n * MixedCriteria means that the range has data validation present on some but not all cells\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mixedCriteria"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mixedCriteria",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.none:member",
                  "docComment": "/**\n * None means allow any value and so there is no data validation in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.textLength:member",
                  "docComment": "/**\n * Text length data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textLength"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textLength",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.time:member",
                  "docComment": "/**\n * Time data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "time"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "time",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DataValidationType.wholeNumber:member",
                  "docComment": "/**\n * Whole number data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeNumber"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeNumber",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DateTimeDataValidation:interface",
              "docComment": "/**\n * Represents the Date data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DateTimeDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "DateTimeDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DateTimeDataValidation#formula1:member",
                  "docComment": "/**\n * Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand. When setting the value, it can be passed in as a Date, a Range object, or a string formula (where the string is either a stringified date/time in ISO8601 format, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DateTimeDataValidation#formula2:member",
                  "docComment": "/**\n * With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan. When setting the value, it can be passed in as a Date, a Range object, or a string (where the string is either a stringified date/time in ISO8601 format, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.DateTimeDataValidation#operator:member",
                  "docComment": "/**\n * The operator to use for validating the data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationOperator",
                      "canonicalReference": "excel!ExcelScript.DataValidationOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.DeleteShiftDirection:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DeleteShiftDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "DeleteShiftDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DeleteShiftDirection.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DeleteShiftDirection.up:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "up"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "up",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.DocumentProperties:interface",
              "docComment": "/**\n * Represents workbook properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DocumentProperties "
                }
              ],
              "releaseTag": "Public",
              "name": "DocumentProperties",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#addCustomProperty:member(1)",
                  "docComment": "/**\n * Creates a new or sets an existing custom property.\n *\n * @param key - Required. The custom property's key, which is case-insensitive.\n *\n * @param value - Required. The custom property's value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addCustomProperty(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperty",
                      "canonicalReference": "excel!ExcelScript.CustomProperty:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addCustomProperty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#deleteAllCustomProperties:member(1)",
                  "docComment": "/**\n * Deletes all custom properties in this collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "deleteAllCustomProperties(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "deleteAllCustomProperties"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getAuthor:member(1)",
                  "docComment": "/**\n * The author of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAuthor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAuthor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getCategory:member(1)",
                  "docComment": "/**\n * The category of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCategory(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCategory"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getComments:member(1)",
                  "docComment": "/**\n * The comments of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getComments(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getComments"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getCompany:member(1)",
                  "docComment": "/**\n * The company of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCompany(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCompany"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getCreationDate:member(1)",
                  "docComment": "/**\n * Gets the creation date of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCreationDate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCreationDate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getCustom:member(1)",
                  "docComment": "/**\n * Gets the collection of custom properties of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCustom(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperty",
                      "canonicalReference": "excel!ExcelScript.CustomProperty:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCustom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getCustomProperty:member(1)",
                  "docComment": "/**\n * Gets a custom property object by its key, which is case-insensitive. Returns a null object if the custom property does not exist.\n *\n * @param key - Required. The key that identifies the custom property object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCustomProperty(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperty",
                      "canonicalReference": "excel!ExcelScript.CustomProperty:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getCustomProperty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getKeywords:member(1)",
                  "docComment": "/**\n * The keywords of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getKeywords(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getKeywords"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getLastAuthor:member(1)",
                  "docComment": "/**\n * Gets the last author of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastAuthor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastAuthor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getManager:member(1)",
                  "docComment": "/**\n * The manager of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getManager(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getManager"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getRevisionNumber:member(1)",
                  "docComment": "/**\n * Gets the revision number of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRevisionNumber(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRevisionNumber"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getSubject:member(1)",
                  "docComment": "/**\n * The subject of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubject(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSubject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#getTitle:member(1)",
                  "docComment": "/**\n * The title of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTitle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTitle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setAuthor:member(1)",
                  "docComment": "/**\n * The author of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAuthor(author: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "author",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAuthor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setCategory:member(1)",
                  "docComment": "/**\n * The category of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCategory(category: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "category",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCategory"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setComments:member(1)",
                  "docComment": "/**\n * The comments of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setComments(comments: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "comments",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setComments"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setCompany:member(1)",
                  "docComment": "/**\n * The company of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCompany(company: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "company",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCompany"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setKeywords:member(1)",
                  "docComment": "/**\n * The keywords of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setKeywords(keywords: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "keywords",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setKeywords"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setManager:member(1)",
                  "docComment": "/**\n * The manager of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setManager(manager: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "manager",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setManager"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setRevisionNumber:member(1)",
                  "docComment": "/**\n * Gets the revision number of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRevisionNumber(revisionNumber: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "revisionNumber",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRevisionNumber"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setSubject:member(1)",
                  "docComment": "/**\n * The subject of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSubject(subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "subject",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSubject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.DocumentProperties#setTitle:member(1)",
                  "docComment": "/**\n * The title of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTitle(title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "title",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTitle"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.DocumentPropertyType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DocumentPropertyType "
                }
              ],
              "releaseTag": "Public",
              "name": "DocumentPropertyType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DocumentPropertyType.boolean:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boolean"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boolean",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DocumentPropertyType.date:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DocumentPropertyType.float:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "float"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "float",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DocumentPropertyType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DocumentPropertyType.string:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "string",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DynamicFilterCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "DynamicFilterCriteria",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.aboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "aboveAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "aboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodApril:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodApril"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodApril",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodAugust:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodAugust"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodAugust",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodDecember:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodDecember"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodDecember",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodFebruray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodFebruray"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodFebruray",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodJanuary:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodJanuary"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodJanuary",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodJuly:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodJuly"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodJuly",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodJune:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodJune"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodJune",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodMarch:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodMarch"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodMarch",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodMay:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodMay"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodMay",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodNovember:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodNovember"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodNovember",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodOctober:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodOctober"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodOctober",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodQuarter1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodQuarter2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodQuarter3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodQuarter4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.allDatesInPeriodSeptember:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodSeptember"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodSeptember",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.belowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "belowAverage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "belowAverage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.lastMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastMonth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastMonth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.lastQuarter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastQuarter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastQuarter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.lastWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastWeek"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastWeek",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.lastYear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastYear"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastYear",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.nextMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextMonth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextMonth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.nextQuarter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextQuarter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextQuarter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.nextWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextWeek"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextWeek",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.nextYear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextYear"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextYear",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.thisMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisMonth"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisMonth",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.thisQuarter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisQuarter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisQuarter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.thisWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisWeek"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisWeek",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.thisYear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisYear"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisYear",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.today:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "today"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "today",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.tomorrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tomorrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tomorrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.unknown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.yearToDate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "yearToDate"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yearToDate",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria.yesterday:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "yesterday"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yesterday",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.FillPattern:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FillPattern "
                }
              ],
              "releaseTag": "Public",
              "name": "FillPattern",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.checker:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "checker"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "checker",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.crissCross:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "crissCross"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "crissCross",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.down:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "down"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "down",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.gray16:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray16"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray16",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.gray25:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray25"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray25",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.gray50:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray50"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray50",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.gray75:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray75"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray75",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.gray8:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray8"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray8",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.grid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.horizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.lightDown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightDown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightDown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.lightHorizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightHorizontal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightHorizontal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.lightUp:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightUp"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightUp",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.lightVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightVertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightVertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.linearGradient:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linearGradient"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linearGradient",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.rectangularGradient:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rectangularGradient"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rectangularGradient",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.semiGray75:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "semiGray75"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "semiGray75",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.solid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "solid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "solid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.up:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "up"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "up",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FillPattern.vertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Filter:interface",
              "docComment": "/**\n * Manages the filtering of a table's column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Filter "
                }
              ],
              "releaseTag": "Public",
              "name": "Filter",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#apply:member(1)",
                  "docComment": "/**\n * Apply the given filter criteria on the given column.\n *\n * @param criteria - The criteria to apply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!ExcelScript.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyBottomItemsFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Bottom Item\" filter to the column for the given number of elements.\n *\n * @param count - The number of elements from the bottom to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyBottomItemsFilter(count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyBottomItemsFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyBottomPercentFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Bottom Percent\" filter to the column for the given percentage of elements.\n *\n * @param percent - The percentage of elements from the bottom to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyBottomPercentFilter(percent: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "percent",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyBottomPercentFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyCellColorFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Cell Color\" filter to the column for the given color.\n *\n * @param color - The background color of the cells to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyCellColorFilter(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyCellColorFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyCustomFilter:member(1)",
                  "docComment": "/**\n * Apply an \"Icon\" filter to the column for the given criteria strings.\n *\n * @param criteria1 - The first criteria string.\n *\n * @param criteria2 - Optional. The second criteria string.\n *\n * @param oper - Optional. The operator that describes how the two criteria are joined.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyCustomFilter(\n            criteria1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            oper?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterOperator",
                      "canonicalReference": "excel!ExcelScript.FilterOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria1",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria2",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "oper",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "applyCustomFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyDynamicFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Dynamic\" filter to the column.\n *\n * @param criteria - The dynamic criteria to apply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyDynamicFilter(criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DynamicFilterCriteria",
                      "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyDynamicFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyFontColorFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Font Color\" filter to the column for the given color.\n *\n * @param color - The font color of the cells to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyFontColorFilter(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyFontColorFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyIconFilter:member(1)",
                  "docComment": "/**\n * Apply an \"Icon\" filter to the column for the given icon.\n *\n * @param icon - The icons of the cells to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyIconFilter(icon: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!ExcelScript.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "icon",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyIconFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyTopItemsFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Top Item\" filter to the column for the given number of elements.\n *\n * @param count - The number of elements from the top to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyTopItemsFilter(count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyTopItemsFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyTopPercentFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Top Percent\" filter to the column for the given percentage of elements.\n *\n * @param percent - The percentage of elements from the top to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyTopPercentFilter(percent: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "percent",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyTopPercentFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#applyValuesFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Values\" filter to the column for the given values.\n *\n * @param values - The list of values to show. This must be an array of strings or an array of Excel.FilterDateTime objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyValuesFilter(values: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterDatetime",
                      "canonicalReference": "excel!ExcelScript.FilterDatetime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "applyValuesFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#clear:member(1)",
                  "docComment": "/**\n * Clear the filter on the given column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Filter#getCriteria:member(1)",
                  "docComment": "/**\n * The currently applied filter on the given column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCriteria(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!ExcelScript.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCriteria"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.FilterCriteria:interface",
              "docComment": "/**\n * Represents the filtering criteria applied to a column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#color:member",
                  "docComment": "/**\n * The HTML color string used to filter cells. Used with \"cellColor\" and \"fontColor\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#criterion1:member",
                  "docComment": "/**\n * The first criterion used to filter data. Used as an operator in the case of \"custom\" filtering. For example \">50\" for number greater than 50 or \"=*s\" for values ending in \"s\".\n *\n * Used as a number in the case of top/bottom items/percents. E.g. \"5\" for the top 5 items if filterOn is set to \"topItems\"\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criterion1?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criterion1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#criterion2:member",
                  "docComment": "/**\n * The second criterion used to filter data. Only used as an operator in the case of \"custom\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criterion2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criterion2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#dynamicCriteria:member",
                  "docComment": "/**\n * The dynamic criteria from the Excel.DynamicFilterCriteria set to apply on this column. Used with \"dynamic\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dynamicCriteria?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DynamicFilterCriteria",
                      "canonicalReference": "excel!ExcelScript.DynamicFilterCriteria:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dynamicCriteria",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#filterOn:member",
                  "docComment": "/**\n * The property used by the filter to determine whether the values should stay visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "filterOn: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterOn",
                      "canonicalReference": "excel!ExcelScript.FilterOn:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filterOn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#icon:member",
                  "docComment": "/**\n * The icon used to filter cells. Used with \"icon\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!ExcelScript.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#operator:member",
                  "docComment": "/**\n * The operator used to combine criterion 1 and 2 when using \"custom\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterOperator",
                      "canonicalReference": "excel!ExcelScript.FilterOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#subField:member",
                  "docComment": "/**\n * The property used by the filter to do rich filter on richvalues.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subField?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subField",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterCriteria#values:member",
                  "docComment": "/**\n * The set of values to be used as part of \"values\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterDatetime",
                      "canonicalReference": "excel!ExcelScript.FilterDatetime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.FilterDatetime:interface",
              "docComment": "/**\n * Represents how to filter a date when filtering on values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterDatetime "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterDatetime",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterDatetime#date:member",
                  "docComment": "/**\n * The date in ISO8601 format used to filter data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.FilterDatetime#specificity:member",
                  "docComment": "/**\n * How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to \"month\", the filter operation will keep all rows with a date in the month of april 2009.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "specificity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterDatetimeSpecificity",
                      "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "specificity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FilterDatetimeSpecificity "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterDatetimeSpecificity",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity.day:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "day"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "day",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity.hour:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hour"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hour",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity.minute:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minute"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minute",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity.month:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "month"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "month",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity.second:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "second"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "second",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterDatetimeSpecificity.year:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "year"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "year",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.FilterOn:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FilterOn "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterOn",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.bottomItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomItems"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomItems",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.bottomPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomPercent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomPercent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.cellColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellColor"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellColor",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.dynamic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dynamic"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dynamic",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.fontColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fontColor"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fontColor",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.icon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.topItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topItems"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topItems",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.topPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topPercent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topPercent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOn.values:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.FilterOperator:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FilterOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOperator.and:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "and"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "and",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.FilterOperator.or:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "or"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "or",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel FilterPivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterPivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterPivotHierarchy",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#getEnableMultipleFilterItems:member(1)",
                  "docComment": "/**\n * Determines whether to allow multiple filter items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnableMultipleFilterItems(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEnableMultipleFilterItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#getFields:member(1)",
                  "docComment": "/**\n * Returns the PivotFields associated with the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFields(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFields"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#getId:member(1)",
                  "docComment": "/**\n * Id of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#getName:member(1)",
                  "docComment": "/**\n * Name of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#getPivotField:member(1)",
                  "docComment": "/**\n * Gets a PivotField by name. If the PivotField does not exist, will return a null object.\n *\n * @param name - Name of the PivotField to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotField(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotField"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#getPosition:member(1)",
                  "docComment": "/**\n * Position of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#setEnableMultipleFilterItems:member(1)",
                  "docComment": "/**\n * Determines whether to allow multiple filter items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnableMultipleFilterItems(enableMultipleFilterItems: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enableMultipleFilterItems",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEnableMultipleFilterItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#setName:member(1)",
                  "docComment": "/**\n * Name of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#setPosition:member(1)",
                  "docComment": "/**\n * Position of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy#setToDefault:member(1)",
                  "docComment": "/**\n * Reset the FilterPivotHierarchy back to its default values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setToDefault(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setToDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.FormatProtection:interface",
              "docComment": "/**\n * Represents the format protection of a range object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FormatProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "FormatProtection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FormatProtection#getFormulaHidden:member(1)",
                  "docComment": "/**\n * Specifies if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulaHidden(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulaHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FormatProtection#getLocked:member(1)",
                  "docComment": "/**\n * Specifies if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocked(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocked"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FormatProtection#setFormulaHidden:member(1)",
                  "docComment": "/**\n * Specifies if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulaHidden(formulaHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulaHidden",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulaHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.FormatProtection#setLocked:member(1)",
                  "docComment": "/**\n * Specifies if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLocked(locked: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "locked",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLocked"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.GeometricShape:interface",
              "docComment": "/**\n * Represents a geometric shape inside a worksheet. A geometric shape can be a rectangle, block arrow, equation symbol, flowchart item, star, banner, callout, or any other basic shape in Excel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface GeometricShape "
                }
              ],
              "releaseTag": "Public",
              "name": "GeometricShape",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.GeometricShape#getId:member(1)",
                  "docComment": "/**\n * Returns the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.GeometricShapeType:enum",
              "docComment": "/**\n * Specifies the shape type for a GeometricShape object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum GeometricShapeType "
                }
              ],
              "releaseTag": "Public",
              "name": "GeometricShapeType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.accentBorderCallout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentBorderCallout1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentBorderCallout1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.accentBorderCallout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentBorderCallout2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentBorderCallout2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.accentBorderCallout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentBorderCallout3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentBorderCallout3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.accentCallout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentCallout1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentCallout1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.accentCallout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentCallout2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentCallout2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.accentCallout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentCallout3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentCallout3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonBackPrevious:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonBackPrevious"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonBackPrevious",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonBeginning:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonBeginning"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonBeginning",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonBlank:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonBlank"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonBlank",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonDocument:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonDocument"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonDocument",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonEnd:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonEnd"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonEnd",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonForwardNext:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonForwardNext"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonForwardNext",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonHelp:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonHelp"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonHelp",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonHome:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonHome"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonHome",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonInformation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonInformation"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonInformation",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonMovie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonMovie"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonMovie",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonReturn:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonReturn"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonReturn",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.actionButtonSound:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonSound"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonSound",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.arc:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "arc"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "arc",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.bentArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bentArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bentArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.bentUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bentUpArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bentUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.bevel:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bevel"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bevel",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.blockArc:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blockArc"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blockArc",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.borderCallout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderCallout1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderCallout1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.borderCallout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderCallout2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderCallout2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.borderCallout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderCallout3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderCallout3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.bracePair:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bracePair"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bracePair",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.bracketPair:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bracketPair"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bracketPair",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.callout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.callout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.callout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.can:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "can"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "can",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.chartPlus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartPlus"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartPlus",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.chartStar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartStar"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartStar",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.chartX:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartX"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartX",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.chevron:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chevron"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chevron",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.chord:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chord"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chord",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.circularArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "circularArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "circularArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.cloud:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cloud"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cloud",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.cloudCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cloudCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cloudCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.corner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "corner"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "corner",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.cornerTabs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cornerTabs"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cornerTabs",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.cube:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cube"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cube",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.curvedDownArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedDownArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedDownArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.curvedLeftArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedLeftArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedLeftArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.curvedRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedRightArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.curvedUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedUpArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.decagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "decagon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decagon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.diagonalStripe:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalStripe"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalStripe",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.diamond:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diamond"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diamond",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.dodecagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dodecagon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dodecagon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.donut:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "donut"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "donut",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.doubleWave:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doubleWave"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doubleWave",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.downArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "downArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "downArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.downArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "downArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "downArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.ellipse:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipse"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipse",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.ellipseRibbon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipseRibbon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipseRibbon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.ellipseRibbon2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipseRibbon2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipseRibbon2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartAlternateProcess:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartAlternateProcess"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartAlternateProcess",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartCollate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartCollate"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartCollate",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartConnector:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartConnector"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartConnector",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartDecision:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDecision"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDecision",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartDelay:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDelay"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDelay",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartDisplay:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDisplay"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDisplay",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartDocument:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDocument"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDocument",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartExtract:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartExtract"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartExtract",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartInputOutput:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartInputOutput"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartInputOutput",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartInternalStorage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartInternalStorage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartInternalStorage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartMagneticDisk:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMagneticDisk"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMagneticDisk",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartMagneticDrum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMagneticDrum"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMagneticDrum",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartMagneticTape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMagneticTape"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMagneticTape",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartManualInput:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartManualInput"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartManualInput",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartManualOperation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartManualOperation"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartManualOperation",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartMerge:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMerge"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMerge",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartMultidocument:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMultidocument"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMultidocument",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartOfflineStorage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOfflineStorage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOfflineStorage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartOffpageConnector:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOffpageConnector"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOffpageConnector",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartOnlineStorage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOnlineStorage"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOnlineStorage",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartOr:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOr"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOr",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartPredefinedProcess:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPredefinedProcess"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPredefinedProcess",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartPreparation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPreparation"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPreparation",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartProcess:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartProcess"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartProcess",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartPunchedCard:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPunchedCard"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPunchedCard",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartPunchedTape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPunchedTape"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPunchedTape",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartSort:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartSort"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartSort",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartSummingJunction:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartSummingJunction"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartSummingJunction",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.flowChartTerminator:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartTerminator"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartTerminator",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.foldedCorner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "foldedCorner"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "foldedCorner",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.frame:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "frame"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "frame",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.funnel:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "funnel"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "funnel",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.gear6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gear6"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gear6",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.gear9:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gear9"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gear9",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.halfFrame:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "halfFrame"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "halfFrame",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.heart:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heart"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heart",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.heptagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heptagon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heptagon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.hexagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hexagon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hexagon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.homePlate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "homePlate"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "homePlate",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.horizontalScroll:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalScroll"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalScroll",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.irregularSeal1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "irregularSeal1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "irregularSeal1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.irregularSeal2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "irregularSeal2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "irregularSeal2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftBrace:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftBrace"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftBrace",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftBracket:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftBracket"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftBracket",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftCircularArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftCircularArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftCircularArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftRightArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftRightCircularArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightCircularArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightCircularArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftRightRibbon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightRibbon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightRibbon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftRightUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightUpArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.leftUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftUpArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.lightningBolt:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightningBolt"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightningBolt",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.lineInverse:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineInverse"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineInverse",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.mathDivide:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathDivide"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathDivide",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.mathEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathEqual"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathEqual",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.mathMinus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathMinus"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathMinus",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.mathMultiply:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathMultiply"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathMultiply",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.mathNotEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathNotEqual"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathNotEqual",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.mathPlus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathPlus"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathPlus",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.moon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "moon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "moon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.nonIsoscelesTrapezoid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nonIsoscelesTrapezoid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nonIsoscelesTrapezoid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.noSmoking:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noSmoking"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "noSmoking",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.notchedRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notchedRightArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notchedRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.octagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "octagon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "octagon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.parallelogram:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "parallelogram"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "parallelogram",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.pentagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pentagon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pentagon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.pie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pie"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pie",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.pieWedge:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pieWedge"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pieWedge",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.plaque:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plaque"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plaque",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.plaqueTabs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plaqueTabs"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plaqueTabs",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.plus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plus"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plus",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.quadArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quadArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quadArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.quadArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quadArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quadArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.rectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.ribbon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ribbon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ribbon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.ribbon2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ribbon2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ribbon2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.rightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.rightArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.rightBrace:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightBrace"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightBrace",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.rightBracket:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightBracket"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightBracket",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.rightTriangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightTriangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightTriangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.round1Rectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "round1Rectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "round1Rectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.round2DiagonalRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "round2DiagonalRectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "round2DiagonalRectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.round2SameRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "round2SameRectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "round2SameRectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.roundRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundRectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundRectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.smileyFace:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "smileyFace"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "smileyFace",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.snip1Rectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snip1Rectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snip1Rectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.snip2DiagonalRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snip2DiagonalRectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snip2DiagonalRectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.snip2SameRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snip2SameRectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snip2SameRectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.snipRoundRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snipRoundRectangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snipRoundRectangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.squareTabs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "squareTabs"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "squareTabs",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star10:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star10"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star10",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star12:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star12"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star12",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star16:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star16"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star16",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star24:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star24"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star24",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star32:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star32"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star32",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star6"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star6",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star7:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star7"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star7",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.star8:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star8"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star8",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.stripedRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stripedRightArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stripedRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.sun:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sun"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sun",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.swooshArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "swooshArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "swooshArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.teardrop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "teardrop"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "teardrop",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.trapezoid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "trapezoid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "trapezoid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.triangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "triangle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "triangle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.upArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.upArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.upDownArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upDownArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upDownArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.upDownArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upDownArrowCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upDownArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.uturnArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "uturnArrow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "uturnArrow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.verticalScroll:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalScroll"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalScroll",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.wave:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wave"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wave",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.wedgeEllipseCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wedgeEllipseCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wedgeEllipseCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.wedgeRectCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wedgeRectCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wedgeRectCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GeometricShapeType.wedgeRRectCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wedgeRRectCallout"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wedgeRRectCallout",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.GroupOption:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum GroupOption "
                }
              ],
              "releaseTag": "Public",
              "name": "GroupOption",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GroupOption.byColumns:member",
                  "docComment": "/**\n * Group by columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "byColumns"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "byColumns",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.GroupOption.byRows:member",
                  "docComment": "/**\n * Group by rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "byRows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "byRows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.HeaderFooter:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface HeaderFooter "
                }
              ],
              "releaseTag": "Public",
              "name": "HeaderFooter",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#getCenterFooter:member(1)",
                  "docComment": "/**\n * The center footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCenterFooter(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCenterFooter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#getCenterHeader:member(1)",
                  "docComment": "/**\n * The center header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCenterHeader(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCenterHeader"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#getLeftFooter:member(1)",
                  "docComment": "/**\n * The left footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeftFooter(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeftFooter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#getLeftHeader:member(1)",
                  "docComment": "/**\n * The left header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeftHeader(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeftHeader"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#getRightFooter:member(1)",
                  "docComment": "/**\n * The right footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRightFooter(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRightFooter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#getRightHeader:member(1)",
                  "docComment": "/**\n * The right header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRightHeader(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRightHeader"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#setCenterFooter:member(1)",
                  "docComment": "/**\n * The center footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCenterFooter(centerFooter: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "centerFooter",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCenterFooter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#setCenterHeader:member(1)",
                  "docComment": "/**\n * The center header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCenterHeader(centerHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "centerHeader",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCenterHeader"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#setLeftFooter:member(1)",
                  "docComment": "/**\n * The left footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeftFooter(leftFooter: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "leftFooter",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeftFooter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#setLeftHeader:member(1)",
                  "docComment": "/**\n * The left header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeftHeader(leftHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "leftHeader",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeftHeader"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#setRightFooter:member(1)",
                  "docComment": "/**\n * The right footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRightFooter(rightFooter: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rightFooter",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRightFooter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooter#setRightHeader:member(1)",
                  "docComment": "/**\n * The right header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/en-us/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRightHeader(rightHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rightHeader",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRightHeader"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.HeaderFooterGroup:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface HeaderFooterGroup "
                }
              ],
              "releaseTag": "Public",
              "name": "HeaderFooterGroup",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getDefaultForAllPages:member(1)",
                  "docComment": "/**\n * The general header/footer, used for all pages unless even/odd or first page is specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefaultForAllPages(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!ExcelScript.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefaultForAllPages"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getEvenPages:member(1)",
                  "docComment": "/**\n * The header/footer to use for even pages, odd header/footer needs to be specified for odd pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEvenPages(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!ExcelScript.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEvenPages"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getFirstPage:member(1)",
                  "docComment": "/**\n * The first page header/footer, for all other pages general or even/odd is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirstPage(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!ExcelScript.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFirstPage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getOddPages:member(1)",
                  "docComment": "/**\n * The header/footer to use for odd pages, even header/footer needs to be specified for even pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOddPages(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!ExcelScript.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOddPages"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getState:member(1)",
                  "docComment": "/**\n * The state by which headers/footers are set. See Excel.HeaderFooterState for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getState(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooterState",
                      "canonicalReference": "excel!ExcelScript.HeaderFooterState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getState"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getUseSheetMargins:member(1)",
                  "docComment": "/**\n * Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUseSheetMargins(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUseSheetMargins"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#getUseSheetScale:member(1)",
                  "docComment": "/**\n * Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page layout options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUseSheetScale(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUseSheetScale"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#setState:member(1)",
                  "docComment": "/**\n * The state by which headers/footers are set. See Excel.HeaderFooterState for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setState(state: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooterState",
                      "canonicalReference": "excel!ExcelScript.HeaderFooterState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "state",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setState"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#setUseSheetMargins:member(1)",
                  "docComment": "/**\n * Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUseSheetMargins(useSheetMargins: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "useSheetMargins",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUseSheetMargins"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterGroup#setUseSheetScale:member(1)",
                  "docComment": "/**\n * Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page layout options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUseSheetScale(useSheetScale: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "useSheetScale",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUseSheetScale"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.HeaderFooterState:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum HeaderFooterState "
                }
              ],
              "releaseTag": "Public",
              "name": "HeaderFooterState",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterState.default:member",
                  "docComment": "/**\n * Only one general header/footer is used for all pages printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "default",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterState.firstAndDefault:member",
                  "docComment": "/**\n * There is a separate first page header/footer, and a general header/footer used for all other pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstAndDefault"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstAndDefault",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterState.firstOddAndEven:member",
                  "docComment": "/**\n * There is a separate first page header/footer, then there is a separate header/footer for odd and even pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstOddAndEven"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstOddAndEven",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HeaderFooterState.oddAndEven:member",
                  "docComment": "/**\n * There is a different header/footer for odd and even pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oddAndEven"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oddAndEven",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.HorizontalAlignment:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum HorizontalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "HorizontalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.centerAcrossSelection:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centerAcrossSelection"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centerAcrossSelection",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.fill:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fill"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.general:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "general"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "general",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.HorizontalAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Icon:interface",
              "docComment": "/**\n * Represents a cell icon.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Icon "
                }
              ],
              "releaseTag": "Public",
              "name": "Icon",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Icon#index:member",
                  "docComment": "/**\n * Specifies the index of the icon in the given set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Icon#set:member",
                  "docComment": "/**\n * Specifies the set that the icon is part of.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "set: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSet",
                      "canonicalReference": "excel!ExcelScript.IconSet:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "set",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.IconSet:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum IconSet "
                }
              ],
              "releaseTag": "Public",
              "name": "IconSet",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fiveArrows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveArrows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveArrows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fiveArrowsGray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveArrowsGray"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveArrowsGray",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fiveBoxes:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveBoxes"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveBoxes",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fiveQuarters:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveQuarters"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveQuarters",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fiveRating:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveRating"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveRating",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fourArrows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourArrows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourArrows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fourArrowsGray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourArrowsGray"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourArrowsGray",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fourRating:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourRating"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourRating",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fourRedToBlack:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourRedToBlack"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourRedToBlack",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.fourTrafficLights:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourTrafficLights"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourTrafficLights",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeArrows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeArrows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeArrows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeArrowsGray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeArrowsGray"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeArrowsGray",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeFlags:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeFlags"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeFlags",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeSigns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeSigns"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeSigns",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeStars:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeStars"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeStars",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeSymbols:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeSymbols"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeSymbols",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeSymbols2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeSymbols2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeSymbols2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeTrafficLights1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeTrafficLights1"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeTrafficLights1",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeTrafficLights2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeTrafficLights2"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeTrafficLights2",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.IconSet.threeTriangles:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeTriangles"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeTriangles",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat:interface",
              "docComment": "/**\n * Represents an IconSet criteria for conditional formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface IconSetConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "IconSetConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#getCriteria:member(1)",
                  "docComment": "/**\n * An array of Criteria and IconSets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCriteria(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalIconCriterion",
                      "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCriteria"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#getReverseIconOrder:member(1)",
                  "docComment": "/**\n * If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReverseIconOrder(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReverseIconOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#getShowIconOnly:member(1)",
                  "docComment": "/**\n * If true, hides the values and only shows icons.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowIconOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowIconOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#getStyle:member(1)",
                  "docComment": "/**\n * If set, displays the IconSet option for the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSet",
                      "canonicalReference": "excel!ExcelScript.IconSet:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#setCriteria:member(1)",
                  "docComment": "/**\n * An array of Criteria and IconSets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCriteria(criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalIconCriterion",
                      "canonicalReference": "excel!ExcelScript.ConditionalIconCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setCriteria"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#setReverseIconOrder:member(1)",
                  "docComment": "/**\n * If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setReverseIconOrder(reverseIconOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "reverseIconOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setReverseIconOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#setShowIconOnly:member(1)",
                  "docComment": "/**\n * If true, hides the values and only shows icons.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowIconOnly(showIconOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showIconOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowIconOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IconSetConditionalFormat#setStyle:member(1)",
                  "docComment": "/**\n * If set, displays the IconSet option for the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStyle(style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSet",
                      "canonicalReference": "excel!ExcelScript.IconSet:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "style",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStyle"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Image:interface",
              "docComment": "/**\n * Represents an image in the worksheet. To get the corresponding Shape object, use Image.shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Image "
                }
              ],
              "releaseTag": "Public",
              "name": "Image",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Image#getFormat:member(1)",
                  "docComment": "/**\n * Returns the format of the image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PictureFormat",
                      "canonicalReference": "excel!ExcelScript.PictureFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Image#getId:member(1)",
                  "docComment": "/**\n * Specifies the shape identifier for the image object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ImageFittingMode:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ImageFittingMode "
                }
              ],
              "releaseTag": "Public",
              "name": "ImageFittingMode",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ImageFittingMode.fill:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fill"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ImageFittingMode.fit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fit"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fit",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ImageFittingMode.fitAndCenter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fitAndCenter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fitAndCenter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.InsertShiftDirection:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum InsertShiftDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "InsertShiftDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.InsertShiftDirection.down:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "down"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "down",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.InsertShiftDirection.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.IterativeCalculation:interface",
              "docComment": "/**\n * Represents the Iterative Calculation settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface IterativeCalculation "
                }
              ],
              "releaseTag": "Public",
              "name": "IterativeCalculation",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IterativeCalculation#getEnabled:member(1)",
                  "docComment": "/**\n * True if Excel will use iteration to resolve circular references.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnabled(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEnabled"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IterativeCalculation#getMaxChange:member(1)",
                  "docComment": "/**\n * Specifies the maximum amount of change between each iteration as Excel resolves circular references.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMaxChange(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMaxChange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IterativeCalculation#getMaxIteration:member(1)",
                  "docComment": "/**\n * Specifies the maximum number of iterations that Excel can use to resolve a circular reference.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMaxIteration(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMaxIteration"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IterativeCalculation#setEnabled:member(1)",
                  "docComment": "/**\n * True if Excel will use iteration to resolve circular references.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnabled(enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabled",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEnabled"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IterativeCalculation#setMaxChange:member(1)",
                  "docComment": "/**\n * Specifies the maximum amount of change between each iteration as Excel resolves circular references.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMaxChange(maxChange: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "maxChange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMaxChange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.IterativeCalculation#setMaxIteration:member(1)",
                  "docComment": "/**\n * Specifies the maximum number of iterations that Excel can use to resolve a circular reference.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMaxIteration(maxIteration: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "maxIteration",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setMaxIteration"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Line:interface",
              "docComment": "/**\n * Represents a line inside a worksheet. To get the corresponding Shape object, use `Line.shape`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Line "
                }
              ],
              "releaseTag": "Public",
              "name": "Line",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#connectBeginShape:member(1)",
                  "docComment": "/**\n * Attaches the beginning of the specified connector to a specified shape.\n *\n * @param shape - The shape to connect.\n *\n * @param connectionSite - The connection site on the shape to which the beginning of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "connectBeginShape(shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", connectionSite: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shape",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "connectionSite",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "connectBeginShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#connectEndShape:member(1)",
                  "docComment": "/**\n * Attaches the end of the specified connector to a specified shape.\n *\n * @param shape - The shape to connect.\n *\n * @param connectionSite - The connection site on the shape to which the end of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "connectEndShape(shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", connectionSite: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shape",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "connectionSite",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "connectEndShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#disconnectBeginShape:member(1)",
                  "docComment": "/**\n * Detaches the beginning of the specified connector from a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disconnectBeginShape(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "disconnectBeginShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#disconnectEndShape:member(1)",
                  "docComment": "/**\n * Detaches the end of the specified connector from a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disconnectEndShape(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "disconnectEndShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getBeginArrowheadLength:member(1)",
                  "docComment": "/**\n * Represents the length of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBeginArrowheadLength(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadLength",
                      "canonicalReference": "excel!ExcelScript.ArrowheadLength:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBeginArrowheadLength"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getBeginArrowheadStyle:member(1)",
                  "docComment": "/**\n * Represents the style of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBeginArrowheadStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadStyle",
                      "canonicalReference": "excel!ExcelScript.ArrowheadStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBeginArrowheadStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getBeginArrowheadWidth:member(1)",
                  "docComment": "/**\n * Represents the width of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBeginArrowheadWidth(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadWidth",
                      "canonicalReference": "excel!ExcelScript.ArrowheadWidth:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBeginArrowheadWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getBeginConnectedSite:member(1)",
                  "docComment": "/**\n * Represents the connection site to which the beginning of a connector is connected. Returns null when the beginning of the line is not attached to any shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBeginConnectedSite(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBeginConnectedSite"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getConnectorType:member(1)",
                  "docComment": "/**\n * Represents the connector type for the line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConnectorType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConnectorType",
                      "canonicalReference": "excel!ExcelScript.ConnectorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConnectorType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getEndArrowheadLength:member(1)",
                  "docComment": "/**\n * Represents the length of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndArrowheadLength(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadLength",
                      "canonicalReference": "excel!ExcelScript.ArrowheadLength:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndArrowheadLength"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getEndArrowheadStyle:member(1)",
                  "docComment": "/**\n * Represents the style of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndArrowheadStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadStyle",
                      "canonicalReference": "excel!ExcelScript.ArrowheadStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndArrowheadStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getEndArrowheadWidth:member(1)",
                  "docComment": "/**\n * Represents the width of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndArrowheadWidth(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadWidth",
                      "canonicalReference": "excel!ExcelScript.ArrowheadWidth:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndArrowheadWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getEndConnectedSite:member(1)",
                  "docComment": "/**\n * Represents the connection site to which the end of a connector is connected. Returns null when the end of the line is not attached to any shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEndConnectedSite(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEndConnectedSite"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getId:member(1)",
                  "docComment": "/**\n * Specifies the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getIsBeginConnected:member(1)",
                  "docComment": "/**\n * Specifies if the beginning of the specified line is connected to a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsBeginConnected(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsBeginConnected"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#getIsEndConnected:member(1)",
                  "docComment": "/**\n * Specifies if the end of the specified line is connected to a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsEndConnected(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsEndConnected"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setBeginArrowheadLength:member(1)",
                  "docComment": "/**\n * Represents the length of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBeginArrowheadLength(beginArrowheadLength: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadLength",
                      "canonicalReference": "excel!ExcelScript.ArrowheadLength:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "beginArrowheadLength",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBeginArrowheadLength"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setBeginArrowheadStyle:member(1)",
                  "docComment": "/**\n * Represents the style of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBeginArrowheadStyle(beginArrowheadStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadStyle",
                      "canonicalReference": "excel!ExcelScript.ArrowheadStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "beginArrowheadStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBeginArrowheadStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setBeginArrowheadWidth:member(1)",
                  "docComment": "/**\n * Represents the width of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBeginArrowheadWidth(beginArrowheadWidth: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadWidth",
                      "canonicalReference": "excel!ExcelScript.ArrowheadWidth:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "beginArrowheadWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBeginArrowheadWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setConnectorType:member(1)",
                  "docComment": "/**\n * Represents the connector type for the line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setConnectorType(connectorType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConnectorType",
                      "canonicalReference": "excel!ExcelScript.ConnectorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "connectorType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setConnectorType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setEndArrowheadLength:member(1)",
                  "docComment": "/**\n * Represents the length of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEndArrowheadLength(endArrowheadLength: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadLength",
                      "canonicalReference": "excel!ExcelScript.ArrowheadLength:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "endArrowheadLength",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEndArrowheadLength"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setEndArrowheadStyle:member(1)",
                  "docComment": "/**\n * Represents the style of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEndArrowheadStyle(endArrowheadStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadStyle",
                      "canonicalReference": "excel!ExcelScript.ArrowheadStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "endArrowheadStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEndArrowheadStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Line#setEndArrowheadWidth:member(1)",
                  "docComment": "/**\n * Represents the width of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEndArrowheadWidth(endArrowheadWidth: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadWidth",
                      "canonicalReference": "excel!ExcelScript.ArrowheadWidth:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "endArrowheadWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEndArrowheadWidth"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.LinkedDataTypeState:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum LinkedDataTypeState "
                }
              ],
              "releaseTag": "Public",
              "name": "LinkedDataTypeState",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.LinkedDataTypeState.brokenLinkedData:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "brokenLinkedData"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "brokenLinkedData",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.LinkedDataTypeState.disambiguationNeeded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disambiguationNeeded"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "disambiguationNeeded",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.LinkedDataTypeState.fetchingData:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fetchingData"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fetchingData",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.LinkedDataTypeState.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.LinkedDataTypeState.validLinkedData:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "validLinkedData"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "validLinkedData",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ListDataValidation:interface",
              "docComment": "/**\n * Represents the List data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ListDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "ListDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ListDataValidation#inCellDropDown:member",
                  "docComment": "/**\n * Displays the list in cell drop down or not, it defaults to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inCellDropDown: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inCellDropDown",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ListDataValidation#source:member",
                  "docComment": "/**\n * Source of the list for data validation When setting the value, it can be passed in as a Excel Range object, or a string that contains comma separated number, boolean or date.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "source: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "source",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.NamedItem:interface",
              "docComment": "/**\n * Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type below), range object, or a reference to a range. This object can be used to obtain range object associated with names.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NamedItem "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItem",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#delete:member(1)",
                  "docComment": "/**\n * Deletes the given name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getArrayValues:member(1)",
                  "docComment": "/**\n * Returns an object containing values and types of the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getArrayValues(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemArrayValues",
                      "canonicalReference": "excel!ExcelScript.NamedItemArrayValues:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getArrayValues"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getComment:member(1)",
                  "docComment": "/**\n * Specifies the comment associated with this name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getComment(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getFormula:member(1)",
                  "docComment": "/**\n * The formula of the named item. Formula always starts with a '=' sign.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormula(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getName:member(1)",
                  "docComment": "/**\n * The name of the object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getRange:member(1)",
                  "docComment": "/**\n * Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getScope:member(1)",
                  "docComment": "/**\n * Specifies if the name is scoped to the workbook or to a specific worksheet. Possible values are: Worksheet, Workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getScope(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemScope",
                      "canonicalReference": "excel!ExcelScript.NamedItemScope:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getScope"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getType:member(1)",
                  "docComment": "/**\n * Specifies the type of the value returned by the name's formula. See Excel.NamedItemType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemType",
                      "canonicalReference": "excel!ExcelScript.NamedItemType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getValue:member(1)",
                  "docComment": "/**\n * Represents the value computed by the name's formula. For a named range, will return the range address.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the object is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#setComment:member(1)",
                  "docComment": "/**\n * Specifies the comment associated with this name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setComment(comment: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#setFormula:member(1)",
                  "docComment": "/**\n * The formula of the named item. Formula always starts with a '=' sign.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItem#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the object is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.NamedItemArrayValues:interface",
              "docComment": "/**\n * Represents an object containing values and types of a named item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NamedItemArrayValues "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemArrayValues",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItemArrayValues#getTypes:member(1)",
                  "docComment": "/**\n * Represents the types for each item in the named item array\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTypes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!ExcelScript.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTypes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.NamedItemArrayValues#getValues:member(1)",
                  "docComment": "/**\n * Represents the values of each item in the named item array.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValues(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValues"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.NamedItemScope:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum NamedItemScope "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemScope",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemScope.workbook:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "workbook"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "workbook",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemScope.worksheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "worksheet"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.NamedItemType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum NamedItemType "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.array:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "array"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "array",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.boolean:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boolean"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boolean",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.error:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "error"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "error",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.integer:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "integer"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "integer",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.range:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "range"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "range",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.NamedItemType.string:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "string",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PageBreak:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageBreak "
                }
              ],
              "releaseTag": "Public",
              "name": "PageBreak",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageBreak#delete:member(1)",
                  "docComment": "/**\n * Deletes a page break object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageBreak#getCellAfterBreak:member(1)",
                  "docComment": "/**\n * Gets the first cell after the page break.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCellAfterBreak(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCellAfterBreak"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageBreak#getColumnIndex:member(1)",
                  "docComment": "/**\n * Specifies the column index for the page break\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnIndex(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnIndex"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PageLayout:interface",
              "docComment": "/**\n * Represents layout and print settings that are not dependent any printer-specific implementation. These settings include margins, orientation, page numbering, title rows, and print area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageLayout "
                }
              ],
              "releaseTag": "Public",
              "name": "PageLayout",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getBlackAndWhite:member(1)",
                  "docComment": "/**\n * The worksheet's black and white print option.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBlackAndWhite(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBlackAndWhite"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getBottomMargin:member(1)",
                  "docComment": "/**\n * The worksheet's bottom page margin to use for printing in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBottomMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBottomMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getCenterHorizontally:member(1)",
                  "docComment": "/**\n * The worksheet's center horizontally flag. This flag determines whether the worksheet will be centered horizontally when it's printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCenterHorizontally(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCenterHorizontally"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getCenterVertically:member(1)",
                  "docComment": "/**\n * The worksheet's center vertically flag. This flag determines whether the worksheet will be centered vertically when it's printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCenterVertically(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCenterVertically"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getDraftMode:member(1)",
                  "docComment": "/**\n * The worksheet's draft mode option. If true the sheet will be printed without graphics.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDraftMode(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDraftMode"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getFirstPageNumber:member(1)",
                  "docComment": "/**\n * The worksheet's first page number to print. Null value represents \"auto\" page numbering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirstPageNumber(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | \"\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFirstPageNumber"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getFooterMargin:member(1)",
                  "docComment": "/**\n * The worksheet's footer margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFooterMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFooterMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getHeaderMargin:member(1)",
                  "docComment": "/**\n * The worksheet's header margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeaderMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeaderMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getHeadersFooters:member(1)",
                  "docComment": "/**\n * Header and footer configuration for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeadersFooters(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooterGroup",
                      "canonicalReference": "excel!ExcelScript.HeaderFooterGroup:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeadersFooters"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getLeftMargin:member(1)",
                  "docComment": "/**\n * The worksheet's left margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeftMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeftMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getOrientation:member(1)",
                  "docComment": "/**\n * The worksheet's orientation of the page.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOrientation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageOrientation",
                      "canonicalReference": "excel!ExcelScript.PageOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPaperSize:member(1)",
                  "docComment": "/**\n * The worksheet's paper size of the page.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPaperSize(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PaperType",
                      "canonicalReference": "excel!ExcelScript.PaperType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPaperSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintArea:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet. If there is no print area, a null object will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintArea(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintArea"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintComments:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet's comments should be displayed when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintComments(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintComments",
                      "canonicalReference": "excel!ExcelScript.PrintComments:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintComments"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintErrors:member(1)",
                  "docComment": "/**\n * The worksheet's print errors option.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintErrors(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintErrorType",
                      "canonicalReference": "excel!ExcelScript.PrintErrorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintErrors"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintGridlines:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet's gridlines will be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintGridlines(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintGridlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintHeadings:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet's headings will be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintHeadings(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintHeadings"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintOrder:member(1)",
                  "docComment": "/**\n * The worksheet's page print order option. This specifies the order to use for processing the page number printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintOrder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintOrder",
                      "canonicalReference": "excel!ExcelScript.PrintOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintTitleColumns:member(1)",
                  "docComment": "/**\n * Gets the range object representing the title columns. If not set, this will return a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintTitleColumns(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintTitleColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getPrintTitleRows:member(1)",
                  "docComment": "/**\n * Gets the range object representing the title rows. If not set, this will return a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintTitleRows(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintTitleRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getRightMargin:member(1)",
                  "docComment": "/**\n * The worksheet's right margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRightMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRightMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getTopMargin:member(1)",
                  "docComment": "/**\n * The worksheet's top margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTopMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTopMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#getZoom:member(1)",
                  "docComment": "/**\n * The worksheet's print zoom options. The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getZoom(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayoutZoomOptions",
                      "canonicalReference": "excel!ExcelScript.PageLayoutZoomOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getZoom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setBlackAndWhite:member(1)",
                  "docComment": "/**\n * The worksheet's black and white print option.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBlackAndWhite(blackAndWhite: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "blackAndWhite",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBlackAndWhite"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setBottomMargin:member(1)",
                  "docComment": "/**\n * The worksheet's bottom page margin to use for printing in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBottomMargin(bottomMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bottomMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBottomMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setCenterHorizontally:member(1)",
                  "docComment": "/**\n * The worksheet's center horizontally flag. This flag determines whether the worksheet will be centered horizontally when it's printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCenterHorizontally(centerHorizontally: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "centerHorizontally",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCenterHorizontally"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setCenterVertically:member(1)",
                  "docComment": "/**\n * The worksheet's center vertically flag. This flag determines whether the worksheet will be centered vertically when it's printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCenterVertically(centerVertically: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "centerVertically",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCenterVertically"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setDraftMode:member(1)",
                  "docComment": "/**\n * The worksheet's draft mode option. If true the sheet will be printed without graphics.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDraftMode(draftMode: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "draftMode",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setDraftMode"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setFirstPageNumber:member(1)",
                  "docComment": "/**\n * The worksheet's first page number to print. Null value represents \"auto\" page numbering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFirstPageNumber(firstPageNumber: "
                    },
                    {
                      "kind": "Content",
                      "text": "number | \"\""
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "firstPageNumber",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFirstPageNumber"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setFooterMargin:member(1)",
                  "docComment": "/**\n * The worksheet's footer margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFooterMargin(footerMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "footerMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFooterMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setHeaderMargin:member(1)",
                  "docComment": "/**\n * The worksheet's header margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHeaderMargin(headerMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "headerMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHeaderMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setLeftMargin:member(1)",
                  "docComment": "/**\n * The worksheet's left margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeftMargin(leftMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "leftMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeftMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setOrientation:member(1)",
                  "docComment": "/**\n * The worksheet's orientation of the page.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOrientation(orientation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageOrientation",
                      "canonicalReference": "excel!ExcelScript.PageOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "orientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPaperSize:member(1)",
                  "docComment": "/**\n * The worksheet's paper size of the page.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPaperSize(paperSize: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PaperType",
                      "canonicalReference": "excel!ExcelScript.PaperType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "paperSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPaperSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintArea:member(1)",
                  "docComment": "/**\n * Sets the worksheet's print area.\n *\n * @param printArea - The range, or RangeAreas of the content to print.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintArea(printArea: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printArea",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "setPrintArea"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintComments:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet's comments should be displayed when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintComments(printComments: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintComments",
                      "canonicalReference": "excel!ExcelScript.PrintComments:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printComments",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPrintComments"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintErrors:member(1)",
                  "docComment": "/**\n * The worksheet's print errors option.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintErrors(printErrors: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintErrorType",
                      "canonicalReference": "excel!ExcelScript.PrintErrorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printErrors",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPrintErrors"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintGridlines:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet's gridlines will be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintGridlines(printGridlines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printGridlines",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPrintGridlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintHeadings:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet's headings will be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintHeadings(printHeadings: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printHeadings",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPrintHeadings"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintMargins:member(1)",
                  "docComment": "/**\n * Sets the worksheet's page margins with units.\n *\n * @param unit - Measurement unit for the margins provided.\n *\n * @param marginOptions - Margin values to set, margins not provided will remain unchanged.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintMargins(\n            unit: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintMarginUnit",
                      "canonicalReference": "excel!ExcelScript.PrintMarginUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            marginOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayoutMarginOptions",
                      "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "unit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "marginOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "setPrintMargins"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintOrder:member(1)",
                  "docComment": "/**\n * The worksheet's page print order option. This specifies the order to use for processing the page number printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintOrder(printOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintOrder",
                      "canonicalReference": "excel!ExcelScript.PrintOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPrintOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintTitleColumns:member(1)",
                  "docComment": "/**\n * Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.\n *\n * @param printTitleColumns - The columns to be repeated to the left of each page, range must span the entire column to be valid.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintTitleColumns(printTitleColumns: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printTitleColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setPrintTitleColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setPrintTitleRows:member(1)",
                  "docComment": "/**\n * Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.\n *\n * @param printTitleRows - The rows to be repeated at the top of each page, range must span the entire row to be valid.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintTitleRows(printTitleRows: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printTitleRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setPrintTitleRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setRightMargin:member(1)",
                  "docComment": "/**\n * The worksheet's right margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRightMargin(rightMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rightMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRightMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setTopMargin:member(1)",
                  "docComment": "/**\n * The worksheet's top margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTopMargin(topMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "topMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTopMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PageLayout#setZoom:member(1)",
                  "docComment": "/**\n * The worksheet's print zoom options. The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setZoom(zoom: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayoutZoomOptions",
                      "canonicalReference": "excel!ExcelScript.PageLayoutZoomOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "zoom",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setZoom"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions:interface",
              "docComment": "/**\n * Represents the options in page layout margins.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageLayoutMarginOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "PageLayoutMarginOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions#bottom:member",
                  "docComment": "/**\n * Specifies the page layout bottom margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions#footer:member",
                  "docComment": "/**\n * Specifies the page layout footer margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "footer?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "footer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions#header:member",
                  "docComment": "/**\n * Specifies the page layout header margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "header?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "header",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions#left:member",
                  "docComment": "/**\n * Specifies the page layout left margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions#right:member",
                  "docComment": "/**\n * Specifies the page layout right margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutMarginOptions#top:member",
                  "docComment": "/**\n * Specifies the page layout top margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PageLayoutZoomOptions:interface",
              "docComment": "/**\n * Represents page zoom properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageLayoutZoomOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "PageLayoutZoomOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutZoomOptions#horizontalFitToPages:member",
                  "docComment": "/**\n * Number of pages to fit horizontally. This value can be null if percentage scale is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalFitToPages?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalFitToPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutZoomOptions#scale:member",
                  "docComment": "/**\n * Print page scale value can be between 10 and 400. This value can be null if fit to page tall or wide is specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scale?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.PageLayoutZoomOptions#verticalFitToPages:member",
                  "docComment": "/**\n * Number of pages to fit vertically. This value can be null if percentage scale is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalFitToPages?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalFitToPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PageOrientation:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PageOrientation "
                }
              ],
              "releaseTag": "Public",
              "name": "PageOrientation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PageOrientation.landscape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "landscape"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "landscape",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PageOrientation.portrait:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "portrait"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "portrait",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PaperType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PaperType "
                }
              ],
              "releaseTag": "Public",
              "name": "PaperType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.a3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.a4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.a4Small:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a4Small"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a4Small",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.a5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.b4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "b4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "b4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.b5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "b5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "b5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.csheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "csheet"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "csheet",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.dsheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dsheet"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dsheet",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelope10:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope10"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope10",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelope11:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope11"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope11",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelope12:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope12"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope12",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelope14:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope14"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope14",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelope9:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope9"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope9",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeB4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeB4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeB4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeB5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeB5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeB5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeB6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeB6"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeB6",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeC3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC3"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC3",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeC4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC4"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC4",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeC5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC5"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC5",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeC6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC6"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC6",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeC65:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC65"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC65",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeDL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeDL"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeDL",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeItaly:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeItaly"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeItaly",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopeMonarch:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeMonarch"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeMonarch",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.envelopePersonal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopePersonal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopePersonal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.esheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "esheet"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "esheet",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.executive:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "executive"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "executive",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.fanfoldLegalGerman:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fanfoldLegalGerman"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fanfoldLegalGerman",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.fanfoldStdGerman:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fanfoldStdGerman"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fanfoldStdGerman",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.fanfoldUS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fanfoldUS"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fanfoldUS",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.folio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "folio"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "folio",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.ledger:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ledger"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ledger",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.legal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "legal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "legal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.letter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "letter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "letter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.letterSmall:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "letterSmall"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "letterSmall",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.note:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "note"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "note",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.paper10x14:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "paper10x14"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "paper10x14",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.paper11x17:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "paper11x17"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "paper11x17",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.quatro:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quatro"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quatro",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.statement:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "statement"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "statement",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PaperType.tabloid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tabloid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tabloid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PictureFormat:enum",
              "docComment": "/**\n * The format of the image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PictureFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "PictureFormat",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PictureFormat.bmp:member",
                  "docComment": "/**\n * Bitmap image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bmp"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bmp",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PictureFormat.gif:member",
                  "docComment": "/**\n * Graphics Interchange Format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gif"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gif",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PictureFormat.jpeg:member",
                  "docComment": "/**\n * Joint Photographic Experts Group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "jpeg"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "jpeg",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PictureFormat.png:member",
                  "docComment": "/**\n * Portable Network Graphics.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "png"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "png",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PictureFormat.svg:member",
                  "docComment": "/**\n * Scalable Vector Graphic.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "svg"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "svg",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PictureFormat.unknown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PivotAxis:enum",
              "docComment": "/**\n * Represents the axis from which to get the PivotItems.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PivotAxis "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotAxis",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotAxis.column:member",
                  "docComment": "/**\n * The column axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "column"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "column",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotAxis.data:member",
                  "docComment": "/**\n * The data axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "data"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "data",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotAxis.filter:member",
                  "docComment": "/**\n * The filter axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "filter"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filter",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotAxis.row:member",
                  "docComment": "/**\n * The row axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "row"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "row",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotAxis.unknown:member",
                  "docComment": "/**\n * The axis or region is unknown or unsupported.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PivotField:interface",
              "docComment": "/**\n * Represents the Excel PivotField.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotField "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotField",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#getId:member(1)",
                  "docComment": "/**\n * Id of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#getItems:member(1)",
                  "docComment": "/**\n * Returns the PivotFields associated with the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItems(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!ExcelScript.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#getName:member(1)",
                  "docComment": "/**\n * Name of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#getPivotItem:member(1)",
                  "docComment": "/**\n * Gets a PivotItem by name. If the PivotItem does not exist, will return a null object.\n *\n * @param name - Name of the PivotItem to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!ExcelScript.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#getShowAllItems:member(1)",
                  "docComment": "/**\n * Determines whether to show all items of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowAllItems(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowAllItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#getSubtotals:member(1)",
                  "docComment": "/**\n * Subtotals of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubtotals(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Subtotals",
                      "canonicalReference": "excel!ExcelScript.Subtotals:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSubtotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#setName:member(1)",
                  "docComment": "/**\n * Name of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#setShowAllItems:member(1)",
                  "docComment": "/**\n * Determines whether to show all items of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowAllItems(showAllItems: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showAllItems",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowAllItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#setSubtotals:member(1)",
                  "docComment": "/**\n * Subtotals of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSubtotals(subtotals: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Subtotals",
                      "canonicalReference": "excel!ExcelScript.Subtotals:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "subtotals",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSubtotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#sortByLabels:member(1)",
                  "docComment": "/**\n * Sorts the PivotField. If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.\n *\n * @param sortBy - Specifies if the sorting is done in an ascending or descending order.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortByLabels(sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortBy",
                      "canonicalReference": "excel!ExcelScript.SortBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "sortByLabels"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotField#sortByValues:member(1)",
                  "docComment": "/**\n * Sorts the PivotField by specified values in a given scope. The scope defines which specific values will be used to sort when there are multiple values from the same DataPivotHierarchy.\n *\n * @param sortBy - Specifies if the sorting is done in an ascending or descending order.\n *\n * @param valuesHierarchy - Specifies the values hierarchy on the data axis to be used for sorting.\n *\n * @param pivotItemScope - The items that should be used for the scope of the sorting. These will be the items that make up the row or column that you want to sort on. If a string is used instead of a PivotItem, the string represents the ID of the PivotItem. If there are no items other than data hierarchy on the axis you want to sort on, this can be empty.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortByValues(\n            sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortBy",
                      "canonicalReference": "excel!ExcelScript.SortBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            valuesHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            pivotItemScope?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!ExcelScript.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string>\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "valuesHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "pivotItemScope",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "sortByValues"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion:enum",
              "docComment": "/**\n * Represents the criteria for the top/bottom values filter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PivotFilterTopBottomCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotFilterTopBottomCriterion",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.bottomItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomItems"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomItems",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.bottomPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomPercent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomPercent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.bottomSum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomSum"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomSum",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.topItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topItems"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topItems",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.topPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topPercent"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topPercent",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotFilterTopBottomCriterion.topSum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topSum"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topSum",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel PivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotHierarchy",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotHierarchy#getFields:member(1)",
                  "docComment": "/**\n * Returns the PivotFields associated with the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFields(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFields"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotHierarchy#getId:member(1)",
                  "docComment": "/**\n * Id of the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotHierarchy#getName:member(1)",
                  "docComment": "/**\n * Name of the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotHierarchy#getPivotField:member(1)",
                  "docComment": "/**\n * Gets a PivotField by name. If the PivotField does not exist, will return a null object.\n *\n * @param name - Name of the PivotField to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotField(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotField"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotHierarchy#setName:member(1)",
                  "docComment": "/**\n * Name of the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PivotItem:interface",
              "docComment": "/**\n * Represents the Excel PivotItem.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotItem "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotItem",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#getId:member(1)",
                  "docComment": "/**\n * Id of the PivotItem.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#getIsExpanded:member(1)",
                  "docComment": "/**\n * Determines whether the item is expanded to show child items or if it's collapsed and child items are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsExpanded(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsExpanded"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#getName:member(1)",
                  "docComment": "/**\n * Name of the PivotItem.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the PivotItem is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#setIsExpanded:member(1)",
                  "docComment": "/**\n * Determines whether the item is expanded to show child items or if it's collapsed and child items are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIsExpanded(isExpanded: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "isExpanded",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIsExpanded"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#setName:member(1)",
                  "docComment": "/**\n * Name of the PivotItem.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotItem#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the PivotItem is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PivotLayout:interface",
              "docComment": "/**\n * Represents the visual layout of the PivotTable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotLayout "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotLayout",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getAutoFormat:member(1)",
                  "docComment": "/**\n * Specifies if formatting will be automatically formatted when it’s refreshed or when fields are moved\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getColumnLabelRange:member(1)",
                  "docComment": "/**\n * Returns the range where the PivotTable's column labels reside.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnLabelRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnLabelRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getDataHierarchy:member(1)",
                  "docComment": "/**\n * Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.\n *\n * @param cell - A single cell within the PivotTable data body.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataHierarchy(cell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cell",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getDataHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getEnableFieldList:member(1)",
                  "docComment": "/**\n * Specifies if the field list can be shown in the UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnableFieldList(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEnableFieldList"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getFilterAxisRange:member(1)",
                  "docComment": "/**\n * Returns the range of the PivotTable's filter area.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilterAxisRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFilterAxisRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getLayoutType:member(1)",
                  "docComment": "/**\n * This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this will be null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLayoutType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotLayoutType",
                      "canonicalReference": "excel!ExcelScript.PivotLayoutType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLayoutType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getPreserveFormatting:member(1)",
                  "docComment": "/**\n * Specifies if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPreserveFormatting(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPreserveFormatting"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getRange:member(1)",
                  "docComment": "/**\n * Returns the range the PivotTable exists on, excluding the filter area.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getRangeBetweenHeaderAndTotal:member(1)",
                  "docComment": "/**\n * Returns the range where the PivotTable's data values reside.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBetweenHeaderAndTotal(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeBetweenHeaderAndTotal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getRowLabelRange:member(1)",
                  "docComment": "/**\n * Returns the range where the PivotTable's row labels reside.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowLabelRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowLabelRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getShowColumnGrandTotals:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable report shows grand totals for columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowColumnGrandTotals(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowColumnGrandTotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getShowRowGrandTotals:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable report shows grand totals for rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowRowGrandTotals(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowRowGrandTotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#getSubtotalLocation:member(1)",
                  "docComment": "/**\n * This property indicates the SubtotalLocationType of all fields on the PivotTable. If fields have different states, this will be null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubtotalLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubtotalLocationType",
                      "canonicalReference": "excel!ExcelScript.SubtotalLocationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSubtotalLocation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setAutoFormat:member(1)",
                  "docComment": "/**\n * Specifies if formatting will be automatically formatted when it’s refreshed or when fields are moved\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoFormat(autoFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setAutoSortOnCell:member(1)",
                  "docComment": "/**\n * Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context. This behaves identically to applying an autosort from the UI.\n *\n * @param cell - A single cell to use get the criteria from for applying the autosort.\n *\n * @param sortBy - The direction of the sort.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoSortOnCell(cell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortBy",
                      "canonicalReference": "excel!ExcelScript.SortBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cell",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "setAutoSortOnCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setEnableFieldList:member(1)",
                  "docComment": "/**\n * Specifies if the field list can be shown in the UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnableFieldList(enableFieldList: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enableFieldList",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEnableFieldList"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setLayoutType:member(1)",
                  "docComment": "/**\n * This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this will be null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLayoutType(layoutType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotLayoutType",
                      "canonicalReference": "excel!ExcelScript.PivotLayoutType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "layoutType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLayoutType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setPreserveFormatting:member(1)",
                  "docComment": "/**\n * Specifies if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPreserveFormatting(preserveFormatting: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "preserveFormatting",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPreserveFormatting"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setShowColumnGrandTotals:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable report shows grand totals for columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowColumnGrandTotals(showColumnGrandTotals: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showColumnGrandTotals",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowColumnGrandTotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setShowRowGrandTotals:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable report shows grand totals for rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowRowGrandTotals(showRowGrandTotals: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showRowGrandTotals",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowRowGrandTotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotLayout#setSubtotalLocation:member(1)",
                  "docComment": "/**\n * This property indicates the SubtotalLocationType of all fields on the PivotTable. If fields have different states, this will be null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSubtotalLocation(subtotalLocation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubtotalLocationType",
                      "canonicalReference": "excel!ExcelScript.SubtotalLocationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "subtotalLocation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSubtotalLocation"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PivotLayoutType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PivotLayoutType "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotLayoutType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotLayoutType.compact:member",
                  "docComment": "/**\n * A horizontally compressed form with labels from the next field in the same column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "compact"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "compact",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotLayoutType.outline:member",
                  "docComment": "/**\n * Inner fields' items are on same row as outer fields' items and subtotals are always on the bottom.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "outline"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outline",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PivotLayoutType.tabular:member",
                  "docComment": "/**\n * Inner fields' items are always on a new line relative to the outer fields' items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tabular"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tabular",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PivotTable:interface",
              "docComment": "/**\n * Represents an Excel PivotTable. To learn more about the PivotTable object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables | Work with PivotTables using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTable "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTable",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#addColumnHierarchy:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column, or filter axis, it will be removed from that location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addColumnHierarchy(\n            pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "addColumnHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#addDataHierarchy:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addDataHierarchy(pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addDataHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#addFilterHierarchy:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column, or filter axis, it will be removed from that location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFilterHierarchy(\n            pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "addFilterHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#addRowHierarchy:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column, or filter axis, it will be removed from that location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addRowHierarchy(\n            pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "addRowHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#delete:member(1)",
                  "docComment": "/**\n * Deletes the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getColumnHierarchies:member(1)",
                  "docComment": "/**\n * The Column Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnHierarchies(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnHierarchies"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getColumnHierarchy:member(1)",
                  "docComment": "/**\n * Gets a RowColumnPivotHierarchy by name. If the RowColumnPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the RowColumnPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnHierarchy(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumnHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getDataHierarchies:member(1)",
                  "docComment": "/**\n * The Data Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataHierarchies(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataHierarchies"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getDataHierarchy:member(1)",
                  "docComment": "/**\n * Gets a DataPivotHierarchy by name. If the DataPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the DataPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataHierarchy(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getDataHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getEnableDataValueEditing:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable allows values in the data body to be edited by the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnableDataValueEditing(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEnableDataValueEditing"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getFilterHierarchies:member(1)",
                  "docComment": "/**\n * The Filter Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilterHierarchies(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFilterHierarchies"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getFilterHierarchy:member(1)",
                  "docComment": "/**\n * Gets a FilterPivotHierarchy by name. If the FilterPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the FilterPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilterHierarchy(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getFilterHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getHierarchies:member(1)",
                  "docComment": "/**\n * The Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHierarchies(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHierarchies"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getHierarchy:member(1)",
                  "docComment": "/**\n * Gets a PivotHierarchy by name. If the PivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the PivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHierarchy(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getId:member(1)",
                  "docComment": "/**\n * Id of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getLayout:member(1)",
                  "docComment": "/**\n * The PivotLayout describing the layout and visual structure of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLayout(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotLayout",
                      "canonicalReference": "excel!ExcelScript.PivotLayout:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLayout"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getName:member(1)",
                  "docComment": "/**\n * Name of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getRowHierarchies:member(1)",
                  "docComment": "/**\n * The Row Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowHierarchies(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowHierarchies"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getRowHierarchy:member(1)",
                  "docComment": "/**\n * Gets a RowColumnPivotHierarchy by name. If the RowColumnPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the RowColumnPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowHierarchy(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRowHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getUseCustomSortLists:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable uses custom lists when sorting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUseCustomSortLists(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUseCustomSortLists"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#getWorksheet:member(1)",
                  "docComment": "/**\n * The worksheet containing the current PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#refresh:member(1)",
                  "docComment": "/**\n * Refreshes the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refresh(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refresh"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#removeColumnHierarchy:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeColumnHierarchy(\n            rowColumnPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowColumnPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "removeColumnHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#removeDataHierarchy:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeDataHierarchy(DataPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "DataPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "removeDataHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#removeFilterHierarchy:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeFilterHierarchy(filterPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "filterPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "removeFilterHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#removeRowHierarchy:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeRowHierarchy(\n            rowColumnPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowColumnPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "removeRowHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#setEnableDataValueEditing:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable allows values in the data body to be edited by the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnableDataValueEditing(enableDataValueEditing: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enableDataValueEditing",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEnableDataValueEditing"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#setName:member(1)",
                  "docComment": "/**\n * Name of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTable#setUseCustomSortLists:member(1)",
                  "docComment": "/**\n * Specifies if the PivotTable uses custom lists when sorting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUseCustomSortLists(useCustomSortLists: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "useCustomSortLists",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUseCustomSortLists"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface",
              "docComment": "/**\n * Represents a PivotTable Style, which defines style elements by PivotTable region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTableStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTableStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTableStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the PivotTableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTableStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this PivotTableStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTableStyle#getName:member(1)",
                  "docComment": "/**\n * Gets the name of the PivotTableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTableStyle#getReadOnly:member(1)",
                  "docComment": "/**\n * Specifies if this PivotTableStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PivotTableStyle#setName:member(1)",
                  "docComment": "/**\n * Gets the name of the PivotTableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.Placement:enum",
              "docComment": "/**\n * Specifies the way that an object is attached to its underlying cells.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum Placement "
                }
              ],
              "releaseTag": "Public",
              "name": "Placement",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.Placement.absolute:member",
                  "docComment": "/**\n * The object is free floating.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "absolute"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "absolute",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.Placement.oneCell:member",
                  "docComment": "/**\n * The object is moved and sized with the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oneCell"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oneCell",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.Placement.twoCell:member",
                  "docComment": "/**\n * The object is moved with the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoCell"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoCell",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PredefinedCellStyle:interface",
              "docComment": "/**\n * An object encapsulating a style's format and other properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PredefinedCellStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "PredefinedCellStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes this style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getAutoIndent:member(1)",
                  "docComment": "/**\n * Specifies if text is automatically indented when the text alignment in a cell is set to equal distribution.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoIndent(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoIndent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getBorders:member(1)",
                  "docComment": "/**\n * A Border collection of four Border objects that represent the style of the four borders.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorders(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorder",
                      "canonicalReference": "excel!ExcelScript.RangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorders"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getBuiltIn:member(1)",
                  "docComment": "/**\n * Specifies if the style is a built-in style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBuiltIn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBuiltIn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getFill:member(1)",
                  "docComment": "/**\n * The Fill of the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFill",
                      "canonicalReference": "excel!ExcelScript.RangeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getFont:member(1)",
                  "docComment": "/**\n * A Font object that represents the font of the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFont",
                      "canonicalReference": "excel!ExcelScript.RangeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getFormulaHidden:member(1)",
                  "docComment": "/**\n * Specifies if the formula will be hidden when the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulaHidden(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulaHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for the style. See Excel.HorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.HorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIncludeAlignment:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the AutoIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel, and TextOrientation properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIncludeAlignment(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIncludeAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIncludeBorder:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the Color, ColorIndex, LineStyle, and Weight border properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIncludeBorder(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIncludeBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIncludeFont:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the Background, Bold, Color, ColorIndex, FontStyle, Italic, Name, Size, Strikethrough, Subscript, Superscript, and Underline font properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIncludeFont(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIncludeFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIncludeNumber:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the NumberFormat property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIncludeNumber(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIncludeNumber"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIncludePatterns:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the Color, ColorIndex, InvertIfNegative, Pattern, PatternColor, and PatternColorIndex interior properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIncludePatterns(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIncludePatterns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIncludeProtection:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the FormulaHidden and Locked protection properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIncludeProtection(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIncludeProtection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getIndentLevel:member(1)",
                  "docComment": "/**\n * An integer from 0 to 250 that indicates the indent level for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIndentLevel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIndentLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getLocked:member(1)",
                  "docComment": "/**\n * Specifies if the object is locked when the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocked(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocked"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getName:member(1)",
                  "docComment": "/**\n * The name of the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getNumberFormat:member(1)",
                  "docComment": "/**\n * The format code of the number format for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getNumberFormatLocal:member(1)",
                  "docComment": "/**\n * The localized format code of the number format for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormatLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormatLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getRangeBorder:member(1)",
                  "docComment": "/**\n * Gets a border object using its name.\n *\n * @param index - Index value of the border object to be retrieved. See Excel.BorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBorder(index: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderIndex",
                      "canonicalReference": "excel!ExcelScript.BorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorder",
                      "canonicalReference": "excel!ExcelScript.RangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRangeBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getRangeBorderTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire border collections don't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBorderTintAndShade(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeBorderTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getReadingOrder:member(1)",
                  "docComment": "/**\n * The reading order for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadingOrder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadingOrder",
                      "canonicalReference": "excel!ExcelScript.ReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadingOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getShrinkToFit:member(1)",
                  "docComment": "/**\n * Specifies if text automatically shrinks to fit in the available column width.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShrinkToFit(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShrinkToFit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getTextOrientation:member(1)",
                  "docComment": "/**\n * The text orientation for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the vertical alignment for the style. See Excel.VerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "VerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.VerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#getWrapText:member(1)",
                  "docComment": "/**\n * Specifies if Excel wraps the text in the object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWrapText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWrapText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setAutoIndent:member(1)",
                  "docComment": "/**\n * Specifies if text is automatically indented when the text alignment in a cell is set to equal distribution.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoIndent(autoIndent: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoIndent",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoIndent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setFormulaHidden:member(1)",
                  "docComment": "/**\n * Specifies if the formula will be hidden when the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulaHidden(formulaHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulaHidden",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulaHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for the style. See Excel.HorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.HorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIncludeAlignment:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the AutoIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel, and TextOrientation properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIncludeAlignment(includeAlignment: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "includeAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIncludeAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIncludeBorder:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the Color, ColorIndex, LineStyle, and Weight border properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIncludeBorder(includeBorder: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "includeBorder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIncludeBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIncludeFont:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the Background, Bold, Color, ColorIndex, FontStyle, Italic, Name, Size, Strikethrough, Subscript, Superscript, and Underline font properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIncludeFont(includeFont: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "includeFont",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIncludeFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIncludeNumber:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the NumberFormat property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIncludeNumber(includeNumber: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "includeNumber",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIncludeNumber"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIncludePatterns:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the Color, ColorIndex, InvertIfNegative, Pattern, PatternColor, and PatternColorIndex interior properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIncludePatterns(includePatterns: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "includePatterns",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIncludePatterns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIncludeProtection:member(1)",
                  "docComment": "/**\n * Specifies if the style includes the FormulaHidden and Locked protection properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIncludeProtection(includeProtection: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "includeProtection",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIncludeProtection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setIndentLevel:member(1)",
                  "docComment": "/**\n * An integer from 0 to 250 that indicates the indent level for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIndentLevel(indentLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "indentLevel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIndentLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setLocked:member(1)",
                  "docComment": "/**\n * Specifies if the object is locked when the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLocked(locked: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "locked",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLocked"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setNumberFormat:member(1)",
                  "docComment": "/**\n * The format code of the number format for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setNumberFormatLocal:member(1)",
                  "docComment": "/**\n * The localized format code of the number format for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormatLocal(numberFormatLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormatLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormatLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setRangeBorderTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire border collections don't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRangeBorderTintAndShade(rangeBorderTintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rangeBorderTintAndShade",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRangeBorderTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setReadingOrder:member(1)",
                  "docComment": "/**\n * The reading order for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setReadingOrder(readingOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadingOrder",
                      "canonicalReference": "excel!ExcelScript.ReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "readingOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setReadingOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setShrinkToFit:member(1)",
                  "docComment": "/**\n * Specifies if text automatically shrinks to fit in the available column width.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShrinkToFit(shrinkToFit: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shrinkToFit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShrinkToFit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setTextOrientation:member(1)",
                  "docComment": "/**\n * The text orientation for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Specifies the vertical alignment for the style. See Excel.VerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "VerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.VerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PredefinedCellStyle#setWrapText:member(1)",
                  "docComment": "/**\n * Specifies if Excel wraps the text in the object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWrapText(wrapText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "wrapText",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWrapText"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.PresetCriteriaConditionalFormat:interface",
              "docComment": "/**\n * Represents the the preset criteria conditional format such as above average, below average, unique values, contains blank, nonblank, error, and noerror.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PresetCriteriaConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "PresetCriteriaConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PresetCriteriaConditionalFormat#getFormat:member(1)",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PresetCriteriaConditionalFormat#getRule:member(1)",
                  "docComment": "/**\n * The rule of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalPresetCriteriaRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalPresetCriteriaRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.PresetCriteriaConditionalFormat#setRule:member(1)",
                  "docComment": "/**\n * The rule of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRule(rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalPresetCriteriaRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalPresetCriteriaRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PrintComments:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintComments "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintComments",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintComments.endSheet:member",
                  "docComment": "/**\n * Comments will be printed as end notes at the end of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endSheet"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endSheet",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintComments.inPlace:member",
                  "docComment": "/**\n * Comments will be printed where they were inserted in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inPlace"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inPlace",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintComments.noComments:member",
                  "docComment": "/**\n * Comments will not be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noComments"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "noComments",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PrintErrorType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintErrorType "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintErrorType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintErrorType.asDisplayed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "asDisplayed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "asDisplayed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintErrorType.blank:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blank"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blank",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintErrorType.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintErrorType.notAvailable:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notAvailable"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notAvailable",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PrintMarginUnit:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintMarginUnit "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintMarginUnit",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintMarginUnit.centimeters:member",
                  "docComment": "/**\n * Assign the page margins in centimeters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centimeters"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centimeters",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintMarginUnit.inches:member",
                  "docComment": "/**\n * Assign the page margins in inches.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inches"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inches",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintMarginUnit.points:member",
                  "docComment": "/**\n * Assign the page margins in points. A point is 1/72 of an inch.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "points"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "points",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.PrintOrder:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintOrder.downThenOver:member",
                  "docComment": "/**\n * Process down the rows before processing across pages or page fields to the right.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "downThenOver"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "downThenOver",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.PrintOrder.overThenDown:member",
                  "docComment": "/**\n * Process across pages or page fields to the right before moving down the rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overThenDown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overThenDown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ProtectionSelectionMode:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ProtectionSelectionMode "
                }
              ],
              "releaseTag": "Public",
              "name": "ProtectionSelectionMode",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ProtectionSelectionMode.none:member",
                  "docComment": "/**\n * Selection is not allowed for all cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ProtectionSelectionMode.normal:member",
                  "docComment": "/**\n * Selection is allowed for all cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "normal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ProtectionSelectionMode.unlocked:member",
                  "docComment": "/**\n * Selection is allowed only for cells that are not locked.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unlocked"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unlocked",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Range:interface",
              "docComment": "/**\n * Range represents a set of one or more contiguous cells such as a cell, a row, a column, block of cells, etc. To learn more about how ranges are used throughout the API, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges | Work with ranges using the Excel JavaScript API} and {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges-advanced | Work with ranges using the Excel JavaScript API (advanced)}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Range "
                }
              ],
              "releaseTag": "Public",
              "name": "Range",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#addConditionalFormat:member(1)",
                  "docComment": "/**\n * Adds a new conditional format to the collection at the first/top priority.\n *\n * @param type - The type of conditional format being added. See Excel.ConditionalFormatType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addConditionalFormat(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatType",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addConditionalFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#autoFill:member(1)",
                  "docComment": "/**\n * Fills range from the current range to the destination range using the specified AutoFill logic. The destination range can be null, or can extend the source either horizontally or vertically. Discontiguous ranges are not supported.\n *\n * For more information, read {@link https://support.office.com/article/video-use-autofill-and-flash-fill-2e79a709-c814-4b27-8bc2-c4dc84d49464 | Use AutoFill and Flash Fill}.\n *\n * @param destinationRange - The destination range to autofill. If the destination range is null, data is filled out based on the surrounding cells (which is the behavior when double-clicking the UI’s range fill handle).\n *\n * @param autoFillType - The type of autofill. Specifies how the destination range is to be filled, based on the contents of the current range. Default is \"FillDefault\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoFill(\n            destinationRange?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            autoFillType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AutoFillType",
                      "canonicalReference": "excel!ExcelScript.AutoFillType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destinationRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "autoFillType",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "autoFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#calculate:member(1)",
                  "docComment": "/**\n * Calculates a range of cells on a worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "calculate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#clear:member(1)",
                  "docComment": "/**\n * Clear range values, format, fill, border, etc.\n *\n * @param applyTo - Optional. Determines the type of clear action. See Excel.ClearApplyTo for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(applyTo?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ClearApplyTo",
                      "canonicalReference": "excel!ExcelScript.ClearApplyTo:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "applyTo",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#clearAllConditionalFormats:member(1)",
                  "docComment": "/**\n * Clears all conditional formats active on the current specified range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearAllConditionalFormats(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearAllConditionalFormats"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#convertDataTypeToText:member(1)",
                  "docComment": "/**\n * Converts the range cells with datatypes into text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertDataTypeToText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "convertDataTypeToText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#convertToLinkedDataType:member(1)",
                  "docComment": "/**\n * Converts the range cells into linked datatype in the worksheet.\n *\n * @param serviceID - The Service ID which will be used to query the data.\n *\n * @param languageCulture - Language Culture to query the service for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToLinkedDataType(\n            serviceID: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            languageCulture: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "serviceID",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "languageCulture",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "convertToLinkedDataType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#copyFrom:member(1)",
                  "docComment": "/**\n * Copies cell data or formatting from the source range or RangeAreas to the current range. The destination range can be a different size than the source range or RangeAreas. The destination will be expanded automatically if it is smaller than the source.\n *\n * @param sourceRange - The source range or RangeAreas to copy from. When the source RangeAreas has multiple ranges, their form must be able to be created by removing full rows or columns from a rectangular range.\n *\n * @param copyType - The type of cell data or formatting to copy over. Default is \"All\".\n *\n * @param skipBlanks - True if to skip blank cells in the source range. Default is false.\n *\n * @param transpose - True if to transpose the cells in the destination range. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copyFrom(\n            sourceRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            copyType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeCopyType",
                      "canonicalReference": "excel!ExcelScript.RangeCopyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            skipBlanks?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            transpose?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "copyType",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "skipBlanks",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "transpose",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "copyFrom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#delete:member(1)",
                  "docComment": "/**\n * Deletes the cells associated with the range.\n *\n * @param shift - Specifies which way to shift the cells. See Excel.DeleteShiftDirection for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(shift: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DeleteShiftDirection",
                      "canonicalReference": "excel!ExcelScript.DeleteShiftDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shift",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#find:member(1)",
                  "docComment": "/**\n * Finds the given string based on the criteria specified. If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell. If there are no matches, this function will return a null object.\n *\n * @param text - The string to find.\n *\n * @param criteria - Additional search criteria, including the search direction and whether the search needs to match the entire cell or be case sensitive.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "find(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SearchCriteria",
                      "canonicalReference": "excel!ExcelScript.SearchCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "find"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#flashFill:member(1)",
                  "docComment": "/**\n * Does FlashFill to current range.Flash Fill will automatically fills data when it senses a pattern, so the range must be single column range and have data around in order to find pattern.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flashFill(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "flashFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getAbsoluteResizedRange:member(1)",
                  "docComment": "/**\n * Gets a Range object with the same top-left cell as the current Range object, but with the specified numbers of rows and columns.\n *\n * @param numRows - The number of rows of the new range size.\n *\n * @param numColumns - The number of columns of the new range size.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAbsoluteResizedRange(numRows: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", numColumns: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "numColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getAbsoluteResizedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getAddress:member(1)",
                  "docComment": "/**\n * Specifies the range reference in A1-style. Address value will contain the Sheet reference (e.g. \"Sheet1!A1:B4\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAddress(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAddress"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getAddressLocal:member(1)",
                  "docComment": "/**\n * Specifies the range reference for the specified range in the language of the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAddressLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAddressLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getBoundingRect:member(1)",
                  "docComment": "/**\n * Gets the smallest range object that encompasses the given ranges. For example, the GetBoundingRect of \"B2:C5\" and \"D10:E15\" is \"B2:E15\".\n *\n * @param anotherRange - The range object or address or range name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBoundingRect(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getBoundingRect"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getCell:member(1)",
                  "docComment": "/**\n * Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid. The returned cell is located relative to the top left cell of the range.\n *\n * @param row - Row number of the cell to be retrieved. Zero-indexed.\n *\n * @param column - Column number of the cell to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCell(row: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", column: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "row",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "column",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getCellCount:member(1)",
                  "docComment": "/**\n * Specifies the number of cells in the range. This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCellCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCellCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getColumn:member(1)",
                  "docComment": "/**\n * Gets a column contained in the range.\n *\n * @param column - Column number of the range to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumn(column: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "column",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getColumnCount:member(1)",
                  "docComment": "/**\n * Specifies the total number of columns in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getColumnHidden:member(1)",
                  "docComment": "/**\n * Represents if all columns of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnHidden(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getColumnIndex:member(1)",
                  "docComment": "/**\n * Specifies the column number of the first cell in the range. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnIndex(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getColumnsAfter:member(1)",
                  "docComment": "/**\n * Gets a certain number of columns to the right of the current Range object.\n *\n * @param count - Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnsAfter(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumnsAfter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getColumnsBefore:member(1)",
                  "docComment": "/**\n * Gets a certain number of columns to the left of the current Range object.\n *\n * @param count - Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnsBefore(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumnsBefore"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getConditionalFormat:member(1)",
                  "docComment": "/**\n * Returns a conditional format for the given ID.\n *\n * @param id - The id of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalFormat(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getConditionalFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getConditionalFormats:member(1)",
                  "docComment": "/**\n * The collection of ConditionalFormats that intersect the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalFormats(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConditionalFormats"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getDataValidation:member(1)",
                  "docComment": "/**\n * Returns a data validation object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataValidation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidation",
                      "canonicalReference": "excel!ExcelScript.DataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataValidation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getEntireColumn:member(1)",
                  "docComment": "/**\n * Gets an object that represents the entire column of the range (for example, if the current range represents cells \"B4:E11\", its `getEntireColumn` is a range that represents columns \"B:E\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireColumn(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getEntireRow:member(1)",
                  "docComment": "/**\n * Gets an object that represents the entire row of the range (for example, if the current range represents cells \"B4:E11\", its `GetEntireRow` is a range that represents rows \"4:11\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireRow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormat:member(1)",
                  "docComment": "/**\n * Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFormat",
                      "canonicalReference": "excel!ExcelScript.RangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormula:member(1)",
                  "docComment": "/**\n * Represents the cell formula in A1-style notation. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormula(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormulaLocal:member(1)",
                  "docComment": "/**\n * Represents the cell formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulaLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulaLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormulaR1C1:member(1)",
                  "docComment": "/**\n * Represents the cell formula in R1C1-style notation. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulaR1C1(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulaR1C1"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormulas:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulas(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormulasLocal:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulasLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulasLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getFormulasR1C1:member(1)",
                  "docComment": "/**\n * Represents the formula in R1C1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulasR1C1(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulasR1C1"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getHeight:member(1)",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from top edge of the range to bottom edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getHidden:member(1)",
                  "docComment": "/**\n * Represents if all cells of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHidden(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getHyperlink:member(1)",
                  "docComment": "/**\n * Represents the hyperlink for the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHyperlink(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeHyperlink",
                      "canonicalReference": "excel!ExcelScript.RangeHyperlink:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHyperlink"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getImage:member(1)",
                  "docComment": "/**\n * Renders the range as a base64-encoded png image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getImage(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getIntersection:member(1)",
                  "docComment": "/**\n * Gets the range object that represents the rectangular intersection of the given ranges. If no intersection is found, will return a null object.\n *\n * @param anotherRange - The range object or range address that will be used to determine the intersection of ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntersection(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getIntersection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getIsEntireColumn:member(1)",
                  "docComment": "/**\n * Represents if the current range is an entire column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsEntireColumn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsEntireColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getIsEntireRow:member(1)",
                  "docComment": "/**\n * Represents if the current range is an entire row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsEntireRow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsEntireRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getLastCell:member(1)",
                  "docComment": "/**\n * Gets the last cell within the range. For example, the last cell of \"B2:D5\" is \"D5\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastCell(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getLastColumn:member(1)",
                  "docComment": "/**\n * Gets the last column within the range. For example, the last column of \"B2:D5\" is \"D2:D5\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastColumn(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getLastRow:member(1)",
                  "docComment": "/**\n * Gets the last row within the range. For example, the last row of \"B2:D5\" is \"B5:D5\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastRow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getLeft:member(1)",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from left edge of the worksheet to left edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getLinkedDataTypeState:member(1)",
                  "docComment": "/**\n * Represents the data type state of the cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinkedDataTypeState(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "LinkedDataTypeState",
                      "canonicalReference": "excel!ExcelScript.LinkedDataTypeState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLinkedDataTypeState"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getLinkedDataTypeStates:member(1)",
                  "docComment": "/**\n * Represents the data type state of each cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinkedDataTypeStates(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "LinkedDataTypeState",
                      "canonicalReference": "excel!ExcelScript.LinkedDataTypeState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLinkedDataTypeStates"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getNumberFormat:member(1)",
                  "docComment": "/**\n * Represents cell Excel number format code for the given range. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getNumberFormatLocal:member(1)",
                  "docComment": "/**\n * Represents cell Excel number format code for the given range, based on the language settings of the user.​ Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property. Any returned text uses the locally-formatted strings based on the language specified in the system settings. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormatLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormatLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getNumberFormats:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormats(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormats"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getNumberFormatsLocal:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given range, based on the language settings of the user.​ Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property. Any returned text uses the locally-formatted strings based on the language specified in the system settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormatsLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormatsLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getOffsetRange:member(1)",
                  "docComment": "/**\n * Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.\n *\n * @param rowOffset - The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.\n *\n * @param columnOffset - The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOffsetRange(rowOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", columnOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "columnOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getOffsetRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getPredefinedCellStyle:member(1)",
                  "docComment": "/**\n * Represents the style of the current range. If the styles of the cells are inconsistent, null will be returned. For custom styles, the style name will be returned. For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPredefinedCellStyle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPredefinedCellStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getResizedRange:member(1)",
                  "docComment": "/**\n * Gets a Range object similar to the current Range object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.\n *\n * @param deltaRows - The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\n *\n * @param deltaColumns - The number of columns by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getResizedRange(deltaRows: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaColumns: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "deltaRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "deltaColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getResizedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getRow:member(1)",
                  "docComment": "/**\n * Gets a row contained in the range.\n *\n * @param row - Row number of the range to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRow(row: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "row",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getRowCount:member(1)",
                  "docComment": "/**\n * Returns the total number of rows in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getRowHidden:member(1)",
                  "docComment": "/**\n * Represents if all rows of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowHidden(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getRowIndex:member(1)",
                  "docComment": "/**\n * Returns the row number of the first cell in the range. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowIndex(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getRowsAbove:member(1)",
                  "docComment": "/**\n * Gets a certain number of rows above the current Range object.\n *\n * @param count - Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowsAbove(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRowsAbove"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getRowsBelow:member(1)",
                  "docComment": "/**\n * Gets a certain number of rows below the current Range object.\n *\n * @param count - Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowsBelow(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRowsBelow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getSort:member(1)",
                  "docComment": "/**\n * Represents the range sort of the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSort(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeSort",
                      "canonicalReference": "excel!ExcelScript.RangeSort:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSort"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getSpecialCells:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, comprising one or more ranges, that represents all the cells that match the specified type and value. If no special cells are found, a null object will be returned.\n *\n * @param cellType - The type of cells to include.\n *\n * @param cellValueType - If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSpecialCells(\n            cellType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellType",
                      "canonicalReference": "excel!ExcelScript.SpecialCellType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            cellValueType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellValueType",
                      "canonicalReference": "excel!ExcelScript.SpecialCellValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cellValueType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getSpecialCells"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getSurroundingRegion:member(1)",
                  "docComment": "/**\n * Returns a Range object that represents the surrounding region for the top-left cell in this range. A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSurroundingRegion(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSurroundingRegion"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getText:member(1)",
                  "docComment": "/**\n * Represents Text value of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getTexts:member(1)",
                  "docComment": "/**\n * Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTexts(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTexts"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getTop:member(1)",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from top edge of the worksheet to top edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getUsedRange:member(1)",
                  "docComment": "/**\n * Returns the used range of the given range object. If there are no used cells within the range, this function will return a null object.\n *\n * @param valuesOnly - Considers only cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRange(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getValue:member(1)",
                  "docComment": "/**\n * Represents the raw value of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getValues:member(1)",
                  "docComment": "/**\n * Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValues(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValues"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getValueType:member(1)",
                  "docComment": "/**\n * Represents the type of data in the cell. If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValueType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!ExcelScript.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValueType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getValueTypes:member(1)",
                  "docComment": "/**\n * Specifies the type of data in each cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValueTypes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!ExcelScript.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValueTypes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getVisibleView:member(1)",
                  "docComment": "/**\n * Represents the visible rows of the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisibleView(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeView",
                      "canonicalReference": "excel!ExcelScript.RangeView:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisibleView"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getWidth:member(1)",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from left edge of the range to right edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#getWorksheet:member(1)",
                  "docComment": "/**\n * The worksheet containing the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#group:member(1)",
                  "docComment": "/**\n * Groups columns and rows for an outline.\n *\n * @param groupOption - Specifies how the range can be grouped by rows or columns. An `InvalidArgument` error is thrown when the group option differs from the range's `isEntireRow` or `isEntireColumn` property (i.e., `range.isEntireRow` is true and `groupOption` is \"ByColumns\" or `range.isEntireColumn` is true and `groupOption` is \"ByRows\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "group(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!ExcelScript.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "group"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#hideGroupDetails:member(1)",
                  "docComment": "/**\n * Hide details of the row or column group.\n *\n * @param groupOption - Specifies whether to hide details of grouped rows or grouped columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hideGroupDetails(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!ExcelScript.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "hideGroupDetails"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#insert:member(1)",
                  "docComment": "/**\n * Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.\n *\n * @param shift - Specifies which way to shift the cells. See Excel.InsertShiftDirection for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insert(shift: "
                    },
                    {
                      "kind": "Reference",
                      "text": "InsertShiftDirection",
                      "canonicalReference": "excel!ExcelScript.InsertShiftDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shift",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "insert"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#merge:member(1)",
                  "docComment": "/**\n * Merge the range cells into one region in the worksheet.\n *\n * @param across - Optional. Set true to merge cells in each row of the specified range as separate merged cells. The default value is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "merge(across?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "across",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "merge"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#moveTo:member(1)",
                  "docComment": "/**\n * Moves cell values, formatting, and formulas from current range to the destination range, replacing the old information in those cells. The destination range will be expanded automatically if it is smaller than the current range. Any cells in the destination range that are outside of the original range's area are not changed.\n *\n * @param destinationRange - destinationRange Specifies the range to where the information in this range will be moved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "moveTo(destinationRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destinationRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "moveTo"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#removeDuplicates:member(1)",
                  "docComment": "/**\n * Removes duplicate values from the range specified by the columns.\n *\n * @param columns - The columns inside the range that may contain duplicates. At least one column needs to be specified. Zero-indexed.\n *\n * @param includesHeader - True if the input data contains header. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeDuplicates(\n            columns: "
                    },
                    {
                      "kind": "Content",
                      "text": "number[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            includesHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RemoveDuplicatesResult",
                      "canonicalReference": "excel!ExcelScript.RemoveDuplicatesResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "columns",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "includesHeader",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "removeDuplicates"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#replaceAll:member(1)",
                  "docComment": "/**\n * Finds and replaces the given string based on the criteria specified within the current range.\n *\n * @param text - String to find.\n *\n * @param replacement - String to replace the original with.\n *\n * @param criteria - Additional Replace Criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "replaceAll(\n            text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            replacement: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplaceCriteria",
                      "canonicalReference": "excel!ExcelScript.ReplaceCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "replacement",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "replaceAll"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#select:member(1)",
                  "docComment": "/**\n * Selects the specified range in the Excel UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "select(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "select"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setColumnHidden:member(1)",
                  "docComment": "/**\n * Represents if all columns of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColumnHidden(columnHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "columnHidden",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColumnHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setDirty:member(1)",
                  "docComment": "/**\n * Set a range to be recalculated when the next recalculation occurs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDirty(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setDirty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setFormula:member(1)",
                  "docComment": "/**\n * Sets the cell formula in A1-style notation. If the range contains multiple cells, each cell in the given range will be updated with the input data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setFormulaLocal:member(1)",
                  "docComment": "/**\n * Set the cell formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German. If the range contains multiple cells, each cell in the given range will be updated with the input data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulaLocal(formulaLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulaLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulaLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setFormulaR1C1:member(1)",
                  "docComment": "/**\n * Sets the cell formula in R1C1-style notation. If the range contains multiple cells, each cell in the given range will be updated with the input data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulaR1C1(formulaR1C1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulaR1C1",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulaR1C1"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setFormulas:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulas(formulas: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulas",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setFormulasLocal:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulasLocal(formulasLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulasLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulasLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setFormulasR1C1:member(1)",
                  "docComment": "/**\n * Represents the formula in R1C1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulasR1C1(formulasR1C1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulasR1C1",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulasR1C1"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setHyperlink:member(1)",
                  "docComment": "/**\n * Represents the hyperlink for the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHyperlink(hyperlink: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeHyperlink",
                      "canonicalReference": "excel!ExcelScript.RangeHyperlink:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "hyperlink",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHyperlink"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setNumberFormat:member(1)",
                  "docComment": "/**\n * Sets cell Excel number format code for the given range. If the range contains multiple cells, each cell in the given range will be updated with the input data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setNumberFormatLocal:member(1)",
                  "docComment": "/**\n * Sets cell Excel number format code for the given range, based on the language settings of the user.​ Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property. Any returned text uses the locally-formatted strings based on the language specified in the system settings. If the range contains multiple cells, each cell in the given range will be updated with the input data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormatLocal(numberFormatLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormatLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormatLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setNumberFormats:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormats(numberFormats: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormats",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormats"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setNumberFormatsLocal:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given range, based on the language settings of the user.​ Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property. Any returned text uses the locally-formatted strings based on the language specified in the system settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormatsLocal(numberFormatsLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormatsLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormatsLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setPredefinedCellStyle:member(1)",
                  "docComment": "/**\n * Represents the style of the current range. If the styles of the cells are inconsistent, null will be returned. For custom styles, the style name will be returned. For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPredefinedCellStyle(predefinedCellStyle: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "predefinedCellStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPredefinedCellStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setRowHidden:member(1)",
                  "docComment": "/**\n * Represents if all rows of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRowHidden(rowHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowHidden",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRowHidden"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setValue:member(1)",
                  "docComment": "/**\n * Sets the raw value of the specified range. The data being set could be of type string, number, or a boolean. `null` value will be ignored (not set or overwritten in Excel). If the range contains multiple cells, each cell in the given range will be updated with the input data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValue(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#setValues:member(1)",
                  "docComment": "/**\n * Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValues(values: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValues"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#showCard:member(1)",
                  "docComment": "/**\n * Displays the card for an active cell if it has rich value content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showCard(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "showCard"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#showGroupDetails:member(1)",
                  "docComment": "/**\n * Show details of the row or column group.\n *\n * @param groupOption - Specifies whether to show details of grouped rows or grouped columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showGroupDetails(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!ExcelScript.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "showGroupDetails"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#ungroup:member(1)",
                  "docComment": "/**\n * Ungroups columns and rows for an outline.\n *\n * @param groupOption - Specifies how the range can be ungrouped by rows or columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ungroup(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!ExcelScript.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "ungroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Range#unmerge:member(1)",
                  "docComment": "/**\n * Unmerge the range cells into separate cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unmerge(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "unmerge"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeAreas:interface",
              "docComment": "/**\n * RangeAreas represents a collection of one or more rectangular ranges in the same worksheet. To learn how to use discontinguous ranges, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges | Work with multiple ranges simultaneously in Excel add-ins}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeAreas "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeAreas",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#addConditionalFormat:member(1)",
                  "docComment": "/**\n * Adds a new conditional format to the collection at the first/top priority.\n *\n * @param type - The type of conditional format being added. See Excel.ConditionalFormatType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addConditionalFormat(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatType",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormatType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addConditionalFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#calculate:member(1)",
                  "docComment": "/**\n * Calculates all cells in the RangeAreas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "calculate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#clear:member(1)",
                  "docComment": "/**\n * Clears values, format, fill, border, etc on each of the areas that comprise this RangeAreas object.\n *\n * @param applyTo - Optional. Determines the type of clear action. See Excel.ClearApplyTo for details. Default is \"All\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(applyTo?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ClearApplyTo",
                      "canonicalReference": "excel!ExcelScript.ClearApplyTo:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "applyTo",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#clearAllConditionalFormats:member(1)",
                  "docComment": "/**\n * Clears all conditional formats active on the current specified range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearAllConditionalFormats(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearAllConditionalFormats"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#convertDataTypeToText:member(1)",
                  "docComment": "/**\n * Converts all cells in the RangeAreas with datatypes into text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertDataTypeToText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "convertDataTypeToText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#convertToLinkedDataType:member(1)",
                  "docComment": "/**\n * Converts all cells in the RangeAreas into linked datatype.\n *\n * @param serviceID - The Service ID which will be used to query the data.\n *\n * @param languageCulture - Language Culture to query the service for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToLinkedDataType(\n            serviceID: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            languageCulture: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "serviceID",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "languageCulture",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "convertToLinkedDataType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#copyFrom:member(1)",
                  "docComment": "/**\n * Copies cell data or formatting from the source range or RangeAreas to the current RangeAreas. The destination rangeAreas can be a different size than the source range or RangeAreas. The destination will be expanded automatically if it is smaller than the source.\n *\n * @param sourceRange - The source range or RangeAreas to copy from. When the source RangeAreas has multiple ranges, their form must able to be created by removing full rows or columns from a rectangular range.\n *\n * @param copyType - The type of cell data or formatting to copy over. Default is \"All\".\n *\n * @param skipBlanks - True if to skip blank cells in the source range or RangeAreas. Default is false.\n *\n * @param transpose - True if to transpose the cells in the destination RangeAreas. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copyFrom(\n            sourceRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            copyType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeCopyType",
                      "canonicalReference": "excel!ExcelScript.RangeCopyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            skipBlanks?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            transpose?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "copyType",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "skipBlanks",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "transpose",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "copyFrom"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getAddress:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas reference in A1-style. Address value will contain the worksheet name for each rectangular block of cells (e.g. \"Sheet1!A1:B4, Sheet1!D1:D4\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAddress(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAddress"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getAddressLocal:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas reference in the user locale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAddressLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAddressLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getAreaCount:member(1)",
                  "docComment": "/**\n * Returns the number of rectangular ranges that comprise this RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAreaCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAreaCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getAreas:member(1)",
                  "docComment": "/**\n * Returns a collection of rectangular ranges that comprise this RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAreas(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAreas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getCellCount:member(1)",
                  "docComment": "/**\n * Returns the number of cells in the RangeAreas object, summing up the cell counts of all of the individual rectangular ranges. Returns -1 if the cell count exceeds 2^31-1 (2,147,483,647).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCellCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCellCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getConditionalFormat:member(1)",
                  "docComment": "/**\n * Returns a conditional format for the given ID.\n *\n * @param id - The id of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalFormat(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getConditionalFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getConditionalFormats:member(1)",
                  "docComment": "/**\n * Returns a collection of ConditionalFormats that intersect with any cells in this RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConditionalFormats(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConditionalFormats"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getDataValidation:member(1)",
                  "docComment": "/**\n * Returns a dataValidation object for all ranges in the RangeAreas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataValidation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidation",
                      "canonicalReference": "excel!ExcelScript.DataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataValidation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getEntireColumn:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents the entire columns of the RangeAreas (for example, if the current RangeAreas represents cells \"B4:E11, H2\", it returns a RangeAreas that represents columns \"B:E, H:H\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireColumn(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getEntireRow:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents the entire rows of the RangeAreas (for example, if the current RangeAreas represents cells \"B4:E11\", it returns a RangeAreas that represents rows \"4:11\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireRow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getFormat:member(1)",
                  "docComment": "/**\n * Returns a RangeFormat object, encapsulating the the font, fill, borders, alignment, and other properties for all ranges in the RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFormat",
                      "canonicalReference": "excel!ExcelScript.RangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getIntersection:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas object that represents the intersection of the given ranges or RangeAreas. If no intersection is found, a null object is returned.\n *\n * @param anotherRange - The range, RangeAreas, or address that will be used to determine the intersection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntersection(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getIntersection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getIsEntireColumn:member(1)",
                  "docComment": "/**\n * Specifies if all the ranges on this RangeAreas object represent entire columns (e.g., \"A:C, Q:Z\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsEntireColumn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsEntireColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getIsEntireRow:member(1)",
                  "docComment": "/**\n * Specifies if all the ranges on this RangeAreas object represent entire rows (e.g., \"1:3, 5:7\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsEntireRow(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsEntireRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getOffsetRangeAreas:member(1)",
                  "docComment": "/**\n * Returns an RangeAreas object that is shifted by the specific row and column offset. The dimension of the returned RangeAreas will match the original object. If the resulting RangeAreas is forced outside the bounds of the worksheet grid, an error will be thrown.\n *\n * @param rowOffset - The number of rows (positive, negative, or 0) by which the RangeAreas is to be offset. Positive values are offset downward, and negative values are offset upward.\n *\n * @param columnOffset - The number of columns (positive, negative, or 0) by which the RangeAreas is to be offset. Positive values are offset to the right, and negative values are offset to the left.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOffsetRangeAreas(\n            rowOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            columnOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "columnOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getOffsetRangeAreas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getPredefinedCellStyle:member(1)",
                  "docComment": "/**\n * Represents the style for all ranges in this RangeAreas object. If the styles of the cells are inconsistent, null will be returned. For custom styles, the style name will be returned. For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPredefinedCellStyle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPredefinedCellStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getSpecialCells:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents all the cells that match the specified type and value. Returns a null object if no special cells are found that match the criteria.\n *\n * @param cellType - The type of cells to include.\n *\n * @param cellValueType - If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSpecialCells(\n            cellType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellType",
                      "canonicalReference": "excel!ExcelScript.SpecialCellType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            cellValueType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellValueType",
                      "canonicalReference": "excel!ExcelScript.SpecialCellValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cellValueType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getSpecialCells"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getUsedRangeAreas:member(1)",
                  "docComment": "/**\n * Returns the used RangeAreas that comprises all the used areas of individual rectangular ranges in the RangeAreas object. If there are no used cells within the RangeAreas, a null object will be returned.\n *\n * @param valuesOnly - Whether to only consider cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRangeAreas(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRangeAreas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#getWorksheet:member(1)",
                  "docComment": "/**\n * Returns the worksheet for the current RangeAreas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#setDirty:member(1)",
                  "docComment": "/**\n * Sets the RangeAreas to be recalculated when the next recalculation occurs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDirty(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setDirty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeAreas#setPredefinedCellStyle:member(1)",
                  "docComment": "/**\n * Represents the style for all ranges in this RangeAreas object. If the styles of the cells are inconsistent, null will be returned. For custom styles, the style name will be returned. For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPredefinedCellStyle(predefinedCellStyle: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "predefinedCellStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPredefinedCellStyle"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeBorder:interface",
              "docComment": "/**\n * Represents the border of an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeBorder",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#getSideIndex:member(1)",
                  "docComment": "/**\n * Constant value that indicates the specific side of the border. See Excel.BorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSideIndex(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderIndex",
                      "canonicalReference": "excel!ExcelScript.BorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSideIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#getStyle:member(1)",
                  "docComment": "/**\n * One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderLineStyle",
                      "canonicalReference": "excel!ExcelScript.BorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#getTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Border, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the border doesn't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTintAndShade(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#getWeight:member(1)",
                  "docComment": "/**\n * Specifies the weight of the border around a range. See Excel.BorderWeight for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWeight(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderWeight",
                      "canonicalReference": "excel!ExcelScript.BorderWeight:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#setStyle:member(1)",
                  "docComment": "/**\n * One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStyle(style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderLineStyle",
                      "canonicalReference": "excel!ExcelScript.BorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "style",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#setTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Border, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the border doesn't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTintAndShade(tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tintAndShade",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeBorder#setWeight:member(1)",
                  "docComment": "/**\n * Specifies the weight of the border around a range. See Excel.BorderWeight for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWeight(weight: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderWeight",
                      "canonicalReference": "excel!ExcelScript.BorderWeight:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "weight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWeight"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.RangeCopyType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum RangeCopyType "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeCopyType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeCopyType.all:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "all"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "all",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeCopyType.formats:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formats"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formats",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeCopyType.formulas:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulas"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulas",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeCopyType.values:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeFill:interface",
              "docComment": "/**\n * Represents the background of a range object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeFill "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#clear:member(1)",
                  "docComment": "/**\n * Resets the range background.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the background, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#getPattern:member(1)",
                  "docComment": "/**\n * The pattern of a range. See Excel.FillPattern for details. LinearGradient and RectangularGradient are not supported. A null value indicates that the entire range doesn't have uniform pattern setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPattern(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FillPattern",
                      "canonicalReference": "excel!ExcelScript.FillPattern:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPattern"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#getPatternColor:member(1)",
                  "docComment": "/**\n * The HTML color code representing the color of the range pattern, of the form #RRGGBB (e.g. \"FFA500\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPatternColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPatternColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#getPatternTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a pattern color for Range Fill, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. If the pattern tintAndShades are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPatternTintAndShade(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPatternTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#getTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Fill, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. If the tintAndShades are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTintAndShade(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representing the color of the background, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#setPattern:member(1)",
                  "docComment": "/**\n * The pattern of a range. See Excel.FillPattern for details. LinearGradient and RectangularGradient are not supported. A null value indicates that the entire range doesn't have uniform pattern setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPattern(pattern: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FillPattern",
                      "canonicalReference": "excel!ExcelScript.FillPattern:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pattern",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPattern"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#setPatternColor:member(1)",
                  "docComment": "/**\n * The HTML color code representing the color of the range pattern, of the form #RRGGBB (e.g. \"FFA500\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPatternColor(patternColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "patternColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPatternColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#setPatternTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a pattern color for Range Fill, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. If the pattern tintAndShades are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPatternTintAndShade(patternTintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "patternTintAndShade",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPatternTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFill#setTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Fill, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. If the tintAndShades are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTintAndShade(tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tintAndShade",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTintAndShade"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeFont:interface",
              "docComment": "/**\n * This object represents the font attributes (font name, font size, color, etc.) for an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeFont "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeFont",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getBold:member(1)",
                  "docComment": "/**\n * Represents the bold status of font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBold(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getItalic:member(1)",
                  "docComment": "/**\n * Specifies the italic status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItalic(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getName:member(1)",
                  "docComment": "/**\n * Font name (e.g. \"Calibri\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getSize:member(1)",
                  "docComment": "/**\n * Font size.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getStrikethrough:member(1)",
                  "docComment": "/**\n * Specifies the strikethrough status of font. A null value indicates that the entire range doesn't have uniform Strikethrough setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStrikethrough(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStrikethrough"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getSubscript:member(1)",
                  "docComment": "/**\n * Specifies the Subscript status of font. Returns True if all the fonts of the range are Subscript. Returns False if all the fonts of the range are Superscript or normal (neither Superscript, nor Subscript). Returns Null otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubscript(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSubscript"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getSuperscript:member(1)",
                  "docComment": "/**\n * Specifies the Superscript status of font. Returns True if all the fonts of the range are Superscript. Returns False if all the fonts of the range are Subscript or normal (neither Superscript, nor Subscript). Returns Null otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSuperscript(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSuperscript"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Font, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire range doesn't have uniform font tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTintAndShade(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#getUnderline:member(1)",
                  "docComment": "/**\n * Type of underline applied to the font. See Excel.RangeUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUnderline(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUnderline"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setBold:member(1)",
                  "docComment": "/**\n * Represents the bold status of font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBold(bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bold",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color. E.g. #FF0000 represents Red.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setItalic:member(1)",
                  "docComment": "/**\n * Specifies the italic status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setItalic(italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "italic",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setName:member(1)",
                  "docComment": "/**\n * Font name (e.g. \"Calibri\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setSize:member(1)",
                  "docComment": "/**\n * Font size.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSize(size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "size",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setStrikethrough:member(1)",
                  "docComment": "/**\n * Specifies the strikethrough status of font. A null value indicates that the entire range doesn't have uniform Strikethrough setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStrikethrough(strikethrough: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "strikethrough",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStrikethrough"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setSubscript:member(1)",
                  "docComment": "/**\n * Specifies the Subscript status of font. Returns True if all the fonts of the range are Subscript. Returns False if all the fonts of the range are Superscript or normal (neither Superscript, nor Subscript). Returns Null otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSubscript(subscript: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "subscript",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSubscript"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setSuperscript:member(1)",
                  "docComment": "/**\n * Specifies the Superscript status of font. Returns True if all the fonts of the range are Superscript. Returns False if all the fonts of the range are Subscript or normal (neither Superscript, nor Subscript). Returns Null otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSuperscript(superscript: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "superscript",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSuperscript"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Font, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire range doesn't have uniform font tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTintAndShade(tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tintAndShade",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFont#setUnderline:member(1)",
                  "docComment": "/**\n * Type of underline applied to the font. See Excel.RangeUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUnderline(underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "underline",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUnderline"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeFormat:interface",
              "docComment": "/**\n * A format object encapsulating the range's font, fill, borders, alignment, and other properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#autofitColumns:member(1)",
                  "docComment": "/**\n * Changes the width of the columns of the current range to achieve the best fit, based on the current data in the columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autofitColumns(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "autofitColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#autofitRows:member(1)",
                  "docComment": "/**\n * Changes the height of the rows of the current range to achieve the best fit, based on the current data in the columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autofitRows(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "autofitRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getAutoIndent:member(1)",
                  "docComment": "/**\n * Specifies if text is automatically indented when text alignment is set to equal distribution.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoIndent(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoIndent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getBorders:member(1)",
                  "docComment": "/**\n * Collection of border objects that apply to the overall range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBorders(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorder",
                      "canonicalReference": "excel!ExcelScript.RangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBorders"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getColumnWidth:member(1)",
                  "docComment": "/**\n * Specifies the width of all colums within the range. If the column widths are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getFill:member(1)",
                  "docComment": "/**\n * Returns the fill object defined on the overall range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFill",
                      "canonicalReference": "excel!ExcelScript.RangeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getFont:member(1)",
                  "docComment": "/**\n * Returns the font object defined on the overall range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFont",
                      "canonicalReference": "excel!ExcelScript.RangeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for the specified object. See Excel.HorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "HorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.HorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getIndentLevel:member(1)",
                  "docComment": "/**\n * An integer from 0 to 250 that indicates the indent level.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIndentLevel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIndentLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getProtection:member(1)",
                  "docComment": "/**\n * Returns the format protection object for a range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProtection(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FormatProtection",
                      "canonicalReference": "excel!ExcelScript.FormatProtection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProtection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getRangeBorder:member(1)",
                  "docComment": "/**\n * Gets a border object using its name.\n *\n * @param index - Index value of the border object to be retrieved. See Excel.BorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBorder(index: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderIndex",
                      "canonicalReference": "excel!ExcelScript.BorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorder",
                      "canonicalReference": "excel!ExcelScript.RangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRangeBorder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getRangeBorderTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire border collections don't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBorderTintAndShade(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeBorderTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getReadingOrder:member(1)",
                  "docComment": "/**\n * The reading order for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadingOrder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadingOrder",
                      "canonicalReference": "excel!ExcelScript.ReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadingOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getRowHeight:member(1)",
                  "docComment": "/**\n * The height of all rows in the range. If the row heights are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getShrinkToFit:member(1)",
                  "docComment": "/**\n * Specifies if text automatically shrinks to fit in the available column width.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShrinkToFit(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShrinkToFit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getTextOrientation:member(1)",
                  "docComment": "/**\n * The text orientation of all the cells within the range. The text orientation should be an integer either from -90 to 90, or 180 for vertically-oriented text. If the orientation within a range are not uniform, then null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextOrientation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getUseStandardHeight:member(1)",
                  "docComment": "/**\n * Determines if the row height of the Range object equals the standard height of the sheet. Returns True if the row height of the Range object equals the standard height of the sheet. Returns Null if the range contains more than one row and the rows aren't all the same height. Returns False otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUseStandardHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUseStandardHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getUseStandardWidth:member(1)",
                  "docComment": "/**\n * Specifies if the column width of the Range object equals the standard width of the sheet. Returns True if the column width of the Range object equals the standard width of the sheet. Returns Null if the range contains more than one column and the columns aren't all the same height. Returns False otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUseStandardWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUseStandardWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment for the specified object. See Excel.VerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "VerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.VerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#getWrapText:member(1)",
                  "docComment": "/**\n * Specifies if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWrapText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWrapText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setAutoIndent:member(1)",
                  "docComment": "/**\n * Specifies if text is automatically indented when text alignment is set to equal distribution.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoIndent(autoIndent: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoIndent",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoIndent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setColumnWidth:member(1)",
                  "docComment": "/**\n * Specifies the width of all colums within the range. If the column widths are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColumnWidth(columnWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "columnWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColumnWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment for the specified object. See Excel.HorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.HorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setIndentLevel:member(1)",
                  "docComment": "/**\n * An integer from 0 to 250 that indicates the indent level.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIndentLevel(indentLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "indentLevel",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIndentLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setRangeBorderTintAndShade:member(1)",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire border collections don't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRangeBorderTintAndShade(rangeBorderTintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rangeBorderTintAndShade",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRangeBorderTintAndShade"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setReadingOrder:member(1)",
                  "docComment": "/**\n * The reading order for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setReadingOrder(readingOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadingOrder",
                      "canonicalReference": "excel!ExcelScript.ReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "readingOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setReadingOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setRowHeight:member(1)",
                  "docComment": "/**\n * The height of all rows in the range. If the row heights are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRowHeight(rowHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowHeight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRowHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setShrinkToFit:member(1)",
                  "docComment": "/**\n * Specifies if text automatically shrinks to fit in the available column width.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShrinkToFit(shrinkToFit: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shrinkToFit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShrinkToFit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setTextOrientation:member(1)",
                  "docComment": "/**\n * The text orientation of all the cells within the range. The text orientation should be an integer either from -90 to 90, or 180 for vertically-oriented text. If the orientation within a range are not uniform, then null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTextOrientation(textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "textOrientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTextOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setUseStandardHeight:member(1)",
                  "docComment": "/**\n * Determines if the row height of the Range object equals the standard height of the sheet. Returns True if the row height of the Range object equals the standard height of the sheet. Returns Null if the range contains more than one row and the rows aren't all the same height. Returns False otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUseStandardHeight(useStandardHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "useStandardHeight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUseStandardHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setUseStandardWidth:member(1)",
                  "docComment": "/**\n * Specifies if the column width of the Range object equals the standard width of the sheet. Returns True if the column width of the Range object equals the standard width of the sheet. Returns Null if the range contains more than one column and the columns aren't all the same height. Returns False otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUseStandardWidth(useStandardWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "useStandardWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUseStandardWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment for the specified object. See Excel.VerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "VerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.VerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeFormat#setWrapText:member(1)",
                  "docComment": "/**\n * Specifies if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWrapText(wrapText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "wrapText",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWrapText"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeHyperlink:interface",
              "docComment": "/**\n * Represents the necessary strings to get/set a hyperlink (XHL) object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeHyperlink "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeHyperlink",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.RangeHyperlink#address:member",
                  "docComment": "/**\n * Represents the url target for the hyperlink.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "address?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "address",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.RangeHyperlink#documentReference:member",
                  "docComment": "/**\n * Represents the document reference target for the hyperlink.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "documentReference?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "documentReference",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.RangeHyperlink#screenTip:member",
                  "docComment": "/**\n * Represents the string displayed when hovering over the hyperlink.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "screenTip?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "screenTip",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.RangeHyperlink#textToDisplay:member",
                  "docComment": "/**\n * Represents the string that is displayed in the top left most cell in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textToDisplay?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textToDisplay",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeReference:interface",
              "docComment": "/**\n * Represents a string reference of the form SheetName!A1:B5, or a global or local named range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeReference "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeReference",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.RangeReference#address:member",
                  "docComment": "/**\n * The address of the range; for example 'SheetName!A1:B5'.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "address: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "address",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeSort:interface",
              "docComment": "/**\n * Manages sorting operations on Range objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeSort "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeSort",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeSort#apply:member(1)",
                  "docComment": "/**\n * Perform a sort operation.\n *\n * @param fields - The list of conditions to sort on.\n *\n * @param matchCase - Optional. Whether to have the casing impact string ordering.\n *\n * @param hasHeaders - Optional. Whether the range has a header.\n *\n * @param orientation - Optional. Whether the operation is sorting rows or columns.\n *\n * @param method - Optional. The ordering method used for Chinese characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(\n            fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortField",
                      "canonicalReference": "excel!ExcelScript.SortField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            hasHeaders?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            orientation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortOrientation",
                      "canonicalReference": "excel!ExcelScript.SortOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            method?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortMethod",
                      "canonicalReference": "excel!ExcelScript.SortMethod:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fields",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "matchCase",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "hasHeaders",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "orientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "method",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 12
                      }
                    }
                  ],
                  "name": "apply"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum RangeUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle.doubleAccountant:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doubleAccountant"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doubleAccountant",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeUnderlineStyle.singleAccountant:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "singleAccountant"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "singleAccountant",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.RangeValueType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum RangeValueType "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeValueType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.boolean:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boolean"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boolean",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.empty:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "empty"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "empty",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.error:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "error"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "error",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.integer:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "integer"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "integer",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.richValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "richValue"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "richValue",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.string:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "string",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.RangeValueType.unknown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RangeView:interface",
              "docComment": "/**\n * RangeView represents a set of visible cells of the parent range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeView "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeView",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getCellAddresses:member(1)",
                  "docComment": "/**\n * Represents the cell addresses of the RangeView.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCellAddresses(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCellAddresses"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getColumnCount:member(1)",
                  "docComment": "/**\n * The number of visible columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getFormulas:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulas(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getFormulasLocal:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulasLocal(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulasLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getFormulasR1C1:member(1)",
                  "docComment": "/**\n * Represents the formula in R1C1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormulasR1C1(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormulasR1C1"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getIndex:member(1)",
                  "docComment": "/**\n * Returns a value that represents the index of the RangeView.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIndex(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getNumberFormat:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNumberFormat(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getRange:member(1)",
                  "docComment": "/**\n * Gets the parent range associated with the current RangeView.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getRowCount:member(1)",
                  "docComment": "/**\n * The number of visible rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getRows:member(1)",
                  "docComment": "/**\n * Represents a collection of range views associated with the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRows(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeView",
                      "canonicalReference": "excel!ExcelScript.RangeView:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getText:member(1)",
                  "docComment": "/**\n * Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getValues:member(1)",
                  "docComment": "/**\n * Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValues(): "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | number | boolean)[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValues"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#getValueTypes:member(1)",
                  "docComment": "/**\n * Represents the type of data of each cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValueTypes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!ExcelScript.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValueTypes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#setFormulas:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulas(formulas: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulas",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#setFormulasLocal:member(1)",
                  "docComment": "/**\n * Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulasLocal(formulasLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulasLocal",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulasLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#setFormulasR1C1:member(1)",
                  "docComment": "/**\n * Represents the formula in R1C1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormulasR1C1(formulasR1C1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formulasR1C1",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormulasR1C1"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#setNumberFormat:member(1)",
                  "docComment": "/**\n * Represents Excel's number format code for the given cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNumberFormat(numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numberFormat",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setNumberFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RangeView#setValues:member(1)",
                  "docComment": "/**\n * Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValues(values: "
                    },
                    {
                      "kind": "Content",
                      "text": "(string | number | boolean)[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValues"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ReadingOrder:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ReadingOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "ReadingOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ReadingOrder.context:member",
                  "docComment": "/**\n * Reading order is determined by the language of the first character entered. If a right-to-left language character is entered first, reading order is right to left. If a left-to-right language character is entered first, reading order is left to right.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "context"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "context",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ReadingOrder.leftToRight:member",
                  "docComment": "/**\n * Left to right reading order\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftToRight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftToRight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ReadingOrder.rightToLeft:member",
                  "docComment": "/**\n * Right to left reading order\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightToLeft"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightToLeft",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RemoveDuplicatesResult:interface",
              "docComment": "/**\n * Represents the results from the removeDuplicates method on range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RemoveDuplicatesResult "
                }
              ],
              "releaseTag": "Public",
              "name": "RemoveDuplicatesResult",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RemoveDuplicatesResult#getRemoved:member(1)",
                  "docComment": "/**\n * Number of duplicated rows removed by the operation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRemoved(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRemoved"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RemoveDuplicatesResult#getUniqueRemaining:member(1)",
                  "docComment": "/**\n * Number of remaining unique rows present in the resulting range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUniqueRemaining(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUniqueRemaining"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ReplaceCriteria:interface",
              "docComment": "/**\n * Represents the replace criteria to be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ReplaceCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "ReplaceCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ReplaceCriteria#completeMatch:member",
                  "docComment": "/**\n * Specifies if the match needs to be complete or partial. A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`). Default is false (partial).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "completeMatch?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "completeMatch",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ReplaceCriteria#matchCase:member",
                  "docComment": "/**\n * Specifies if the match is case sensitive. Default is false (insensitive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel RowColumnPivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RowColumnPivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "RowColumnPivotHierarchy",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#getFields:member(1)",
                  "docComment": "/**\n * Returns the PivotFields associated with the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFields(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFields"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#getId:member(1)",
                  "docComment": "/**\n * Id of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#getName:member(1)",
                  "docComment": "/**\n * Name of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#getPivotField:member(1)",
                  "docComment": "/**\n * Gets a PivotField by name. If the PivotField does not exist, will return a null object.\n *\n * @param name - Name of the PivotField to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotField(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotField"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#getPosition:member(1)",
                  "docComment": "/**\n * Position of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#setName:member(1)",
                  "docComment": "/**\n * Name of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#setPosition:member(1)",
                  "docComment": "/**\n * Position of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.RowColumnPivotHierarchy#setToDefault:member(1)",
                  "docComment": "/**\n * Reset the RowColumnPivotHierarchy back to its default values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setToDefault(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setToDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Function",
              "canonicalReference": "excel!ExcelScript.run:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export function run(\n        callback: "
                },
                {
                  "kind": "Content",
                  "text": "(workbook: "
                },
                {
                  "kind": "Reference",
                  "text": "Workbook",
                  "canonicalReference": "excel!ExcelScript.Workbook:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>\n    "
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ],
              "name": "run"
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.SearchCriteria:interface",
              "docComment": "/**\n * Represents the search criteria to be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SearchCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "SearchCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SearchCriteria#completeMatch:member",
                  "docComment": "/**\n * Specifies if the match needs to be complete or partial. A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`). Default is false (partial).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "completeMatch?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "completeMatch",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SearchCriteria#matchCase:member",
                  "docComment": "/**\n * Specifies if the match is case sensitive. Default is false (insensitive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SearchCriteria#searchDirection:member",
                  "docComment": "/**\n * Specifies the search direction. Default is forward. See Excel.SearchDirection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "searchDirection?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SearchDirection",
                      "canonicalReference": "excel!ExcelScript.SearchDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "searchDirection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SearchDirection:enum",
              "docComment": "/**\n * Specifies the search direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SearchDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "SearchDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SearchDirection.backwards:member",
                  "docComment": "/**\n * Search in reverse order.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "backwards"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "backwards",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SearchDirection.forward:member",
                  "docComment": "/**\n * Search in forward order.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "forward"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "forward",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Setting:interface",
              "docComment": "/**\n * Setting represents a key-value pair of a setting persisted to the document (per file per add-in). These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in. Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Setting "
                }
              ],
              "releaseTag": "Public",
              "name": "Setting",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Setting#delete:member(1)",
                  "docComment": "/**\n * Deletes the setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Setting#getKey:member(1)",
                  "docComment": "/**\n * The key that represents the id of the Setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getKey(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Setting#getValue:member(1)",
                  "docComment": "/**\n * Represents the value stored for this setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getValue(): "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getValue"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Setting#setValue:member(1)",
                  "docComment": "/**\n * Represents the value stored for this setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValue(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValue"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Shape:interface",
              "docComment": "/**\n * Represents a generic shape object in the worksheet. A shape could be a geometric shape, a line, a group of shapes, etc. To learn more about the shape object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes | Work with shapes using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Shape "
                }
              ],
              "releaseTag": "Public",
              "name": "Shape",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#copyTo:member(1)",
                  "docComment": "/**\n * Copies and pastes a Shape object. The pasted shape is copied to the same pixel location as this shape.\n *\n * @param destinationSheet - The sheet to which the shape object will be pasted. The default value is the copied Shape's worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copyTo(destinationSheet?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destinationSheet",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "copyTo"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#delete:member(1)",
                  "docComment": "/**\n * Removes the shape from the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getAltTextDescription:member(1)",
                  "docComment": "/**\n * Specifies the alternative description text for a Shape object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAltTextDescription(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAltTextDescription"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getAltTextTitle:member(1)",
                  "docComment": "/**\n * Specifies the alternative title text for a Shape object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAltTextTitle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAltTextTitle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getAsImage:member(1)",
                  "docComment": "/**\n * Converts the shape to an image and returns the image as a base64-encoded string. The DPI is 96. The only supported formats are `Excel.PictureFormat.BMP`, `Excel.PictureFormat.PNG`, `Excel.PictureFormat.JPEG`, and `Excel.PictureFormat.GIF`.\n *\n * @param format - Specifies the format of the image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsImage(format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PictureFormat",
                      "canonicalReference": "excel!ExcelScript.PictureFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "format",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getAsImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getConnectionSiteCount:member(1)",
                  "docComment": "/**\n * Returns the number of connection sites on this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConnectionSiteCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getConnectionSiteCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getFill:member(1)",
                  "docComment": "/**\n * Returns the fill formatting of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFill(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFill",
                      "canonicalReference": "excel!ExcelScript.ShapeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getGeometricShape:member(1)",
                  "docComment": "/**\n * Returns the geometric shape associated with the shape. An error will be thrown if the shape type is not \"GeometricShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGeometricShape(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShape",
                      "canonicalReference": "excel!ExcelScript.GeometricShape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGeometricShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getGeometricShapeType:member(1)",
                  "docComment": "/**\n * Specifies the geometric shape type of this geometric shape. See Excel.GeometricShapeType for details. Returns null if the shape type is not \"GeometricShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGeometricShapeType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShapeType",
                      "canonicalReference": "excel!ExcelScript.GeometricShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGeometricShapeType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getGroup:member(1)",
                  "docComment": "/**\n * Returns the shape group associated with the shape. An error will be thrown if the shape type is not \"GroupShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGroup(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeGroup",
                      "canonicalReference": "excel!ExcelScript.ShapeGroup:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getGroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the shape. Throws an invalid argument exception when set with a negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getId:member(1)",
                  "docComment": "/**\n * Specifies the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getImage:member(1)",
                  "docComment": "/**\n * Returns the image associated with the shape. An error will be thrown if the shape type is not \"Image\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getImage(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Image",
                      "canonicalReference": "excel!ExcelScript.Image:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getLeft:member(1)",
                  "docComment": "/**\n * The distance, in points, from the left side of the shape to the left side of the worksheet. Throws an invalid argument exception when set with a negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getLevel:member(1)",
                  "docComment": "/**\n * Specifies the level of the specified shape. For example, a level of 0 means that the shape is not part of any groups, a level of 1 means the shape is part of a top-level group, and a level of 2 means the shape is part of a sub-group of the top level.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLevel(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLevel"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getLine:member(1)",
                  "docComment": "/**\n * Returns the line associated with the shape. An error will be thrown if the shape type is not \"Line\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLine(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Line",
                      "canonicalReference": "excel!ExcelScript.Line:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLine"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getLineFormat:member(1)",
                  "docComment": "/**\n * Returns the line formatting of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLineFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineFormat",
                      "canonicalReference": "excel!ExcelScript.ShapeLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLineFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getLockAspectRatio:member(1)",
                  "docComment": "/**\n * Specifies if the aspect ratio of this shape is locked.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLockAspectRatio(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLockAspectRatio"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getName:member(1)",
                  "docComment": "/**\n * Specifies the name of the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getPlacement:member(1)",
                  "docComment": "/**\n * Represents how the object is attached to the cells below it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPlacement(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Placement",
                      "canonicalReference": "excel!ExcelScript.Placement:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPlacement"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getRotation:member(1)",
                  "docComment": "/**\n * Specifies the rotation, in degrees, of the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRotation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRotation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getTextFrame:member(1)",
                  "docComment": "/**\n * Returns the text frame object of this shape. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextFrame(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextFrame",
                      "canonicalReference": "excel!ExcelScript.TextFrame:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextFrame"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getTop:member(1)",
                  "docComment": "/**\n * The distance, in points, from the top edge of the shape to the top edge of the worksheet. Throws an invalid argument exception when set with a negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getType:member(1)",
                  "docComment": "/**\n * Returns the type of this shape. See Excel.ShapeType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeType",
                      "canonicalReference": "excel!ExcelScript.ShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the shape is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the shape. Throws an invalid argument exception when set with a negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#getZOrderPosition:member(1)",
                  "docComment": "/**\n * Returns the position of the specified shape in the z-order, with 0 representing the bottom of the order stack.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getZOrderPosition(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getZOrderPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#incrementLeft:member(1)",
                  "docComment": "/**\n * Moves the shape horizontally by the specified number of points.\n *\n * @param increment - The increment, in points, the shape will be horizontally moved. A positive value moves the shape to the right and a negative value moves it to the left. If the sheet is right-to-left oriented, this is reversed: positive values will move the shape to the left and negative values will move it to the right.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "incrementLeft(increment: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "increment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "incrementLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#incrementRotation:member(1)",
                  "docComment": "/**\n * Rotates the shape clockwise around the z-axis by the specified number of degrees. Use the `rotation` property to set the absolute rotation of the shape.\n *\n * @param increment - How many degrees the shape will be rotated. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "incrementRotation(increment: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "increment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "incrementRotation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#incrementTop:member(1)",
                  "docComment": "/**\n * Moves the shape vertically by the specified number of points.\n *\n * @param increment - The increment, in points, the shape will be vertically moved. in points. A positive value moves the shape down and a negative value moves it up.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "incrementTop(increment: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "increment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "incrementTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#scaleHeight:member(1)",
                  "docComment": "/**\n * Scales the height of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.\n *\n * @param scaleFactor - Specifies the ratio between the height of the shape after you resize it and the current or original height.\n *\n * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\n *\n * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its position.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleHeight(\n            scaleFactor: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleType",
                      "canonicalReference": "excel!ExcelScript.ShapeScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleFrom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleFrom",
                      "canonicalReference": "excel!ExcelScript.ShapeScaleFrom:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "scaleFactor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "scaleType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "scaleFrom",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "scaleHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#scaleWidth:member(1)",
                  "docComment": "/**\n * Scales the width of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current width.\n *\n * @param scaleFactor - Specifies the ratio between the width of the shape after you resize it and the current or original width.\n *\n * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\n *\n * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its position.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleWidth(\n            scaleFactor: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleType",
                      "canonicalReference": "excel!ExcelScript.ShapeScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleFrom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleFrom",
                      "canonicalReference": "excel!ExcelScript.ShapeScaleFrom:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "scaleFactor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "scaleType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "scaleFrom",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "scaleWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setAltTextDescription:member(1)",
                  "docComment": "/**\n * Specifies the alternative description text for a Shape object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAltTextDescription(altTextDescription: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "altTextDescription",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAltTextDescription"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setAltTextTitle:member(1)",
                  "docComment": "/**\n * Specifies the alternative title text for a Shape object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAltTextTitle(altTextTitle: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "altTextTitle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAltTextTitle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setGeometricShapeType:member(1)",
                  "docComment": "/**\n * Specifies the geometric shape type of this geometric shape. See Excel.GeometricShapeType for details. Returns null if the shape type is not \"GeometricShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGeometricShapeType(geometricShapeType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShapeType",
                      "canonicalReference": "excel!ExcelScript.GeometricShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "geometricShapeType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setGeometricShapeType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setHeight:member(1)",
                  "docComment": "/**\n * Specifies the height, in points, of the shape. Throws an invalid argument exception when set with a negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHeight(height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setLeft:member(1)",
                  "docComment": "/**\n * The distance, in points, from the left side of the shape to the left side of the worksheet. Throws an invalid argument exception when set with a negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setLockAspectRatio:member(1)",
                  "docComment": "/**\n * Specifies if the aspect ratio of this shape is locked.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLockAspectRatio(lockAspectRatio: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "lockAspectRatio",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLockAspectRatio"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setName:member(1)",
                  "docComment": "/**\n * Specifies the name of the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setPlacement:member(1)",
                  "docComment": "/**\n * Represents how the object is attached to the cells below it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPlacement(placement: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Placement",
                      "canonicalReference": "excel!ExcelScript.Placement:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "placement",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPlacement"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setRotation:member(1)",
                  "docComment": "/**\n * Specifies the rotation, in degrees, of the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRotation(rotation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rotation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRotation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setTop:member(1)",
                  "docComment": "/**\n * The distance, in points, from the top edge of the shape to the top edge of the worksheet. Throws an invalid argument exception when set with a negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the shape is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setWidth:member(1)",
                  "docComment": "/**\n * Specifies the width, in points, of the shape. Throws an invalid argument exception when set with a negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWidth(width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Shape#setZOrder:member(1)",
                  "docComment": "/**\n * Moves the specified shape up or down the collection's z-order, which shifts it in front of or behind other shapes.\n *\n * @param position - Where to move the shape in the z-order stack relative to the other shapes. See Excel.ShapeZOrder for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setZOrder(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeZOrder",
                      "canonicalReference": "excel!ExcelScript.ShapeZOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setZOrder"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeAutoSize:enum",
              "docComment": "/**\n * Determines the type of automatic sizing allowed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeAutoSize "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeAutoSize",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeAutoSize.autoSizeMixed:member",
                  "docComment": "/**\n * A combination of automatic sizing schemes are used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeMixed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeMixed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeAutoSize.autoSizeNone:member",
                  "docComment": "/**\n * No autosizing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeNone"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeNone",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeAutoSize.autoSizeShapeToFitText:member",
                  "docComment": "/**\n * The shape is adjusted to fit the text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeShapeToFitText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeShapeToFitText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeAutoSize.autoSizeTextToFitShape:member",
                  "docComment": "/**\n * The text is adjusted to fit the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeTextToFitShape"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeTextToFitShape",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ShapeFill:interface",
              "docComment": "/**\n * Represents the fill formatting of a shape object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeFill "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#clear:member(1)",
                  "docComment": "/**\n * Clears the fill formatting of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#getForegroundColor:member(1)",
                  "docComment": "/**\n * Represents the shape fill foreground color in HTML color format, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getForegroundColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getForegroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#getTransparency:member(1)",
                  "docComment": "/**\n * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns null if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTransparency(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTransparency"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#getType:member(1)",
                  "docComment": "/**\n * Returns the fill type of the shape. See Excel.ShapeFillType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFillType",
                      "canonicalReference": "excel!ExcelScript.ShapeFillType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#setForegroundColor:member(1)",
                  "docComment": "/**\n * Represents the shape fill foreground color in HTML color format, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setForegroundColor(foregroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "foregroundColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setForegroundColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#setSolidColor:member(1)",
                  "docComment": "/**\n * Sets the fill formatting of the shape to a uniform color. This changes the fill type to \"Solid\".\n *\n * @param color - A string that represents the fill color in HTML color format, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSolidColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSolidColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFill#setTransparency:member(1)",
                  "docComment": "/**\n * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns null if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTransparency(transparency: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "transparency",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTransparency"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeFillType:enum",
              "docComment": "/**\n * Specifies a shape's fill type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeFillType "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFillType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFillType.gradient:member",
                  "docComment": "/**\n * Gradient fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradient"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradient",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFillType.mixed:member",
                  "docComment": "/**\n * Mixed fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mixed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mixed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFillType.noFill:member",
                  "docComment": "/**\n * No fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noFill"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "noFill",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFillType.pattern:member",
                  "docComment": "/**\n * Pattern fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFillType.pictureAndTexture:member",
                  "docComment": "/**\n * Picture and texture fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pictureAndTexture"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pictureAndTexture",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFillType.solid:member",
                  "docComment": "/**\n * Solid fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "solid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "solid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ShapeFont:interface",
              "docComment": "/**\n * Represents the font attributes, such as font name, font size, and color, for a shape's TextRange object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeFont "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFont",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#getBold:member(1)",
                  "docComment": "/**\n * Represents the bold status of font. Returns null the TextRange includes both bold and non-bold text fragments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBold(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#getColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color (e.g. \"#FF0000\" represents red). Returns null if the TextRange includes text fragments with different colors.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#getItalic:member(1)",
                  "docComment": "/**\n * Represents the italic status of font. Returns null if the TextRange includes both italic and non-italic text fragments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItalic(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#getName:member(1)",
                  "docComment": "/**\n * Represents font name (e.g. \"Calibri\"). If the text is Complex Script or East Asian language, this is the corresponding font name; otherwise it is the Latin font name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#getSize:member(1)",
                  "docComment": "/**\n * Represents font size in points (e.g. 11). Returns null if the TextRange includes text fragments with different font sizes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSize(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#getUnderline:member(1)",
                  "docComment": "/**\n * Type of underline applied to the font. Returns null if the TextRange includes text fragments with different underline styles. See Excel.ShapeFontUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUnderline(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFontUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUnderline"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#setBold:member(1)",
                  "docComment": "/**\n * Represents the bold status of font. Returns null the TextRange includes both bold and non-bold text fragments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBold(bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bold",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBold"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#setColor:member(1)",
                  "docComment": "/**\n * HTML color code representation of the text color (e.g. \"#FF0000\" represents red). Returns null if the TextRange includes text fragments with different colors.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#setItalic:member(1)",
                  "docComment": "/**\n * Represents the italic status of font. Returns null if the TextRange includes both italic and non-italic text fragments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setItalic(italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "italic",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setItalic"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#setName:member(1)",
                  "docComment": "/**\n * Represents font name (e.g. \"Calibri\"). If the text is Complex Script or East Asian language, this is the corresponding font name; otherwise it is the Latin font name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#setSize:member(1)",
                  "docComment": "/**\n * Represents font size in points (e.g. 11). Returns null if the TextRange includes text fragments with different font sizes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSize(size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "size",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSize"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeFont#setUnderline:member(1)",
                  "docComment": "/**\n * Type of underline applied to the font. Returns null if the TextRange includes text fragments with different underline styles. See Excel.ShapeFontUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUnderline(underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFontUnderlineStyle",
                      "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "underline",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUnderline"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle:enum",
              "docComment": "/**\n * The type of underline applied to a font.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeFontUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFontUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dashHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashHeavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashHeavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dashLong:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashLong"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashLong",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dashLongHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashLongHeavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashLongHeavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dotDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dotDashHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDashHeavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDashHeavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dotDotDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDotDash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDotDash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dotDotDashHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDotDashHeavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDotDashHeavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dotted:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotted"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotted",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.dottedHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dottedHeavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dottedHeavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.heavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.wavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.wavyDouble:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wavyDouble"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wavyDouble",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeFontUnderlineStyle.wavyHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wavyHeavy"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wavyHeavy",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ShapeGroup:interface",
              "docComment": "/**\n * Represents a shape group inside a worksheet. To get the corresponding Shape object, use `ShapeGroup.shape`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeGroup "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeGroup",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeGroup#getId:member(1)",
                  "docComment": "/**\n * Specifies the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeGroup#getShape:member(1)",
                  "docComment": "/**\n * Gets a shape using its Name or ID.\n *\n * @param key - The Name or ID of the shape to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShape(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeGroup#getShapes:member(1)",
                  "docComment": "/**\n * Returns the collection of Shape objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShapes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShapes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeGroup#ungroup:member(1)",
                  "docComment": "/**\n * Ungroups any grouped shapes in the specified shape group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ungroup(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "ungroup"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle:enum",
              "docComment": "/**\n * The dash style for a line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeLineDashStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeLineDashStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.longDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "longDash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "longDash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.longDashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "longDashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "longDashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.longDashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "longDashDotDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "longDashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.roundDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.solid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "solid"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "solid",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.squareDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "squareDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "squareDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.systemDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "systemDash"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "systemDash",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.systemDashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "systemDashDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "systemDashDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle.systemDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "systemDot"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "systemDot",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ShapeLineFormat:interface",
              "docComment": "/**\n * Represents the line formatting for the shape object. For images and geometric shapes, line formatting represents the border of the shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeLineFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeLineFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#getColor:member(1)",
                  "docComment": "/**\n * Represents the line color in HTML color format, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#getDashStyle:member(1)",
                  "docComment": "/**\n * Represents the line style of the shape. Returns null when the line is not visible or there are inconsistent dash styles. See Excel.ShapeLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDashStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineDashStyle",
                      "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDashStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#getStyle:member(1)",
                  "docComment": "/**\n * Represents the line style of the shape. Returns null when the line is not visible or there are inconsistent styles. See Excel.ShapeLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineStyle",
                      "canonicalReference": "excel!ExcelScript.ShapeLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#getTransparency:member(1)",
                  "docComment": "/**\n * Represents the degree of transparency of the specified line as a value from 0.0 (opaque) through 1.0 (clear). Returns null when the shape has inconsistent transparencies.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTransparency(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTransparency"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#getVisible:member(1)",
                  "docComment": "/**\n * Specifies if the line formatting of a shape element is visible. Returns null when the shape has inconsistent visibilities.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisible(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#getWeight:member(1)",
                  "docComment": "/**\n * Represents the weight of the line, in points. Returns null when the line is not visible or there are inconsistent line weights.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#setColor:member(1)",
                  "docComment": "/**\n * Represents the line color in HTML color format, of the form #RRGGBB (e.g. \"FFA500\") or as a named HTML color (e.g. \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#setDashStyle:member(1)",
                  "docComment": "/**\n * Represents the line style of the shape. Returns null when the line is not visible or there are inconsistent dash styles. See Excel.ShapeLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDashStyle(dashStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineDashStyle",
                      "canonicalReference": "excel!ExcelScript.ShapeLineDashStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "dashStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setDashStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#setStyle:member(1)",
                  "docComment": "/**\n * Represents the line style of the shape. Returns null when the line is not visible or there are inconsistent styles. See Excel.ShapeLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStyle(style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineStyle",
                      "canonicalReference": "excel!ExcelScript.ShapeLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "style",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#setTransparency:member(1)",
                  "docComment": "/**\n * Represents the degree of transparency of the specified line as a value from 0.0 (opaque) through 1.0 (clear). Returns null when the shape has inconsistent transparencies.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTransparency(transparency: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "transparency",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTransparency"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#setVisible:member(1)",
                  "docComment": "/**\n * Specifies if the line formatting of a shape element is visible. Returns null when the shape has inconsistent visibilities.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisible(visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visible",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisible"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.ShapeLineFormat#setWeight:member(1)",
                  "docComment": "/**\n * Represents the weight of the line, in points. Returns null when the line is not visible or there are inconsistent line weights.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWeight(weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "weight",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWeight"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeLineStyle:enum",
              "docComment": "/**\n * The style for a line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineStyle.single:member",
                  "docComment": "/**\n * Single line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineStyle.thickBetweenThin:member",
                  "docComment": "/**\n * Thick line with a thin line on each side.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thickBetweenThin"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thickBetweenThin",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineStyle.thickThin:member",
                  "docComment": "/**\n * Thick line next to thin line. For horizontal lines, the thick line is above the thin line. For vertical lines, the thick line is to the left of the thin line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thickThin"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thickThin",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineStyle.thinThick:member",
                  "docComment": "/**\n * Thick line next to thin line. For horizontal lines, the thick line is below the thin line. For vertical lines, the thick line is to the right of the thin line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thinThick"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thinThick",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeLineStyle.thinThin:member",
                  "docComment": "/**\n * Two thin lines.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thinThin"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thinThin",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeScaleFrom:enum",
              "docComment": "/**\n * Specifies which part of the shape retains its position when the shape is scaled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeScaleFrom "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeScaleFrom",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeScaleFrom.scaleFromBottomRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleFromBottomRight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleFromBottomRight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeScaleFrom.scaleFromMiddle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleFromMiddle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleFromMiddle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeScaleFrom.scaleFromTopLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleFromTopLeft"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleFromTopLeft",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeScaleType:enum",
              "docComment": "/**\n * Specifies whether the shape is scaled relative to its original or current size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeScaleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeScaleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeScaleType.currentSize:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "currentSize"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "currentSize",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeScaleType.originalSize:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "originalSize"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "originalSize",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment:enum",
              "docComment": "/**\n * Specifies the horizontal alignment for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextHorizontalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextHorizontalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.justifyLow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justifyLow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justifyLow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment.thaiDistributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thaiDistributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thaiDistributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalOverflow:enum",
              "docComment": "/**\n * Specifies the horizontal overflow for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextHorizontalOverflow "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextHorizontalOverflow",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalOverflow.clip:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clip"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "clip",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalOverflow.overflow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overflow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overflow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeTextOrientation:enum",
              "docComment": "/**\n * Specifies the orientation for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextOrientation "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextOrientation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.eastAsianVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "eastAsianVertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "eastAsianVertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.horizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.mongolianVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mongolianVertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mongolianVertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.vertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.vertical270:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical270"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical270",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.wordArtVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wordArtVertical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wordArtVertical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextOrientation.wordArtVerticalRTL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wordArtVerticalRTL"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wordArtVerticalRTL",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeTextReadingOrder:enum",
              "docComment": "/**\n * Specifies the reading order for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextReadingOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextReadingOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextReadingOrder.leftToRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftToRight"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftToRight",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextReadingOrder.rightToLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightToLeft"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightToLeft",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment:enum",
              "docComment": "/**\n * Specifies the vertical alignment for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextVerticalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextVerticalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment.justified:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justified"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justified",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment.middle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "middle"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "middle",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeTextVerticalOverflow:enum",
              "docComment": "/**\n * Specifies the vertical overflow for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextVerticalOverflow "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextVerticalOverflow",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalOverflow.clip:member",
                  "docComment": "/**\n * Hide text that does not fit vertically within the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clip"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "clip",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalOverflow.ellipsis:member",
                  "docComment": "/**\n * Hide text that does not fit vertically within the text frame, and add an ellipsis (...) at the end of the visible text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipsis"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipsis",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeTextVerticalOverflow.overflow:member",
                  "docComment": "/**\n * Allow text to overflow the text frame vertically (can be from the top, bottom, or both depending on the text alignment).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overflow"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overflow",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeType:enum",
              "docComment": "/**\n * Specifies the type of a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeType "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeType.geometricShape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "geometricShape"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "geometricShape",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeType.group:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "group"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "group",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeType.image:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "image"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "image",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeType.line:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "line"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeType.unsupported:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unsupported"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unsupported",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShapeZOrder:enum",
              "docComment": "/**\n * Specifies where in the z-order a shape should be moved relative to other shapes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeZOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeZOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeZOrder.bringForward:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bringForward"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bringForward",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeZOrder.bringToFront:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bringToFront"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bringToFront",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeZOrder.sendBackward:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sendBackward"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sendBackward",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShapeZOrder.sendToBack:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sendToBack"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sendToBack",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SheetVisibility:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SheetVisibility "
                }
              ],
              "releaseTag": "Public",
              "name": "SheetVisibility",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SheetVisibility.hidden:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hidden"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hidden",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SheetVisibility.veryHidden:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "veryHidden"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "veryHidden",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SheetVisibility.visible:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.ShowAsCalculation:enum",
              "docComment": "/**\n * The ShowAs Calculation function for the Data Pivot Field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShowAsCalculation "
                }
              ],
              "releaseTag": "Public",
              "name": "ShowAsCalculation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.differenceFrom:member",
                  "docComment": "/**\n * Difference from the specified Base Field and Base Item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "differenceFrom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "differenceFrom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.index:member",
                  "docComment": "/**\n * Calculates the values as follows: ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "index"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.none:member",
                  "docComment": "/**\n * No calculation is applied.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentDifferenceFrom:member",
                  "docComment": "/**\n * Difference from the specified Base Field and Base Item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentDifferenceFrom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentDifferenceFrom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOf:member",
                  "docComment": "/**\n * Percent of the specified Base Field and Base Item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOf"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOf",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOfColumnTotal:member",
                  "docComment": "/**\n * Percent of the column total.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfColumnTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfColumnTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOfGrandTotal:member",
                  "docComment": "/**\n * Percent of the grand total.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfGrandTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfGrandTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOfParentColumnTotal:member",
                  "docComment": "/**\n * Percent of the column total for the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfParentColumnTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfParentColumnTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOfParentRowTotal:member",
                  "docComment": "/**\n * Percent of the row total for the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfParentRowTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfParentRowTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOfParentTotal:member",
                  "docComment": "/**\n * Percent of the grand total for the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfParentTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfParentTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentOfRowTotal:member",
                  "docComment": "/**\n * Percent of the row total.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfRowTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfRowTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.percentRunningTotal:member",
                  "docComment": "/**\n * Percent Running Total of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentRunningTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentRunningTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.rankAscending:member",
                  "docComment": "/**\n * Ascending Rank of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rankAscending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rankAscending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.rankDecending:member",
                  "docComment": "/**\n * Descending Rank of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rankDecending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rankDecending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.runningTotal:member",
                  "docComment": "/**\n * Running Total of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "runningTotal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "runningTotal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.ShowAsCalculation.unknown:member",
                  "docComment": "/**\n * Calculation is unknown or unsupported.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.ShowAsRule:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShowAsRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ShowAsRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ShowAsRule#baseField:member",
                  "docComment": "/**\n * The base PivotField to base the ShowAs calculation, if applicable based on the ShowAsCalculation type, else null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "baseField?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "baseField",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ShowAsRule#baseItem:member",
                  "docComment": "/**\n * The base Item to base the ShowAs calculation on, if applicable based on the ShowAsCalculation type, else null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "baseItem?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!ExcelScript.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "baseItem",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.ShowAsRule#calculation:member",
                  "docComment": "/**\n * The ShowAs Calculation to use for the Data PivotField. See Excel.ShowAsCalculation for Details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShowAsCalculation",
                      "canonicalReference": "excel!ExcelScript.ShowAsCalculation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Slicer:interface",
              "docComment": "/**\n * Represents a slicer object in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Slicer "
                }
              ],
              "releaseTag": "Public",
              "name": "Slicer",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#clearFilters:member(1)",
                  "docComment": "/**\n * Clears all the filters currently applied on the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearFilters(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearFilters"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#delete:member(1)",
                  "docComment": "/**\n * Deletes the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getCaption:member(1)",
                  "docComment": "/**\n * Represents the caption of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCaption(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCaption"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getHeight:member(1)",
                  "docComment": "/**\n * Represents the height, in points, of the slicer. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getId:member(1)",
                  "docComment": "/**\n * Represents the unique id of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getIsFilterCleared:member(1)",
                  "docComment": "/**\n * True if all filters currently applied on the slicer are cleared.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsFilterCleared(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsFilterCleared"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getLeft:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeft(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getName:member(1)",
                  "docComment": "/**\n * Represents the name of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getSelectedItems:member(1)",
                  "docComment": "/**\n * Returns an array of selected items' keys.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedItems(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getSlicerItem:member(1)",
                  "docComment": "/**\n * Gets a slicer item using its key or name. If the slicer item does not exist, will return a null object.\n *\n * @param key - Key or name of the slicer to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicerItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerItem",
                      "canonicalReference": "excel!ExcelScript.SlicerItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getSlicerItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getSlicerItems:member(1)",
                  "docComment": "/**\n * Represents the collection of SlicerItems that are part of the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicerItems(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerItem",
                      "canonicalReference": "excel!ExcelScript.SlicerItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSlicerItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getSortBy:member(1)",
                  "docComment": "/**\n * Represents the sort order of the items in the slicer. Possible values are: \"DataSourceOrder\", \"Ascending\", \"Descending\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSortBy(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerSortType",
                      "canonicalReference": "excel!ExcelScript.SlicerSortType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSortBy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getStyle:member(1)",
                  "docComment": "/**\n * Constant value that represents the Slicer style. Possible values are: \"SlicerStyleLight1\" through \"SlicerStyleLight6\", \"TableStyleOther1\" through \"TableStyleOther2\", \"SlicerStyleDark1\" through \"SlicerStyleDark6\". A custom user-defined style present in the workbook can also be specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStyle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getTop:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getWidth:member(1)",
                  "docComment": "/**\n * Represents the width, in points, of the slicer. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#getWorksheet:member(1)",
                  "docComment": "/**\n * Represents the worksheet containing the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#selectItems:member(1)",
                  "docComment": "/**\n * Selects slicer items based on their keys. The previous selections are cleared. All items will be selected by default if the array is empty.\n *\n * @param items - Optional. The specified slicer item names to be selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "selectItems(items?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "items",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "selectItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setCaption:member(1)",
                  "docComment": "/**\n * Represents the caption of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCaption(caption: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "caption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCaption"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setHeight:member(1)",
                  "docComment": "/**\n * Represents the height, in points, of the slicer. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHeight(height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setLeft:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeft(left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "left",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setName:member(1)",
                  "docComment": "/**\n * Represents the name of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setSortBy:member(1)",
                  "docComment": "/**\n * Represents the sort order of the items in the slicer. Possible values are: \"DataSourceOrder\", \"Ascending\", \"Descending\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSortBy(sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerSortType",
                      "canonicalReference": "excel!ExcelScript.SlicerSortType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSortBy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setStyle:member(1)",
                  "docComment": "/**\n * Constant value that represents the Slicer style. Possible values are: \"SlicerStyleLight1\" through \"SlicerStyleLight6\", \"TableStyleOther1\" through \"TableStyleOther2\", \"SlicerStyleDark1\" through \"SlicerStyleDark6\". A custom user-defined style present in the workbook can also be specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStyle(style: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "style",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setTop:member(1)",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTop(top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "top",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTop"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Slicer#setWidth:member(1)",
                  "docComment": "/**\n * Represents the width, in points, of the slicer. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setWidth(width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setWidth"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.SlicerItem:interface",
              "docComment": "/**\n * Represents a slicer item in a slicer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerItem "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerItem",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerItem#getHasData:member(1)",
                  "docComment": "/**\n * True if the slicer item has data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHasData(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHasData"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerItem#getIsSelected:member(1)",
                  "docComment": "/**\n * True if the slicer item is selected. Setting this value will not clear other SlicerItems' selected state. By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsSelected(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsSelected"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerItem#getKey:member(1)",
                  "docComment": "/**\n * Represents the unique value representing the slicer item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getKey(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getKey"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerItem#getName:member(1)",
                  "docComment": "/**\n * Represents the title displayed in the UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerItem#setIsSelected:member(1)",
                  "docComment": "/**\n * True if the slicer item is selected. Setting this value will not clear other SlicerItems' selected state. By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIsSelected(isSelected: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "isSelected",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIsSelected"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SlicerSortType:enum",
              "docComment": "/**\n * Specifies the slicer sort behavior for Slicer.sortBy API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SlicerSortType "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerSortType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SlicerSortType.ascending:member",
                  "docComment": "/**\n * Sort slicer items in ascending order by item captions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ascending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ascending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SlicerSortType.dataSourceOrder:member",
                  "docComment": "/**\n * Sort slicer items in the order provided by the data source.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataSourceOrder"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataSourceOrder",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SlicerSortType.descending:member",
                  "docComment": "/**\n * Sort slicer items in descending order by item captions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "descending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "descending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.SlicerStyle:interface",
              "docComment": "/**\n * Represents a Slicer Style, which defines style elements by region of the slicer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the SlicerStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this SlicerStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!ExcelScript.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerStyle#getName:member(1)",
                  "docComment": "/**\n * Gets the name of the SlicerStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerStyle#getReadOnly:member(1)",
                  "docComment": "/**\n * Specifies if this SlicerStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.SlicerStyle#setName:member(1)",
                  "docComment": "/**\n * Gets the name of the SlicerStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SortBy:enum",
              "docComment": "/**\n * Represents the sort direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortBy "
                }
              ],
              "releaseTag": "Public",
              "name": "SortBy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortBy.ascending:member",
                  "docComment": "/**\n * Ascending sort. Smallest to largest or A to Z.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ascending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ascending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortBy.descending:member",
                  "docComment": "/**\n * Descending sort. Largest to smallest or Z to A.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "descending"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "descending",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SortDataOption:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortDataOption "
                }
              ],
              "releaseTag": "Public",
              "name": "SortDataOption",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortDataOption.normal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normal"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "normal",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortDataOption.textAsNumber:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textAsNumber"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textAsNumber",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.SortField:interface",
              "docComment": "/**\n * Represents a condition in a sorting operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SortField "
                }
              ],
              "releaseTag": "Public",
              "name": "SortField",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#ascending:member",
                  "docComment": "/**\n * Specifies if the sorting is done in an ascending fashion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ascending?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ascending",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#color:member",
                  "docComment": "/**\n * Specifies the color that is the target of the condition if the sorting is on font or cell color.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#dataOption:member",
                  "docComment": "/**\n * Represents additional sorting options for this field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataOption?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortDataOption",
                      "canonicalReference": "excel!ExcelScript.SortDataOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataOption",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#icon:member",
                  "docComment": "/**\n * Specifies the icon that is the target of the condition if the sorting is on the cell's icon.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!ExcelScript.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#key:member",
                  "docComment": "/**\n * Specifies the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "key: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "key",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#sortOn:member",
                  "docComment": "/**\n * Specifies the type of sorting of this condition.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortOn?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortOn",
                      "canonicalReference": "excel!ExcelScript.SortOn:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sortOn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.SortField#subField:member",
                  "docComment": "/**\n * Specifies the subfield that is the target property name of a rich value to sort on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subField?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subField",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SortMethod:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortMethod "
                }
              ],
              "releaseTag": "Public",
              "name": "SortMethod",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortMethod.pinYin:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pinYin"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pinYin",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortMethod.strokeCount:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strokeCount"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strokeCount",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SortOn:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortOn "
                }
              ],
              "releaseTag": "Public",
              "name": "SortOn",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortOn.cellColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellColor"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellColor",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortOn.fontColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fontColor"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fontColor",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortOn.icon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortOn.value:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SortOrientation:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortOrientation "
                }
              ],
              "releaseTag": "Public",
              "name": "SortOrientation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortOrientation.columns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columns"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SortOrientation.rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SpecialCellType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SpecialCellType "
                }
              ],
              "releaseTag": "Public",
              "name": "SpecialCellType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.blanks:member",
                  "docComment": "/**\n * Cells with no content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blanks"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blanks",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.conditionalFormats:member",
                  "docComment": "/**\n * All cells with conditional formats\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "conditionalFormats"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "conditionalFormats",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.constants:member",
                  "docComment": "/**\n * Cells containing constants.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constants"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "constants",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.dataValidations:member",
                  "docComment": "/**\n * Cells having validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataValidations"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataValidations",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.formulas:member",
                  "docComment": "/**\n * Cells containing formulas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulas"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulas",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.sameConditionalFormat:member",
                  "docComment": "/**\n * Cells having the same conditional format as the first cell in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sameConditionalFormat"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sameConditionalFormat",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.sameDataValidation:member",
                  "docComment": "/**\n * Cells having the same data validation criteria as the first cell in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sameDataValidation"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sameDataValidation",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellType.visible:member",
                  "docComment": "/**\n * Cells that are visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SpecialCellValueType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SpecialCellValueType "
                }
              ],
              "releaseTag": "Public",
              "name": "SpecialCellValueType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.all:member",
                  "docComment": "/**\n * Cells that have errors, true/false, numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "all"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "all",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errors:member",
                  "docComment": "/**\n * Cells that have errors.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errors"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errors",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errorsLogical:member",
                  "docComment": "/**\n * Cells that have errors, or a true/false value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsLogical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsLogical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errorsLogicalNumber:member",
                  "docComment": "/**\n * Cells that have errors, true/false, or a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsLogicalNumber"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsLogicalNumber",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errorsLogicalText:member",
                  "docComment": "/**\n * Cells that have errors, true/false, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsLogicalText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsLogicalText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errorsNumbers:member",
                  "docComment": "/**\n * Cells that have errors, or a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsNumbers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsNumbers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errorsNumberText:member",
                  "docComment": "/**\n * Cells that have errors, numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsNumberText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsNumberText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.errorsText:member",
                  "docComment": "/**\n * Cells that have errors, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.logical:member",
                  "docComment": "/**\n * Cells that have a true/false value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logical"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logical",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.logicalNumbers:member",
                  "docComment": "/**\n * Cells that have a true/false, or a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logicalNumbers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logicalNumbers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.logicalNumbersText:member",
                  "docComment": "/**\n * Cells that have a true/false, numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logicalNumbersText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logicalNumbersText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.logicalText:member",
                  "docComment": "/**\n * Cells that have a true/false, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logicalText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logicalText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.numbers:member",
                  "docComment": "/**\n * Cells that have a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numbers"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numbers",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.numbersText:member",
                  "docComment": "/**\n * Cells that have a numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numbersText"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numbersText",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SpecialCellValueType.text:member",
                  "docComment": "/**\n * Cells that have a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.SubtotalLocationType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SubtotalLocationType "
                }
              ],
              "releaseTag": "Public",
              "name": "SubtotalLocationType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SubtotalLocationType.atBottom:member",
                  "docComment": "/**\n * Subtotals are at the bottom.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "atBottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "atBottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SubtotalLocationType.atTop:member",
                  "docComment": "/**\n * Subtotals are at the top.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "atTop"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "atTop",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.SubtotalLocationType.off:member",
                  "docComment": "/**\n * Subtotals are off.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "off"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "off",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Subtotals:interface",
              "docComment": "/**\n * Subtotals for the Pivot Field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Subtotals "
                }
              ],
              "releaseTag": "Public",
              "name": "Subtotals",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#automatic:member",
                  "docComment": "/**\n * If Automatic is set to true, then all other values will be ignored when setting the Subtotals.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#average:member",
                  "docComment": "/**\n * Average\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "average?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "average",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#count:member",
                  "docComment": "/**\n * Count\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#countNumbers:member",
                  "docComment": "/**\n * CountNumbers\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "countNumbers?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "countNumbers",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#max:member",
                  "docComment": "/**\n * Max\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "max?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "max",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#min:member",
                  "docComment": "/**\n * Min\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "min?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "min",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#product:member",
                  "docComment": "/**\n * Product\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "product?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "product",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#standardDeviation:member",
                  "docComment": "/**\n * StandardDeviation\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviation?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#standardDeviationP:member",
                  "docComment": "/**\n * StandardDeviationP\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviationP?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviationP",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#sum:member",
                  "docComment": "/**\n * Sum\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sum?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#variance:member",
                  "docComment": "/**\n * Variance\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "variance?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "variance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.Subtotals#varianceP:member",
                  "docComment": "/**\n * VarianceP\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "varianceP?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "varianceP",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Table:interface",
              "docComment": "/**\n * Represents an Excel table. To learn more about the table object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables | Work with tables using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Table "
                }
              ],
              "releaseTag": "Public",
              "name": "Table",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#addColumn:member(1)",
                  "docComment": "/**\n * Adds a new column to the table.\n *\n * @param index - Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.\n *\n * @param values - Optional. A 1-dimensional array of unformatted values of the table column.\n *\n * @param name - Optional. Specifies the name of the new column. If null, the default name will be used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addColumn(\n            index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            values?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(boolean | string | number)[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!ExcelScript.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#addRow:member(1)",
                  "docComment": "/**\n * Adds one row to the table.\n *\n * @param index - Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.\n *\n * @param values - Optional. A 1-dimensional array of unformatted values of the table row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addRow(index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", values?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(boolean | string | number)[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#addRows:member(1)",
                  "docComment": "/**\n * Adds one or more rows to the table.\n *\n * @param index - Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.\n *\n * @param values - Optional. A 2-dimensional array of unformatted values of the table row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addRows(index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", values?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(boolean | string | number)[][]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#clearFilters:member(1)",
                  "docComment": "/**\n * Clears all the filters currently applied on the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearFilters(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearFilters"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#convertToRange:member(1)",
                  "docComment": "/**\n * Converts the table into a normal range of cells. All data is preserved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "convertToRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#delete:member(1)",
                  "docComment": "/**\n * Deletes the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#deleteRowsAt:member(1)",
                  "docComment": "/**\n * Delete a specified number of rows at a given index.\n *\n * @param index - The index value of the row to be deleted. Caution: the index of the row may have moved from the time you determined the value to use for removal.\n *\n * @param count - Number of rows to delete. By default, a single row will be deleted.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "deleteRowsAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "deleteRowsAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getAutoFilter:member(1)",
                  "docComment": "/**\n * Represents the AutoFilter object of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoFilter(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "AutoFilter",
                      "canonicalReference": "excel!ExcelScript.AutoFilter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getColumns:member(1)",
                  "docComment": "/**\n * Represents a collection of all the columns in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumns(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!ExcelScript.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getHeaderRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with header row of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeaderRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeaderRowRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getHighlightFirstColumn:member(1)",
                  "docComment": "/**\n * Specifies if the first column contains special formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHighlightFirstColumn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHighlightFirstColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getHighlightLastColumn:member(1)",
                  "docComment": "/**\n * Specifies if the last column contains special formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHighlightLastColumn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHighlightLastColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getId:member(1)",
                  "docComment": "/**\n * Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getLegacyId:member(1)",
                  "docComment": "/**\n * Returns a numeric id.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLegacyId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLegacyId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getName:member(1)",
                  "docComment": "/**\n * Name of the table.\n *\n * The set name of the table must follow the guidelines specified in the {@link https://support.office.com/article/Rename-an-Excel-table-FBF49A4F-82A3-43EB-8BA2-44D21233B114 | Rename an Excel table} article.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getPredefinedTableStyle:member(1)",
                  "docComment": "/**\n * Constant value that represents the Table style. Possible values are: \"TableStyleLight1\" through \"TableStyleLight21\", \"TableStyleMedium1\" through \"TableStyleMedium28\", \"TableStyleDark1\" through \"TableStyleDark11\". A custom user-defined style present in the workbook can also be specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPredefinedTableStyle(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPredefinedTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the entire table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getRangeBetweenHeaderAndTotal:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the data body of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBetweenHeaderAndTotal(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeBetweenHeaderAndTotal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getShowBandedColumns:member(1)",
                  "docComment": "/**\n * Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowBandedColumns(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowBandedColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getShowBandedRows:member(1)",
                  "docComment": "/**\n * Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowBandedRows(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowBandedRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getShowFilterButton:member(1)",
                  "docComment": "/**\n * Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowFilterButton(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowFilterButton"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getShowHeaders:member(1)",
                  "docComment": "/**\n * Specifies if the header row is visible. This value can be set to show or remove the header row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowHeaders(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowHeaders"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getShowTotals:member(1)",
                  "docComment": "/**\n * Specifies if the total row is visible. This value can be set to show or remove the total row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowTotals(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowTotals"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getSort:member(1)",
                  "docComment": "/**\n * Represents the sorting for the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSort(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableSort",
                      "canonicalReference": "excel!ExcelScript.TableSort:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSort"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getTableColumn:member(1)",
                  "docComment": "/**\n * Gets a column object by Name or ID. If the column does not exist, will return a null object.\n *\n * @param key - Column Name or ID.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTableColumn(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "number | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!ExcelScript.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTableColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getTotalRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with totals row of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTotalRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTotalRowRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#getWorksheet:member(1)",
                  "docComment": "/**\n * The worksheet containing the current table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#reapplyFilters:member(1)",
                  "docComment": "/**\n * Reapplies all the filters currently on the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reapplyFilters(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "reapplyFilters"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setHighlightFirstColumn:member(1)",
                  "docComment": "/**\n * Specifies if the first column contains special formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHighlightFirstColumn(highlightFirstColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "highlightFirstColumn",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHighlightFirstColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setHighlightLastColumn:member(1)",
                  "docComment": "/**\n * Specifies if the last column contains special formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHighlightLastColumn(highlightLastColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "highlightLastColumn",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setHighlightLastColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setName:member(1)",
                  "docComment": "/**\n * Name of the table.\n *\n * The set name of the table must follow the guidelines specified in the {@link https://support.office.com/article/Rename-an-Excel-table-FBF49A4F-82A3-43EB-8BA2-44D21233B114 | Rename an Excel table} article.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setPredefinedTableStyle:member(1)",
                  "docComment": "/**\n * Constant value that represents the Table style. Possible values are: \"TableStyleLight1\" through \"TableStyleLight21\", \"TableStyleMedium1\" through \"TableStyleMedium28\", \"TableStyleDark1\" through \"TableStyleDark11\". A custom user-defined style present in the workbook can also be specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPredefinedTableStyle(predefinedTableStyle: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "predefinedTableStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPredefinedTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setShowBandedColumns:member(1)",
                  "docComment": "/**\n * Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowBandedColumns(showBandedColumns: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showBandedColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowBandedColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setShowBandedRows:member(1)",
                  "docComment": "/**\n * Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowBandedRows(showBandedRows: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showBandedRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowBandedRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setShowFilterButton:member(1)",
                  "docComment": "/**\n * Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowFilterButton(showFilterButton: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showFilterButton",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowFilterButton"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setShowHeaders:member(1)",
                  "docComment": "/**\n * Specifies if the header row is visible. This value can be set to show or remove the header row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowHeaders(showHeaders: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showHeaders",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowHeaders"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Table#setShowTotals:member(1)",
                  "docComment": "/**\n * Specifies if the total row is visible. This value can be set to show or remove the total row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowTotals(showTotals: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showTotals",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowTotals"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TableColumn:interface",
              "docComment": "/**\n * Represents a column in a table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableColumn "
                }
              ],
              "releaseTag": "Public",
              "name": "TableColumn",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#delete:member(1)",
                  "docComment": "/**\n * Deletes the column from the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getFilter:member(1)",
                  "docComment": "/**\n * Retrieve the filter applied to the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilter(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Filter",
                      "canonicalReference": "excel!ExcelScript.Filter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getHeaderRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the header row of the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeaderRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeaderRowRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getId:member(1)",
                  "docComment": "/**\n * Returns a unique key that identifies the column within the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getIndex:member(1)",
                  "docComment": "/**\n * Returns the index number of the column within the columns collection of the table. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIndex(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIndex"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getName:member(1)",
                  "docComment": "/**\n * Specifies the name of the table column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the entire column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getRangeBetweenHeaderAndTotal:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the data body of the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeBetweenHeaderAndTotal(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeBetweenHeaderAndTotal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#getTotalRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the totals row of the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTotalRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTotalRowRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableColumn#setName:member(1)",
                  "docComment": "/**\n * Specifies the name of the table column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TableSort:interface",
              "docComment": "/**\n * Manages sorting operations on Table objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableSort "
                }
              ],
              "releaseTag": "Public",
              "name": "TableSort",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableSort#apply:member(1)",
                  "docComment": "/**\n * Perform a sort operation.\n *\n * @param fields - The list of conditions to sort on.\n *\n * @param matchCase - Optional. Whether to have the casing impact string ordering.\n *\n * @param method - Optional. The ordering method used for Chinese characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(\n            fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortField",
                      "canonicalReference": "excel!ExcelScript.SortField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            method?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortMethod",
                      "canonicalReference": "excel!ExcelScript.SortMethod:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fields",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "matchCase",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "method",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableSort#clear:member(1)",
                  "docComment": "/**\n * Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableSort#getFields:member(1)",
                  "docComment": "/**\n * Specifies the current conditions used to last sort the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFields(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortField",
                      "canonicalReference": "excel!ExcelScript.SortField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFields"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableSort#getMatchCase:member(1)",
                  "docComment": "/**\n * Specifies if the casing impacts the last sort of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMatchCase(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMatchCase"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableSort#getMethod:member(1)",
                  "docComment": "/**\n * Represents Chinese character ordering method last used to sort the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMethod(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortMethod",
                      "canonicalReference": "excel!ExcelScript.SortMethod:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getMethod"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableSort#reapply:member(1)",
                  "docComment": "/**\n * Reapplies the current sorting parameters to the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reapply(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "reapply"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TableStyle:interface",
              "docComment": "/**\n * Represents a TableStyle, which defines the style elements by region of the Table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "TableStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this TableStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!ExcelScript.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableStyle#getName:member(1)",
                  "docComment": "/**\n * Gets the name of the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableStyle#getReadOnly:member(1)",
                  "docComment": "/**\n * Specifies if this TableStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TableStyle#setName:member(1)",
                  "docComment": "/**\n * Gets the name of the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TextConditionalFormat:interface",
              "docComment": "/**\n * Represents a specific text conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TextConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "TextConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextConditionalFormat#getFormat:member(1)",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextConditionalFormat#getRule:member(1)",
                  "docComment": "/**\n * The rule of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTextComparisonRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalTextComparisonRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextConditionalFormat#setRule:member(1)",
                  "docComment": "/**\n * The rule of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRule(rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTextComparisonRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalTextComparisonRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TextFrame:interface",
              "docComment": "/**\n * Represents the text frame of a shape object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TextFrame "
                }
              ],
              "releaseTag": "Public",
              "name": "TextFrame",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#deleteText:member(1)",
                  "docComment": "/**\n * Deletes all the text in the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "deleteText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "deleteText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getAutoSizeSetting:member(1)",
                  "docComment": "/**\n * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoSizeSetting(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeAutoSize",
                      "canonicalReference": "excel!ExcelScript.ShapeAutoSize:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoSizeSetting"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getBottomMargin:member(1)",
                  "docComment": "/**\n * Represents the bottom margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBottomMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBottomMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getHasText:member(1)",
                  "docComment": "/**\n * Specifies if the text frame contains text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHasText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHasText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment of the text frame. See Excel.ShapeTextHorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getHorizontalOverflow:member(1)",
                  "docComment": "/**\n * Represents the horizontal overflow behavior of the text frame. See Excel.ShapeTextHorizontalOverflow for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalOverflow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextHorizontalOverflow",
                      "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalOverflow:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalOverflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getLeftMargin:member(1)",
                  "docComment": "/**\n * Represents the left margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLeftMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLeftMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the text frame. See Excel.ShapeTextOrientation for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOrientation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextOrientation",
                      "canonicalReference": "excel!ExcelScript.ShapeTextOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getReadingOrder:member(1)",
                  "docComment": "/**\n * Represents the reading order of the text frame, either left-to-right or right-to-left. See Excel.ShapeTextReadingOrder for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadingOrder(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextReadingOrder",
                      "canonicalReference": "excel!ExcelScript.ShapeTextReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadingOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getRightMargin:member(1)",
                  "docComment": "/**\n * Represents the right margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRightMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRightMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getTextRange:member(1)",
                  "docComment": "/**\n * Represents the text that is attached to a shape in the text frame, and properties and methods for manipulating the text. See Excel.TextRange for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTextRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextRange",
                      "canonicalReference": "excel!ExcelScript.TextRange:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTextRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getTopMargin:member(1)",
                  "docComment": "/**\n * Represents the top margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTopMargin(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTopMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of the text frame. See Excel.ShapeTextVerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalAlignment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#getVerticalOverflow:member(1)",
                  "docComment": "/**\n * Represents the vertical overflow behavior of the text frame. See Excel.ShapeTextVerticalOverflow for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalOverflow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextVerticalOverflow",
                      "canonicalReference": "excel!ExcelScript.ShapeTextVerticalOverflow:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalOverflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setAutoSizeSetting:member(1)",
                  "docComment": "/**\n * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoSizeSetting(autoSizeSetting: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeAutoSize",
                      "canonicalReference": "excel!ExcelScript.ShapeAutoSize:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "autoSizeSetting",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setAutoSizeSetting"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setBottomMargin:member(1)",
                  "docComment": "/**\n * Represents the bottom margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBottomMargin(bottomMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bottomMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBottomMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setHorizontalAlignment:member(1)",
                  "docComment": "/**\n * Represents the horizontal alignment of the text frame. See Excel.ShapeTextHorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalAlignment(\n            horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextHorizontalAlignment",
                      "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setHorizontalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setHorizontalOverflow:member(1)",
                  "docComment": "/**\n * Represents the horizontal overflow behavior of the text frame. See Excel.ShapeTextHorizontalOverflow for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setHorizontalOverflow(\n            horizontalOverflow: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextHorizontalOverflow",
                      "canonicalReference": "excel!ExcelScript.ShapeTextHorizontalOverflow:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "horizontalOverflow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setHorizontalOverflow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setLeftMargin:member(1)",
                  "docComment": "/**\n * Represents the left margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLeftMargin(leftMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "leftMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setLeftMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setOrientation:member(1)",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the text frame. See Excel.ShapeTextOrientation for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOrientation(orientation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextOrientation",
                      "canonicalReference": "excel!ExcelScript.ShapeTextOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "orientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setOrientation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setReadingOrder:member(1)",
                  "docComment": "/**\n * Represents the reading order of the text frame, either left-to-right or right-to-left. See Excel.ShapeTextReadingOrder for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setReadingOrder(readingOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextReadingOrder",
                      "canonicalReference": "excel!ExcelScript.ShapeTextReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "readingOrder",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setReadingOrder"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setRightMargin:member(1)",
                  "docComment": "/**\n * Represents the right margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRightMargin(rightMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rightMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRightMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setTopMargin:member(1)",
                  "docComment": "/**\n * Represents the top margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTopMargin(topMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "topMargin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTopMargin"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setVerticalAlignment:member(1)",
                  "docComment": "/**\n * Represents the vertical alignment of the text frame. See Excel.ShapeTextVerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalAlignment(\n            verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextVerticalAlignment",
                      "canonicalReference": "excel!ExcelScript.ShapeTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalAlignment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setVerticalAlignment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextFrame#setVerticalOverflow:member(1)",
                  "docComment": "/**\n * Represents the vertical overflow behavior of the text frame. See Excel.ShapeTextVerticalOverflow for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVerticalOverflow(verticalOverflow: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextVerticalOverflow",
                      "canonicalReference": "excel!ExcelScript.ShapeTextVerticalOverflow:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "verticalOverflow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVerticalOverflow"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TextRange:interface",
              "docComment": "/**\n * Contains the text that is attached to a shape, in addition to properties and methods for manipulating the text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TextRange "
                }
              ],
              "releaseTag": "Public",
              "name": "TextRange",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextRange#getFont:member(1)",
                  "docComment": "/**\n * Returns a ShapeFont object that represents the font attributes for the text range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFont(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFont",
                      "canonicalReference": "excel!ExcelScript.ShapeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFont"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextRange#getSubstring:member(1)",
                  "docComment": "/**\n * Returns a TextRange object for the substring in the given range.\n *\n * @param start - The zero-based index of the first character to get from the text range.\n *\n * @param length - Optional. The number of characters to be returned in the new text range. If length is omitted, all the characters from start to the end of the text range's last paragraph will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubstring(start: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", length?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextRange",
                      "canonicalReference": "excel!ExcelScript.TextRange:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "start",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "length",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getSubstring"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextRange#getText:member(1)",
                  "docComment": "/**\n * Represents the plain text content of the text range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TextRange#setText:member(1)",
                  "docComment": "/**\n * Represents the plain text content of the text range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setText(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setText"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TimelineStyle:interface",
              "docComment": "/**\n * Represents a Timeline style, which defines style elements by region in the Timeline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TimelineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "TimelineStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TimelineStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TimelineStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this TimelineStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!ExcelScript.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TimelineStyle#getName:member(1)",
                  "docComment": "/**\n * Gets the name of the TimelineStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TimelineStyle#getReadOnly:member(1)",
                  "docComment": "/**\n * Specifies if this TimelineStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TimelineStyle#setName:member(1)",
                  "docComment": "/**\n * Gets the name of the TimelineStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.TopBottomConditionalFormat:interface",
              "docComment": "/**\n * Represents a Top/Bottom conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TopBottomConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "TopBottomConditionalFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TopBottomConditionalFormat#getFormat:member(1)",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFormat(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!ExcelScript.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFormat"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TopBottomConditionalFormat#getRule:member(1)",
                  "docComment": "/**\n * The criteria of the Top/Bottom conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRule(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTopBottomRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalTopBottomRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRule"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.TopBottomConditionalFormat#setRule:member(1)",
                  "docComment": "/**\n * The criteria of the Top/Bottom conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRule(rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTopBottomRule",
                      "canonicalReference": "excel!ExcelScript.ConditionalTopBottomRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rule",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setRule"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.VerticalAlignment:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum VerticalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "VerticalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.VerticalAlignment.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.VerticalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.VerticalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.VerticalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.VerticalAlignment.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Workbook:interface",
              "docComment": "/**\n * Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc. To learn more about the workbook object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks | Work with workbooks using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Workbook "
                }
              ],
              "releaseTag": "Public",
              "name": "Workbook",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addBinding:member(1)",
                  "docComment": "/**\n * Add a new binding to a particular Range.\n *\n * @param range - Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name\n *\n * @param bindingType - Type of binding. See Excel.BindingType.\n *\n * @param id - Name of binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addBinding(\n            range: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            bindingType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!ExcelScript.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!ExcelScript.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "range",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "bindingType",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "addBinding"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addBindingFromNamedItem:member(1)",
                  "docComment": "/**\n * Add a new binding based on a named item in the workbook. If the named item references to multiple areas, the \"InvalidReference\" error will be returned.\n *\n * @param name - Name from which to create binding.\n *\n * @param bindingType - Type of binding. See Excel.BindingType.\n *\n * @param id - Name of binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addBindingFromNamedItem(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            bindingType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!ExcelScript.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!ExcelScript.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "bindingType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addBindingFromNamedItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addBindingFromSelection:member(1)",
                  "docComment": "/**\n * Add a new binding based on the current selection. If the selection has multiple areas, the \"InvalidReference\" error will be returned.\n *\n * @param bindingType - Type of binding. See Excel.BindingType.\n *\n * @param id - Name of binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addBindingFromSelection(bindingType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!ExcelScript.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ", id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!ExcelScript.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bindingType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addBindingFromSelection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addComment:member(1)",
                  "docComment": "/**\n * Creates a new comment with the given content on the given cell. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n *\n * @param cellAddress - The cell to which the comment is added. This can be a Range object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n *\n * @param content - The comment's content. This can be either a string or CommentRichContent object. Strings are used for plain text. CommentRichContent objects allow for other comment features, such as mentions.\n *\n * @param contentType - Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addComment(\n            cellAddress: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            content: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!ExcelScript.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            contentType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContentType",
                      "canonicalReference": "excel!ExcelScript.ContentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellAddress",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "contentType",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addCustomXmlPart:member(1)",
                  "docComment": "/**\n * Adds a new custom XML part to the workbook.\n *\n * @param xml - XML content. Must be a valid XML fragment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addCustomXmlPart(xml: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!ExcelScript.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "xml",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addCustomXmlPart"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addNamedItem:member(1)",
                  "docComment": "/**\n * Adds a new name to the collection of the given scope.\n *\n * @param name - The name of the named item.\n *\n * @param reference - The formula or the range that the name will refer to.\n *\n * @param comment - Optional. The comment associated with the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addNamedItem(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            reference: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            comment?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "reference",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "addNamedItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addNamedItemFormulaLocal:member(1)",
                  "docComment": "/**\n * Adds a new name to the collection of the given scope using the user's locale for the formula.\n *\n * @param name - The \"name\" of the named item.\n *\n * @param formula - The formula in the user's locale that the name will refer to.\n *\n * @param comment - Optional. The comment associated with the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addNamedItemFormulaLocal(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            comment?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addNamedItemFormulaLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addPivotTable:member(1)",
                  "docComment": "/**\n * Add a PivotTable based on the specified source data and insert it at the top-left cell of the destination range.\n *\n * @param name - The name of the new PivotTable.\n *\n * @param source - The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.\n *\n * @param destination - The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addPivotTable(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            source: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            destination: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "source",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "destination",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addPivotTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addPivotTableStyle:member(1)",
                  "docComment": "/**\n * Creates a blank PivotTableStyle with the specified name.\n *\n * @param name - The unique name for the new PivotTableStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addPivotTableStyle(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addPivotTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addPredefinedCellStyle:member(1)",
                  "docComment": "/**\n * Adds a new style to the collection.\n *\n * @param name - Name of the style to be added.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addPredefinedCellStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addPredefinedCellStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addSetting:member(1)",
                  "docComment": "/**\n * Sets or adds the specified setting to the workbook.\n *\n * @param key - The Key of the new setting.\n *\n * @param value - The Value for the new setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addSetting(\n            key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            value: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number | boolean | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<any> | any\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Setting",
                      "canonicalReference": "excel!ExcelScript.Setting:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "addSetting"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addSlicer:member(1)",
                  "docComment": "/**\n * Adds a new slicer to the workbook.\n *\n * @param slicerSource - The data source that the new slicer will be based on. It can be a PivotTable object, a Table object or a string. When a PivotTable object is passed, the data source is the source of the PivotTable object. When a Table object is passed, the data source is the Table object. When a string is passed, it is interpreted as the name/id of a PivotTable/Table.\n *\n * @param sourceField - The field in the data source to filter by. It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.\n *\n * @param slicerDestination - Optional. The worksheet where the new slicer will be created in. It can be a Worksheet object or the name/id of a worksheet. This parameter can be omitted if the slicer collection is retrieved from worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addSlicer(\n            slicerSource: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            sourceField: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!ExcelScript.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            slicerDestination?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "slicerSource",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "sourceField",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 10
                      }
                    },
                    {
                      "parameterName": "slicerDestination",
                      "parameterTypeTokenRange": {
                        "startIndex": 11,
                        "endIndex": 14
                      }
                    }
                  ],
                  "name": "addSlicer"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addSlicerStyle:member(1)",
                  "docComment": "/**\n * Creates a blank SlicerStyle with the specified name.\n *\n * @param name - The unique name for the new SlicerStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addSlicerStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!ExcelScript.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addSlicerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addTable:member(1)",
                  "docComment": "/**\n * Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.\n *\n * @param address - A Range object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used.\n *\n * @param hasHeaders - Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTable(address: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", hasHeaders: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "hasHeaders",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "addTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addTableStyle:member(1)",
                  "docComment": "/**\n * Creates a blank TableStyle with the specified name.\n *\n * @param name - The unique name for the new TableStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTableStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!ExcelScript.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addTimelineStyle:member(1)",
                  "docComment": "/**\n * Creates a blank TimelineStyle with the specified name.\n *\n * @param name - The unique name for the new TimelineStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTimelineStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!ExcelScript.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addTimelineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#addWorksheet:member(1)",
                  "docComment": "/**\n * Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call \".activate() on it.\n *\n * @param name - Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addWorksheet(name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getActiveCell:member(1)",
                  "docComment": "/**\n * Gets the currently active cell from the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveCell(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getActiveChart:member(1)",
                  "docComment": "/**\n * Gets the currently active chart in the workbook. If there is no active chart, a null object is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveChart(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!ExcelScript.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveChart"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getActiveSlicer:member(1)",
                  "docComment": "/**\n * Gets the currently active slicer in the workbook. If there is no active slicer, a null object is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveSlicer(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveSlicer"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getActiveWorksheet:member(1)",
                  "docComment": "/**\n * Gets the currently active worksheet in the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getApplication:member(1)",
                  "docComment": "/**\n * Represents the Excel application instance that contains this workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getApplication(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Application",
                      "canonicalReference": "excel!ExcelScript.Application:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getApplication"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getAutoSave:member(1)",
                  "docComment": "/**\n * Specifies if the workbook is in autosave mode.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoSave(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoSave"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getBinding:member(1)",
                  "docComment": "/**\n * Gets a binding object by ID. If the binding object does not exist, will return a null object.\n *\n * @param id - Id of the binding object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBinding(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!ExcelScript.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getBinding"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getBindings:member(1)",
                  "docComment": "/**\n * Represents a collection of bindings that are part of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBindings(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!ExcelScript.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getBindings"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getCalculationEngineVersion:member(1)",
                  "docComment": "/**\n * Returns a number about the version of Excel Calculation Engine.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCalculationEngineVersion(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCalculationEngineVersion"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getChartDataPointTrack:member(1)",
                  "docComment": "/**\n * True if all charts in the workbook are tracking the actual data points to which they are attached. False if the charts track the index of the data points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getChartDataPointTrack(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getChartDataPointTrack"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getComment:member(1)",
                  "docComment": "/**\n * Gets a comment from the collection based on its ID.\n *\n * @param commentId - The identifier for the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getComment(commentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "commentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getCommentByCell:member(1)",
                  "docComment": "/**\n * Gets the comment from the specified cell.\n *\n * @param cellAddress - The cell which the comment is on. This can be a Range object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCommentByCell(cellAddress: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellAddress",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getCommentByCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getCommentByReplyId:member(1)",
                  "docComment": "/**\n * Gets the comment to which the given reply is connected.\n *\n * @param replyId - The identifier of comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCommentByReplyId(replyId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "replyId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getCommentByReplyId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getComments:member(1)",
                  "docComment": "/**\n * Represents a collection of Comments associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getComments(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getComments"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getCustomXmlPart:member(1)",
                  "docComment": "/**\n * Gets a custom XML part based on its ID. If the CustomXmlPart does not exist, the return object's isNull property will be true.\n *\n * @param id - ID of the object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCustomXmlPart(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!ExcelScript.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getCustomXmlPart"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getCustomXmlParts:member(1)",
                  "docComment": "/**\n * Represents the collection of custom XML parts contained by this workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCustomXmlParts(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!ExcelScript.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCustomXmlParts"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getDefaultPivotTableStyle:member(1)",
                  "docComment": "/**\n * Gets the default PivotTableStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefaultPivotTableStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefaultPivotTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getDefaultSlicerStyle:member(1)",
                  "docComment": "/**\n * Gets the default SlicerStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefaultSlicerStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!ExcelScript.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefaultSlicerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getDefaultTableStyle:member(1)",
                  "docComment": "/**\n * Gets the default TableStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefaultTableStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!ExcelScript.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefaultTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getDefaultTimelineStyle:member(1)",
                  "docComment": "/**\n * Gets the default TimelineStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefaultTimelineStyle(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!ExcelScript.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefaultTimelineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getFirstWorksheet:member(1)",
                  "docComment": "/**\n * Gets the first worksheet in the collection.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirstWorksheet(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getFirstWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getIsDirty:member(1)",
                  "docComment": "/**\n * Specifies if changes have been made since the workbook was last saved. You can set this property to true if you want to close a modified workbook without either saving it or being prompted to save it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIsDirty(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getIsDirty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getLastWorksheet:member(1)",
                  "docComment": "/**\n * Gets the last worksheet in the collection.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastWorksheet(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getLastWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getName:member(1)",
                  "docComment": "/**\n * Gets the workbook name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getNamedItem:member(1)",
                  "docComment": "/**\n * Gets a NamedItem object using its name. If the nameditem object does not exist, will return a null object.\n *\n * @param name - Nameditem name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNamedItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getNamedItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getNames:member(1)",
                  "docComment": "/**\n * Represents a collection of workbook scoped named items (named ranges and constants).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNames(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNames"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPivotTable:member(1)",
                  "docComment": "/**\n * Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.\n *\n * @param name - Name of the PivotTable to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTable(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPivotTables:member(1)",
                  "docComment": "/**\n * Represents a collection of PivotTables associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTables(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPivotTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPivotTableStyle:member(1)",
                  "docComment": "/**\n * Gets a PivotTableStyle by name. If the PivotTableStyle does not exist, will return a null object.\n *\n * @param name - Name of the PivotTableStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTableStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPivotTableStyles:member(1)",
                  "docComment": "/**\n * Represents a collection of PivotTableStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTableStyles(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPivotTableStyles"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPredefinedCellStyle:member(1)",
                  "docComment": "/**\n * Gets a style by name.\n *\n * @param name - Name of the style to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPredefinedCellStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PredefinedCellStyle",
                      "canonicalReference": "excel!ExcelScript.PredefinedCellStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPredefinedCellStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPredefinedCellStyles:member(1)",
                  "docComment": "/**\n * Represents a collection of styles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPredefinedCellStyles(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PredefinedCellStyle",
                      "canonicalReference": "excel!ExcelScript.PredefinedCellStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPredefinedCellStyles"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getPreviouslySaved:member(1)",
                  "docComment": "/**\n * Specifies if the workbook has ever been saved locally or online.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPreviouslySaved(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPreviouslySaved"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getProperties:member(1)",
                  "docComment": "/**\n * Gets the workbook properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProperties(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DocumentProperties",
                      "canonicalReference": "excel!ExcelScript.DocumentProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProperties"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getProtection:member(1)",
                  "docComment": "/**\n * Returns workbook protection object for a workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProtection(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorkbookProtection",
                      "canonicalReference": "excel!ExcelScript.WorkbookProtection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProtection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getReadOnly:member(1)",
                  "docComment": "/**\n * True if the workbook is open in Read-only mode.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getReadOnly(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getReadOnly"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSelectedRange:member(1)",
                  "docComment": "/**\n * Gets the currently selected single range from the workbook. If there are multiple ranges selected, this method will throw an error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSelectedRanges:member(1)",
                  "docComment": "/**\n * Gets the currently selected one or more ranges from the workbook. Unlike getSelectedRange(), this method returns a RangeAreas object that represents all the selected ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedRanges(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedRanges"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSetting:member(1)",
                  "docComment": "/**\n * Gets a Setting entry via the key. If the Setting does not exist, will return a null object.\n *\n * @param key - The key of the setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSetting(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Setting",
                      "canonicalReference": "excel!ExcelScript.Setting:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getSetting"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSettings:member(1)",
                  "docComment": "/**\n * Represents a collection of Settings associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSettings(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Setting",
                      "canonicalReference": "excel!ExcelScript.Setting:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSettings"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSlicer:member(1)",
                  "docComment": "/**\n * Gets a slicer using its name or id. If the slicer does not exist, will return a null object.\n *\n * @param key - Name or Id of the slicer to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicer(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getSlicer"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSlicers:member(1)",
                  "docComment": "/**\n * Represents a collection of Slicers associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicers(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSlicers"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSlicerStyle:member(1)",
                  "docComment": "/**\n * Gets a SlicerStyle by name. If the SlicerStyle does not exist, will return a null object.\n *\n * @param name - Name of the SlicerStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicerStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!ExcelScript.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getSlicerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getSlicerStyles:member(1)",
                  "docComment": "/**\n * Represents a collection of SlicerStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicerStyles(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!ExcelScript.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSlicerStyles"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getTable:member(1)",
                  "docComment": "/**\n * Gets a table by Name or ID. If the table does not exist, will return a null object.\n *\n * @param key - Name or ID of the table to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTable(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getTables:member(1)",
                  "docComment": "/**\n * Represents a collection of tables associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTables(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getTableStyle:member(1)",
                  "docComment": "/**\n * Gets a TableStyle by name. If the TableStyle does not exist, will return a null object.\n *\n * @param name - Name of the TableStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTableStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!ExcelScript.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getTableStyles:member(1)",
                  "docComment": "/**\n * Represents a collection of TableStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTableStyles(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!ExcelScript.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTableStyles"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getTimelineStyle:member(1)",
                  "docComment": "/**\n * Gets a TimelineStyle by name. If the TimelineStyle does not exist, will return a null object.\n *\n * @param name - Name of the TimelineStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTimelineStyle(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!ExcelScript.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTimelineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getTimelineStyles:member(1)",
                  "docComment": "/**\n * Represents a collection of TimelineStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTimelineStyles(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!ExcelScript.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTimelineStyles"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getUsePrecisionAsDisplayed:member(1)",
                  "docComment": "/**\n * True if calculations in this workbook will be done using only the precision of the numbers as they're displayed. Data will permanently lose accuracy when switching this property from false to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsePrecisionAsDisplayed(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getUsePrecisionAsDisplayed"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getWorksheet:member(1)",
                  "docComment": "/**\n * Gets a worksheet object using its Name or ID. If the worksheet does not exist, will return a null object.\n *\n * @param key - The Name or ID of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheet(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#getWorksheets:member(1)",
                  "docComment": "/**\n * Represents a collection of worksheets associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorksheets(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getWorksheets"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#refreshAllDataConnections:member(1)",
                  "docComment": "/**\n * Refreshes all the Data Connections.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refreshAllDataConnections(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refreshAllDataConnections"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#refreshAllPivotTables:member(1)",
                  "docComment": "/**\n * Refreshes all the pivot tables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refreshAllPivotTables(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refreshAllPivotTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setChartDataPointTrack:member(1)",
                  "docComment": "/**\n * True if all charts in the workbook are tracking the actual data points to which they are attached. False if the charts track the index of the data points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setChartDataPointTrack(chartDataPointTrack: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "chartDataPointTrack",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setChartDataPointTrack"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setDefaultPivotTableStyle:member(1)",
                  "docComment": "/**\n * Sets the default PivotTableStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The PivotTableStyle object or name of the PivotTableStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefaultPivotTableStyle(\n            newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!ExcelScript.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefaultPivotTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setDefaultSlicerStyle:member(1)",
                  "docComment": "/**\n * Sets the default SlicerStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The SlicerStyle object or name of the SlicerStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefaultSlicerStyle(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!ExcelScript.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefaultSlicerStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setDefaultTableStyle:member(1)",
                  "docComment": "/**\n * Sets the default TableStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The TableStyle object or name of the TableStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefaultTableStyle(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!ExcelScript.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefaultTableStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setDefaultTimelineStyle:member(1)",
                  "docComment": "/**\n * Sets the default TimelineStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The TimelineStyle object or name of the TimelineStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefaultTimelineStyle(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!ExcelScript.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefaultTimelineStyle"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setIsDirty:member(1)",
                  "docComment": "/**\n * Specifies if changes have been made since the workbook was last saved. You can set this property to true if you want to close a modified workbook without either saving it or being prompted to save it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setIsDirty(isDirty: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "isDirty",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setIsDirty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Workbook#setUsePrecisionAsDisplayed:member(1)",
                  "docComment": "/**\n * True if calculations in this workbook will be done using only the precision of the numbers as they're displayed. Data will permanently lose accuracy when switching this property from false to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setUsePrecisionAsDisplayed(usePrecisionAsDisplayed: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "usePrecisionAsDisplayed",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setUsePrecisionAsDisplayed"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.WorkbookProtection:interface",
              "docComment": "/**\n * Represents the protection of a workbook object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorkbookProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "WorkbookProtection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorkbookProtection#getProtected:member(1)",
                  "docComment": "/**\n * Specifies if the workbook is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProtected(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProtected"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorkbookProtection#protect:member(1)",
                  "docComment": "/**\n * Protects a workbook. Fails if the workbook has been protected.\n *\n * @param password - workbook protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "protect(password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "protect"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorkbookProtection#unprotect:member(1)",
                  "docComment": "/**\n * Unprotects a workbook.\n *\n * @param password - workbook protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unprotect(password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "unprotect"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.Worksheet:interface",
              "docComment": "/**\n * An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc. To learn more about the worksheet object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets | Work with worksheets using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Worksheet "
                }
              ],
              "releaseTag": "Public",
              "name": "Worksheet",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#activate:member(1)",
                  "docComment": "/**\n * Activate the worksheet in the Excel UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "activate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "activate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addChart:member(1)",
                  "docComment": "/**\n * Creates a new chart.\n *\n * @param type - Represents the type of a chart. See Excel.ChartType for details.\n *\n * @param sourceData - The Range object corresponding to the source data.\n *\n * @param seriesBy - Optional. Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addChart(\n            type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!ExcelScript.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            seriesBy?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesBy",
                      "canonicalReference": "excel!ExcelScript.ChartSeriesBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!ExcelScript.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "seriesBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "addChart"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addComment:member(1)",
                  "docComment": "/**\n * Creates a new comment with the given content on the given cell. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n *\n * @param cellAddress - The cell to which the comment is added. This can be a Range object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n *\n * @param content - The comment's content. This can be either a string or CommentRichContent object. Strings are used for plain text. CommentRichContent objects allow for other comment features, such as mentions.\n *\n * @param contentType - Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addComment(\n            cellAddress: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            content: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!ExcelScript.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            contentType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContentType",
                      "canonicalReference": "excel!ExcelScript.ContentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellAddress",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "contentType",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addGeometricShape:member(1)",
                  "docComment": "/**\n * Adds a geometric shape to the worksheet. Returns a Shape object that represents the new shape.\n *\n * @param geometricShapeType - Represents the type of the geometric shape. See Excel.GeometricShapeType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addGeometricShape(geometricShapeType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShapeType",
                      "canonicalReference": "excel!ExcelScript.GeometricShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "geometricShapeType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addGeometricShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addGroup:member(1)",
                  "docComment": "/**\n * Groups a subset of shapes in this collection's worksheet. Returns a Shape object that represents the new group of shapes.\n *\n * @param values - An array of shape ID or shape objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addGroup(values: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "addGroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addHorizontalPageBreak:member(1)",
                  "docComment": "/**\n * Adds a page break before the top-left cell of the range specified.\n *\n * @param pageBreakRange - The range immediately after the page break to be added.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addHorizontalPageBreak(pageBreakRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreak",
                      "canonicalReference": "excel!ExcelScript.PageBreak:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pageBreakRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "addHorizontalPageBreak"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addImage:member(1)",
                  "docComment": "/**\n * Creates an image from a base64-encoded string and adds it to the worksheet. Returns the Shape object that represents the new image.\n *\n * @param base64ImageString - A base64-encoded string representing an image in either JPEG or PNG format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addImage(base64ImageString: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "base64ImageString",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addLine:member(1)",
                  "docComment": "/**\n * Adds a line to worksheet. Returns a Shape object that represents the new line.\n *\n * @param startLeft - The distance, in points, from the start of the line to the left side of the worksheet.\n *\n * @param startTop - The distance, in points, from the start of the line to the top of the worksheet.\n *\n * @param endLeft - The distance, in points, from the end of the line to the left of the worksheet.\n *\n * @param endTop - The distance, in points, from the end of the line to the top of the worksheet.\n *\n * @param connectorType - Represents the connector type. See Excel.ConnectorType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addLine(\n            startLeft: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            startTop: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            endLeft: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            endTop: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            connectorType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConnectorType",
                      "canonicalReference": "excel!ExcelScript.ConnectorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "startLeft",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "startTop",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "endLeft",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "endTop",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    },
                    {
                      "parameterName": "connectorType",
                      "parameterTypeTokenRange": {
                        "startIndex": 9,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addLine"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addNamedItem:member(1)",
                  "docComment": "/**\n * Adds a new name to the collection of the given scope.\n *\n * @param name - The name of the named item.\n *\n * @param reference - The formula or the range that the name will refer to.\n *\n * @param comment - Optional. The comment associated with the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addNamedItem(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            reference: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            comment?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "reference",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "addNamedItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addNamedItemFormulaLocal:member(1)",
                  "docComment": "/**\n * Adds a new name to the collection of the given scope using the user's locale for the formula.\n *\n * @param name - The \"name\" of the named item.\n *\n * @param formula - The formula in the user's locale that the name will refer to.\n *\n * @param comment - Optional. The comment associated with the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addNamedItemFormulaLocal(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            comment?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addNamedItemFormulaLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addPivotTable:member(1)",
                  "docComment": "/**\n * Add a PivotTable based on the specified source data and insert it at the top-left cell of the destination range.\n *\n * @param name - The name of the new PivotTable.\n *\n * @param source - The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.\n *\n * @param destination - The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addPivotTable(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            source: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            destination: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "source",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "destination",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "addPivotTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addSlicer:member(1)",
                  "docComment": "/**\n * Adds a new slicer to the workbook.\n *\n * @param slicerSource - The data source that the new slicer will be based on. It can be a PivotTable object, a Table object or a string. When a PivotTable object is passed, the data source is the source of the PivotTable object. When a Table object is passed, the data source is the Table object. When a string is passed, it is interpreted as the name/id of a PivotTable/Table.\n *\n * @param sourceField - The field in the data source to filter by. It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.\n *\n * @param slicerDestination - Optional. The worksheet where the new slicer will be created in. It can be a Worksheet object or the name/id of a worksheet. This parameter can be omitted if the slicer collection is retrieved from worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addSlicer(\n            slicerSource: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            sourceField: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!ExcelScript.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!ExcelScript.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            slicerDestination?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "slicerSource",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "sourceField",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 10
                      }
                    },
                    {
                      "parameterName": "slicerDestination",
                      "parameterTypeTokenRange": {
                        "startIndex": 11,
                        "endIndex": 14
                      }
                    }
                  ],
                  "name": "addSlicer"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addTable:member(1)",
                  "docComment": "/**\n * Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.\n *\n * @param address - A Range object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used.\n *\n * @param hasHeaders - Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTable(address: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", hasHeaders: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "hasHeaders",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "addTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addTextBox:member(1)",
                  "docComment": "/**\n * Adds a text box to the worksheet with the provided text as the content. Returns a Shape object that represents the new text box.\n *\n * @param text - Represents the text that will be shown in the created text box.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTextBox(text?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addTextBox"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#addVerticalPageBreak:member(1)",
                  "docComment": "/**\n * Adds a page break before the top-left cell of the range specified.\n *\n * @param pageBreakRange - The range immediately after the page break to be added.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addVerticalPageBreak(pageBreakRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreak",
                      "canonicalReference": "excel!ExcelScript.PageBreak:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pageBreakRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "addVerticalPageBreak"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#calculate:member(1)",
                  "docComment": "/**\n * Calculates all cells on a worksheet.\n *\n * @param markAllDirty - True, to mark all as dirty.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(markAllDirty: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markAllDirty",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "calculate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#copy:member(1)",
                  "docComment": "/**\n * Copies a worksheet and places it at the specified position.\n *\n * @param positionType - The location in the workbook to place the newly created worksheet. The default value is \"None\", which inserts the worksheet at the beginning of the worksheet.\n *\n * @param relativeTo - The existing worksheet which determines the newly created worksheet's position. This is only needed if `positionType` is \"Before\" or \"After\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copy(\n            positionType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetPositionType",
                      "canonicalReference": "excel!ExcelScript.WorksheetPositionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            relativeTo?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "positionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "relativeTo",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "copy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#delete:member(1)",
                  "docComment": "/**\n * Deletes the worksheet from the workbook. Note that if the worksheet's visibility is set to \"VeryHidden\", the delete operation will fail with an `InvalidOperation` exception. You should first change its visibility to hidden or visible before deleting it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#findAll:member(1)",
                  "docComment": "/**\n * Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.\n *\n * @param text - The string to find.\n *\n * @param criteria - Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "findAll(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetSearchCriteria",
                      "canonicalReference": "excel!ExcelScript.WorksheetSearchCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "findAll"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getAutoFilter:member(1)",
                  "docComment": "/**\n * Represents the AutoFilter object of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAutoFilter(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "AutoFilter",
                      "canonicalReference": "excel!ExcelScript.AutoFilter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getAutoFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getCell:member(1)",
                  "docComment": "/**\n * Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.\n *\n * @param row - The row number of the cell to be retrieved. Zero-indexed.\n *\n * @param column - the column number of the cell to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCell(row: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", column: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "row",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "column",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getChart:member(1)",
                  "docComment": "/**\n * Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If the chart does not exist, will return a null object.\n *\n * @param name - Name of the chart to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getChart(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!ExcelScript.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getChart"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getCharts:member(1)",
                  "docComment": "/**\n * Returns a collection of charts that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCharts(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!ExcelScript.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCharts"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getComment:member(1)",
                  "docComment": "/**\n * Gets a comment from the collection based on its ID.\n *\n * @param commentId - The identifier for the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getComment(commentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "commentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getComment"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getCommentByCell:member(1)",
                  "docComment": "/**\n * Gets the comment from the specified cell.\n *\n * @param cellAddress - The cell which the comment is on. This can be a Range object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCommentByCell(cellAddress: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellAddress",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getCommentByCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getCommentByReplyId:member(1)",
                  "docComment": "/**\n * Gets the comment to which the given reply is connected.\n *\n * @param replyId - The identifier of comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCommentByReplyId(replyId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "replyId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getCommentByReplyId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getComments:member(1)",
                  "docComment": "/**\n * Returns a collection of all the Comments objects on the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getComments(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!ExcelScript.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getComments"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getEnableCalculation:member(1)",
                  "docComment": "/**\n * Determines if Excel should recalculate the worksheet when necessary. True if Excel recalculates the worksheet when necessary. False if Excel doesn't recalculate the sheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnableCalculation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEnableCalculation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getFreezePanes:member(1)",
                  "docComment": "/**\n * Gets an object that can be used to manipulate frozen panes on the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFreezePanes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetFreezePanes",
                      "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFreezePanes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getHorizontalPageBreaks:member(1)",
                  "docComment": "/**\n * Gets the horizontal page break collection for the worksheet. This collection only contains manual page breaks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHorizontalPageBreaks(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreak",
                      "canonicalReference": "excel!ExcelScript.PageBreak:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHorizontalPageBreaks"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getId:member(1)",
                  "docComment": "/**\n * Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getId(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getName:member(1)",
                  "docComment": "/**\n * The display name of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getName(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getNamedItem:member(1)",
                  "docComment": "/**\n * Gets a NamedItem object using its name. If the nameditem object does not exist, will return a null object.\n *\n * @param name - Nameditem name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNamedItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getNamedItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getNames:member(1)",
                  "docComment": "/**\n * Collection of names scoped to the current worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNames(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!ExcelScript.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getNames"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getNext:member(1)",
                  "docComment": "/**\n * Gets the worksheet that follows this one. If there are no worksheets following this one, this method will return a null object.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNext(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getNext"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getPageLayout:member(1)",
                  "docComment": "/**\n * Gets the PageLayout object of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPageLayout(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayout",
                      "canonicalReference": "excel!ExcelScript.PageLayout:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPageLayout"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getPivotTable:member(1)",
                  "docComment": "/**\n * Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.\n *\n * @param name - Name of the PivotTable to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTable(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getPivotTables:member(1)",
                  "docComment": "/**\n * Collection of PivotTables that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTables(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!ExcelScript.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPivotTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getPosition:member(1)",
                  "docComment": "/**\n * The zero-based position of the worksheet within the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPosition(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getPrevious:member(1)",
                  "docComment": "/**\n * Gets the worksheet that precedes this one. If there are no previous worksheets, this method will return a null objet.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrevious(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!ExcelScript.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPrevious"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getProtection:member(1)",
                  "docComment": "/**\n * Returns sheet protection object for a worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProtection(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetProtection",
                      "canonicalReference": "excel!ExcelScript.WorksheetProtection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProtection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getRange:member(1)",
                  "docComment": "/**\n * Gets the range object, representing a single rectangular block of cells, specified by the address or name.\n *\n * @param address - Optional. The string representing the address or name of the range. For example, \"A1:B2\". If not specified, the entire worksheet range is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(address?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getRangeByIndexes:member(1)",
                  "docComment": "/**\n * Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.\n *\n * @param startRow - Start row (zero-indexed).\n *\n * @param startColumn - Start column (zero-indexed).\n *\n * @param rowCount - Number of rows to include in the range.\n *\n * @param columnCount - Number of columns to include in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeByIndexes(\n            startRow: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            startColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            rowCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            columnCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "startRow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "startColumn",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "rowCount",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "columnCount",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getRangeByIndexes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getRanges:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, representing one or more blocks of rectangular ranges, specified by the address or name.\n *\n * @param address - Optional. A string containing the comma-separated addresses or names of the individual ranges. For example, \"A1:B2, A5:B5\". If not specified, an RangeArea object for the entire worksheet is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRanges(address?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!ExcelScript.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRanges"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getShape:member(1)",
                  "docComment": "/**\n * Gets a shape using its Name or ID.\n *\n * @param key - Name or ID of the shape to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShape(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getShapes:member(1)",
                  "docComment": "/**\n * Returns the collection of all the Shape objects on the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShapes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!ExcelScript.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShapes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getShowGridlines:member(1)",
                  "docComment": "/**\n * Specifies if gridlines are visible to the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowGridlines(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowGridlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getShowHeadings:member(1)",
                  "docComment": "/**\n * Specifies if headings are visible to the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getShowHeadings(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getShowHeadings"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getSlicer:member(1)",
                  "docComment": "/**\n * Gets a slicer using its name or id. If the slicer does not exist, will return a null object.\n *\n * @param key - Name or Id of the slicer to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicer(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getSlicer"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getSlicers:member(1)",
                  "docComment": "/**\n * Returns a collection of slicers that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSlicers(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!ExcelScript.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSlicers"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getStandardHeight:member(1)",
                  "docComment": "/**\n * Returns the standard (default) height of all the rows in the worksheet, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStandardHeight(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStandardHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getStandardWidth:member(1)",
                  "docComment": "/**\n * Specifies the standard (default) width of all the columns in the worksheet. One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getStandardWidth(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getStandardWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getTabColor:member(1)",
                  "docComment": "/**\n * The tab color of the worksheet. When retrieving the tab color, if the worksheet is invisible, the value will be null. If the worksheet is visible but the tab color is set to auto, an empty string will be returned. Otherwise, the property will be set to a color, in the form \"#123456\" When setting the color, use an empty-string to set an \"auto\" color, or a real color otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTabColor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTabColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getTable:member(1)",
                  "docComment": "/**\n * Gets a table by Name or ID. If the table does not exist, will return a null object.\n *\n * @param key - Name or ID of the table to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTable(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getTables:member(1)",
                  "docComment": "/**\n * Collection of tables that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTables(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!ExcelScript.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getUsedRange:member(1)",
                  "docComment": "/**\n * The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.\n *\n * @param valuesOnly - Optional. Considers only cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRange(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getVerticalPageBreaks:member(1)",
                  "docComment": "/**\n * Gets the vertical page break collection for the worksheet. This collection only contains manual page breaks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVerticalPageBreaks(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreak",
                      "canonicalReference": "excel!ExcelScript.PageBreak:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVerticalPageBreaks"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#getVisibility:member(1)",
                  "docComment": "/**\n * The Visibility of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisibility(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SheetVisibility",
                      "canonicalReference": "excel!ExcelScript.SheetVisibility:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisibility"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#refreshAllPivotTables:member(1)",
                  "docComment": "/**\n * Refreshes all the pivot tables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refreshAllPivotTables(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refreshAllPivotTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#removeAllHorizontalPageBreaks:member(1)",
                  "docComment": "/**\n * Resets all manual page breaks in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAllHorizontalPageBreaks(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "removeAllHorizontalPageBreaks"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#removeAllVerticalPageBreaks:member(1)",
                  "docComment": "/**\n * Resets all manual page breaks in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeAllVerticalPageBreaks(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "removeAllVerticalPageBreaks"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#replaceAll:member(1)",
                  "docComment": "/**\n * Finds and replaces the given string based on the criteria specified within the current worksheet.\n *\n * @param text - String to find.\n *\n * @param replacement - String to replace the original with.\n *\n * @param criteria - Additional Replace Criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "replaceAll(\n            text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            replacement: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplaceCriteria",
                      "canonicalReference": "excel!ExcelScript.ReplaceCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "replacement",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "replaceAll"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setEnableCalculation:member(1)",
                  "docComment": "/**\n * Determines if Excel should recalculate the worksheet when necessary. True if Excel recalculates the worksheet when necessary. False if Excel doesn't recalculate the sheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnableCalculation(enableCalculation: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enableCalculation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setEnableCalculation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setName:member(1)",
                  "docComment": "/**\n * The display name of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setName(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setName"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setPosition:member(1)",
                  "docComment": "/**\n * The zero-based position of the worksheet within the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setShowGridlines:member(1)",
                  "docComment": "/**\n * Specifies if gridlines are visible to the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowGridlines(showGridlines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showGridlines",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowGridlines"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setShowHeadings:member(1)",
                  "docComment": "/**\n * Specifies if headings are visible to the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setShowHeadings(showHeadings: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "showHeadings",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setShowHeadings"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setStandardWidth:member(1)",
                  "docComment": "/**\n * Specifies the standard (default) width of all the columns in the worksheet. One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setStandardWidth(standardWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "standardWidth",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setStandardWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setTabColor:member(1)",
                  "docComment": "/**\n * The tab color of the worksheet. When retrieving the tab color, if the worksheet is invisible, the value will be null. If the worksheet is visible but the tab color is set to auto, an empty string will be returned. Otherwise, the property will be set to a color, in the form \"#123456\" When setting the color, use an empty-string to set an \"auto\" color, or a real color otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTabColor(tabColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tabColor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setTabColor"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#setVisibility:member(1)",
                  "docComment": "/**\n * The Visibility of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVisibility(visibility: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SheetVisibility",
                      "canonicalReference": "excel!ExcelScript.SheetVisibility:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibility",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setVisibility"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.Worksheet#showOutlineLevels:member(1)",
                  "docComment": "/**\n * Shows row or column groups by their outline levels. Outlines group and summarize a list of data in the worksheet. The `rowLevels` and `columnLevels` parameters specify how many levels of the outline will be displayed. The acceptable argument range is between 0 and 8. A value of 0 does not change the current display. A value greater than the current number of levels displays all the levels.\n *\n * @param rowLevels - The number of row levels of an outline to display.\n *\n * @param columnLevels - The number of column levels of an outline to display.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showOutlineLevels(rowLevels: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", columnLevels: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowLevels",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "columnLevels",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "showOutlineLevels"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetFreezePanes "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetFreezePanes",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes#freezeAt:member(1)",
                  "docComment": "/**\n * Sets the frozen cells in the active worksheet view. The range provided corresponds to cells that will be frozen in the top- and left-most pane.\n *\n * @param frozenRange - A range that represents the cells to be frozen, or null to remove all frozen panes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "freezeAt(frozenRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "frozenRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "freezeAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes#freezeColumns:member(1)",
                  "docComment": "/**\n * Freeze the first column(s) of the worksheet in place.\n *\n * @param count - Optional number of columns to freeze, or zero to unfreeze all columns\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "freezeColumns(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "freezeColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes#freezeRows:member(1)",
                  "docComment": "/**\n * Freeze the top row(s) of the worksheet in place.\n *\n * @param count - Optional number of rows to freeze, or zero to unfreeze all rows\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "freezeRows(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "freezeRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes#getLocation:member(1)",
                  "docComment": "/**\n * Gets a range that describes the frozen cells in the active worksheet view. The frozen range is corresponds to cells that are frozen in the top- and left-most pane. If there is no frozen pane, returns a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!ExcelScript.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetFreezePanes#unfreeze:member(1)",
                  "docComment": "/**\n * Removes all frozen panes in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unfreeze(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "unfreeze"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!ExcelScript.WorksheetPositionType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum WorksheetPositionType "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetPositionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.WorksheetPositionType.after:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "after"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "after",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.WorksheetPositionType.before:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "before"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "before",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.WorksheetPositionType.beginning:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginning"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginning",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.WorksheetPositionType.end:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "end",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!ExcelScript.WorksheetPositionType.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.WorksheetProtection:interface",
              "docComment": "/**\n * Represents the protection of a sheet object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetProtection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtection#getOptions:member(1)",
                  "docComment": "/**\n * Specifies the protection options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOptions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetProtectionOptions",
                      "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOptions"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtection#getProtected:member(1)",
                  "docComment": "/**\n * Specifies if the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getProtected(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getProtected"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtection#protect:member(1)",
                  "docComment": "/**\n * Protects a worksheet. Fails if the worksheet has already been protected.\n *\n * @param options - Optional. Sheet protection options.\n *\n * @param password - Optional. Sheet protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "protect(options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetProtectionOptions",
                      "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "protect"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtection#unprotect:member(1)",
                  "docComment": "/**\n * Unprotects a worksheet.\n *\n * @param password - sheet protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unprotect(password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "unprotect"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions:interface",
              "docComment": "/**\n * Represents the options in sheet protection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetProtectionOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetProtectionOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowAutoFilter:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing using auto filter feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowAutoFilter?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowAutoFilter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowDeleteColumns:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing deleting columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowDeleteColumns?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowDeleteColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowDeleteRows:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing deleting rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowDeleteRows?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowDeleteRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowEditObjects:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing editing objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowEditObjects?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowEditObjects",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowEditScenarios:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing editing scenarios.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowEditScenarios?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowEditScenarios",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowFormatCells:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing formatting cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowFormatCells?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowFormatCells",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowFormatColumns:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing formatting columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowFormatColumns?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowFormatColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowFormatRows:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing formatting rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowFormatRows?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowFormatRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowInsertColumns:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing inserting columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowInsertColumns?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowInsertColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowInsertHyperlinks:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing inserting hyperlinks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowInsertHyperlinks?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowInsertHyperlinks",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowInsertRows:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing inserting rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowInsertRows?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowInsertRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowPivotTables:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing using PivotTable feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowPivotTables?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowPivotTables",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#allowSort:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing using sort feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowSort?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowSort",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetProtectionOptions#selectionMode:member",
                  "docComment": "/**\n * Represents the worksheet protection option of selection mode.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "selectionMode?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ProtectionSelectionMode",
                      "canonicalReference": "excel!ExcelScript.ProtectionSelectionMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "selectionMode",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!ExcelScript.WorksheetSearchCriteria:interface",
              "docComment": "/**\n * Represents the worksheet search criteria to be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetSearchCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetSearchCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetSearchCriteria#completeMatch:member",
                  "docComment": "/**\n * Specifies if the match needs to be complete or partial. A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`). Default is false (partial).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "completeMatch?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "completeMatch",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!ExcelScript.WorksheetSearchCriteria#matchCase:member",
                  "docComment": "/**\n * Specifies if the match is case sensitive. Default is false (insensitive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        }
      ]
    }
  ]
}
