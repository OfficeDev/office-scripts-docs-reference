{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.10",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "excel!",
  "docComment": "",
  "name": "excel",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "excel!",
      "name": "",
      "members": [
        {
          "kind": "Namespace",
          "canonicalReference": "excel!Excel:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace Excel "
            }
          ],
          "releaseTag": "Public",
          "name": "Excel",
          "members": [
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.AggregationFunction:enum",
              "docComment": "/**\n * Aggregation Function for the Data Pivot Field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum AggregationFunction "
                }
              ],
              "releaseTag": "Public",
              "name": "AggregationFunction",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.automatic:member",
                  "docComment": "/**\n * Excel will automatically select the aggregation based on the data items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.average:member",
                  "docComment": "/**\n * Aggregate using the average of the data, equivalent to the AVERAGE function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "average = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"average\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "average",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.count:member",
                  "docComment": "/**\n * Aggregate using the count of items in the data, equivalent to the COUNTA function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "count = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"count\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.countNumbers:member",
                  "docComment": "/**\n * Aggregate using the count of numbers in the data, equivalent to the COUNT function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "countNumbers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"countNumbers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "countNumbers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.max:member",
                  "docComment": "/**\n * Aggregate using the maximum value of the data, equivalent to the MAX function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "max = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"max\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "max",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.min:member",
                  "docComment": "/**\n * Aggregate using the minimum value of the data, equivalent to the MIN function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "min = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"min\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "min",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.product:member",
                  "docComment": "/**\n * Aggregate using the product of the data, equivalent to the PRODUCT function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "product = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"product\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "product",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.standardDeviation:member",
                  "docComment": "/**\n * Aggregate using the standard deviation of the data, equivalent to the STDEV function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviation = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"standardDeviation\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviation",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.standardDeviationP:member",
                  "docComment": "/**\n * Aggregate using the standard deviation of the data, equivalent to the STDEVP function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviationP = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"standardDeviationP\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviationP",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.sum:member",
                  "docComment": "/**\n * Aggregate using the sum of the data, equivalent to the SUM function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sum = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sum\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sum",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.unknown:member",
                  "docComment": "/**\n * Aggregation function is unknown or unsupported.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unknown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.variance:member",
                  "docComment": "/**\n * Aggregate using the variance of the data, equivalent to the VAR function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "variance = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"variance\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "variance",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AggregationFunction.varianceP:member",
                  "docComment": "/**\n * Aggregate using the variance of the data, equivalent to the VARP function.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "varianceP = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"varianceP\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "varianceP",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Application:interface",
              "docComment": "/**\n * Represents the Excel application that manages the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Application "
                }
              ],
              "releaseTag": "Public",
              "name": "Application",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Application#calculate:member(1)",
                  "docComment": "/**\n * Recalculate all currently opened workbooks in Excel.\n *\n * @param calculationType - Specifies the calculation type to use. See Excel.CalculationType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(calculationType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationType",
                      "canonicalReference": "excel!Excel.CalculationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "calculationType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "calculate"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#calculationEngineVersion:member",
                  "docComment": "/**\n * Returns the Excel calculation engine version used for the last full recalculation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly calculationEngineVersion: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculationEngineVersion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#calculationMode:member",
                  "docComment": "/**\n * Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode. Possible values are: `Automatic`, where Excel controls recalculation; `AutomaticExceptTables`, where Excel controls recalculation but ignores changes in tables; `Manual`, where calculation is done when the user requests it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculationMode: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationMode",
                      "canonicalReference": "excel!Excel.CalculationMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculationMode",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#calculationState:member",
                  "docComment": "/**\n * Returns the calculation state of the application. See Excel.CalculationState for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly calculationState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CalculationState",
                      "canonicalReference": "excel!Excel.CalculationState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculationState",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#cultureInfo:member",
                  "docComment": "/**\n * Provides information based on current system culture settings. This includes the culture names, number formatting, and other culturally dependent settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly cultureInfo: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CultureInfo",
                      "canonicalReference": "excel!Excel.CultureInfo:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cultureInfo",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#decimalSeparator:member",
                  "docComment": "/**\n * Gets the string used as the decimal separator for numeric values. This is based on Excel's local settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly decimalSeparator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decimalSeparator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#iterativeCalculation:member",
                  "docComment": "/**\n * Returns the Iterative Calculation settings. In Excel on Windows and Mac, the settings will apply to the Excel Application. In Excel on the web and other platforms, the settings will apply to the active workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly iterativeCalculation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IterativeCalculation",
                      "canonicalReference": "excel!Excel.IterativeCalculation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "iterativeCalculation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Application#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)",
                  "docComment": "/**\n * Suspends calculation until the next \"context.sync()\" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "suspendApiCalculationUntilNextSync(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "suspendApiCalculationUntilNextSync"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)",
                  "docComment": "/**\n * Suspends screen updating until the next `context.sync()` is called.\n *\n * **Note**: Don't call `suspendScreenUpdatingUntilNextSync` repeatedly (such as in a loop). Repeated calls will cause the Excel window to flicker.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "suspendScreenUpdatingUntilNextSync(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "suspendScreenUpdatingUntilNextSync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#thousandsSeparator:member",
                  "docComment": "/**\n * Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on Excel's local settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly thousandsSeparator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thousandsSeparator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Application#useSystemSeparators:member",
                  "docComment": "/**\n * Specifies if the system separators of Excel are enabled. System separators include the decimal separator and thousands separator.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly useSystemSeparators: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "useSystemSeparators",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ArrowheadLength:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ArrowheadLength "
                }
              ],
              "releaseTag": "Public",
              "name": "ArrowheadLength",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadLength.long:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "long = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"long\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "long",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadLength.medium:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "medium = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"medium\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "medium",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadLength.short:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "short = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"short\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "short",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ArrowheadStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ArrowheadStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ArrowheadStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadStyle.diamond:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diamond = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"diamond\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diamond",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadStyle.open:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "open = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"open\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "open",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadStyle.oval:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oval = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"oval\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oval",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadStyle.stealth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stealth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stealth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stealth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadStyle.triangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "triangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"triangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "triangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ArrowheadWidth:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ArrowheadWidth "
                }
              ],
              "releaseTag": "Public",
              "name": "ArrowheadWidth",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadWidth.medium:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "medium = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"medium\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "medium",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadWidth.narrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "narrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"narrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "narrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ArrowheadWidth.wide:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wide = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wide\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wide",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.AutoFillType:enum",
              "docComment": "/**\n * The behavior types when AutoFill is used on a range in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum AutoFillType "
                }
              ],
              "releaseTag": "Public",
              "name": "AutoFillType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillCopy:member",
                  "docComment": "/**\n * Populates the adjacent cells with data the selected data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillCopy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillCopy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillCopy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillDays:member",
                  "docComment": "/**\n * A version of \"FillSeries\" for dates that bases the pattern on either the day of the month or the day of the week, depending on the context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillDays = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillDays\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillDays",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillDefault:member",
                  "docComment": "/**\n * Populates the adjacent cells with data the selected data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillDefault = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillDefault\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillDefault",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillFormats:member",
                  "docComment": "/**\n * Populates the adjacent cells with the selected formulas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillFormats = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillFormats\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillFormats",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillMonths:member",
                  "docComment": "/**\n * A version of \"FillSeries\" for dates that bases the pattern on the month.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillMonths = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillMonths\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillMonths",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillSeries:member",
                  "docComment": "/**\n * Populates the adjacent cells with data that follows a pattern in the copied cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillSeries = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillSeries\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillSeries",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillValues:member",
                  "docComment": "/**\n * Populates the adjacent cells with the selected values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillValues = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillValues\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillValues",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillWeekdays:member",
                  "docComment": "/**\n * A version of \"FillSeries\" for dates that bases the pattern on the day of the week and only includes weekdays.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillWeekdays = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillWeekdays\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillWeekdays",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.fillYears:member",
                  "docComment": "/**\n * A version of \"FillSeries\" for dates that bases the pattern on the year.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillYears = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fillYears\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillYears",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.flashFill:member",
                  "docComment": "/**\n * Populates the adjacent cells by using Excel's FlashFill feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flashFill = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flashFill\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flashFill",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.growthTrend:member",
                  "docComment": "/**\n * A version of \"FillSeries\" for numbers that fills out the values in the adjacent cells according to a growth trend model.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "growthTrend = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"growthTrend\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "growthTrend",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.AutoFillType.linearTrend:member",
                  "docComment": "/**\n * A version of \"FillSeries\" for numbers that fills out the values in the adjacent cells according to a linear trend model.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linearTrend = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"linearTrend\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linearTrend",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.AutoFilter:interface",
              "docComment": "/**\n * Represents the AutoFilter object. AutoFilter turns the values in Excel column into specific filters based on the cell contents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AutoFilter "
                }
              ],
              "releaseTag": "Public",
              "name": "AutoFilter",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#apply:member(1)",
                  "docComment": "/**\n * Applies the AutoFilter to a range. This filters the column if column index and filter criteria are specified.\n *\n * @param range - The range over which the AutoFilter will apply on.\n *\n * @param columnIndex - The zero-based column index to which the AutoFilter is applied.\n *\n * @param criteria - The filter criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(\n            range: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            columnIndex?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!Excel.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "range",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "columnIndex",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#clearCriteria:member(1)",
                  "docComment": "/**\n * Clears the filter criteria of the AutoFilter.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearCriteria(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearCriteria"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.AutoFilter#criteria:member",
                  "docComment": "/**\n * An array that holds all the filter criteria in the autofiltered range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!Excel.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criteria",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.AutoFilter#enabled:member",
                  "docComment": "/**\n * Specifies if the AutoFilter is enabled.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "enabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#getRange:member(1)",
                  "docComment": "/**\n * Returns the Range object that represents the range to which the AutoFilter applies.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#getRangeOrNullObject:member(1)",
                  "docComment": "/**\n * Returns the Range object that represents the range to which the AutoFilter applies. If there is no Range object associated with the AutoFilter, this method returns a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeOrNullObject"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.AutoFilter#isDataFiltered:member",
                  "docComment": "/**\n * Specifies if the AutoFilter has filter criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isDataFiltered: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isDataFiltered",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#reapply:member(1)",
                  "docComment": "/**\n * Applies the specified Autofilter object currently on the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reapply(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "reapply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.AutoFilter#remove:member(1)",
                  "docComment": "/**\n * Removes the AutoFilter for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "remove"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.BasicDataValidation:interface",
              "docComment": "/**\n * Represents the Basic Type data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface BasicDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "BasicDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.BasicDataValidation#formula1:member",
                  "docComment": "/**\n * Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand. For example, setting formula1 to 10 and operator to GreaterThan means that valid data for the range must be greater than 10. When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.BasicDataValidation#formula2:member",
                  "docComment": "/**\n * With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan. When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.BasicDataValidation#operator:member",
                  "docComment": "/**\n * The operator to use for validating the data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationOperator",
                      "canonicalReference": "excel!Excel.DataValidationOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Binding:interface",
              "docComment": "/**\n * Represents an Office.js binding that is defined in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Binding "
                }
              ],
              "releaseTag": "Public",
              "name": "Binding",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Binding#delete:member(1)",
                  "docComment": "/**\n * Deletes the binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Binding#getRange:member(1)",
                  "docComment": "/**\n * Returns the range represented by the binding. Will throw an error if binding is not of the correct type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Binding#getTable:member(1)",
                  "docComment": "/**\n * Returns the table represented by the binding. Will throw an error if binding is not of the correct type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTable(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTable"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Binding#getText:member(1)",
                  "docComment": "/**\n * Returns the text represented by the binding. Will throw an error if binding is not of the correct type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getText"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Binding#id:member",
                  "docComment": "/**\n * Represents binding identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Binding#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Binding#type:member",
                  "docComment": "/**\n * Returns the type of the binding. See Excel.BindingType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!Excel.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.BindingCollection:interface",
              "docComment": "/**\n * Represents the collection of all the binding objects that are part of the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface BindingCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "BindingCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#add:member(1)",
                  "docComment": "/**\n * Add a new binding to a particular Range.\n *\n * @param range - Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name\n *\n * @param bindingType - Type of binding. See Excel.BindingType.\n *\n * @param id - Name of binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            range: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            bindingType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!Excel.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!Excel.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "range",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "bindingType",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#addFromNamedItem:member(1)",
                  "docComment": "/**\n * Add a new binding based on a named item in the workbook. If the named item references to multiple areas, the \"InvalidReference\" error will be returned.\n *\n * @param name - Name from which to create binding.\n *\n * @param bindingType - Type of binding. See Excel.BindingType.\n *\n * @param id - Name of binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFromNamedItem(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            bindingType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!Excel.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!Excel.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "bindingType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addFromNamedItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#addFromSelection:member(1)",
                  "docComment": "/**\n * Add a new binding based on the current selection. If the selection has multiple areas, the \"InvalidReference\" error will be returned.\n *\n * @param bindingType - Type of binding. See Excel.BindingType.\n *\n * @param id - Name of binding.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFromSelection(bindingType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingType",
                      "canonicalReference": "excel!Excel.BindingType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ", id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!Excel.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bindingType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "addFromSelection"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.BindingCollection#count:member",
                  "docComment": "/**\n * Returns the number of bindings in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of bindings in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a binding object by ID.\n *\n * @param id - Id of the binding object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!Excel.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a binding object based on its position in the items array.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!Excel.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a binding object by ID. If the binding object does not exist, will return a null object.\n *\n * @param id - Id of the binding object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Binding",
                      "canonicalReference": "excel!Excel.Binding:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.BindingCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.BindingType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BindingType "
                }
              ],
              "releaseTag": "Public",
              "name": "BindingType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BindingType.range:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "range = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"range\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "range",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BindingType.table:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "table = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"table\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "table",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BindingType.text:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"text\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.BorderIndex:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BorderIndex "
                }
              ],
              "releaseTag": "Public",
              "name": "BorderIndex",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.diagonalDown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalDown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"diagonalDown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalDown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.diagonalUp:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalUp = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"diagonalUp\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalUp",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.edgeBottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeBottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeBottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeBottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.edgeLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeLeft = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeLeft\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeLeft",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.edgeRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeRight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeRight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeRight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.edgeTop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeTop = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeTop\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeTop",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.insideHorizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideHorizontal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"insideHorizontal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideHorizontal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderIndex.insideVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideVertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"insideVertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideVertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.BorderLineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BorderLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "BorderLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.continuous:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continuous = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"continuous\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continuous",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDotDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"double\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderLineStyle.slantDashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "slantDashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"slantDashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "slantDashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.BorderWeight:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BorderWeight "
                }
              ],
              "releaseTag": "Public",
              "name": "BorderWeight",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderWeight.hairline:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hairline = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hairline\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hairline",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderWeight.medium:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "medium = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"medium\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "medium",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderWeight.thick:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thick = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thick\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thick",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BorderWeight.thin:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thin = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thin\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thin",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.BuiltInStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum BuiltInStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "BuiltInStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent1_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1_20 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent1_20\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1_20",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent1_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1_40 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent1_40\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1_40",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent1_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent1_60 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent1_60\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent1_60",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent2_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2_20 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent2_20\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2_20",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent2_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2_40 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent2_40\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2_40",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent2_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent2_60 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent2_60\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent2_60",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent3_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3_20 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent3_20\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3_20",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent3_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3_40 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent3_40\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3_40",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent3_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent3_60 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent3_60\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent3_60",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent4_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4_20 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent4_20\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4_20",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent4_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4_40 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent4_40\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4_40",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent4_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent4_60 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent4_60\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent4_60",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent5_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5_20 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent5_20\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5_20",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent5_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5_40 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent5_40\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5_40",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent5_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent5_60 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent5_60\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent5_60",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent6\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent6_20:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6_20 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent6_20\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6_20",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent6_40:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6_40 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent6_40\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6_40",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.accent6_60:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accent6_60 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accent6_60\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accent6_60",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.bad:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bad = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bad\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bad",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.calculation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculation = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"calculation\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculation",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.checkCell:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "checkCell = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"checkCell\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "checkCell",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.comma:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "comma = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"comma\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "comma",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.currency:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "currency = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"currency\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "currency",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.emphasis1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emphasis1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"emphasis1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "emphasis1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.emphasis2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emphasis2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"emphasis2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "emphasis2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.emphasis3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emphasis3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"emphasis3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "emphasis3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.explanatoryText:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "explanatoryText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"explanatoryText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "explanatoryText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.good:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "good = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"good\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "good",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.heading1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heading1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.heading2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heading2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.heading3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heading3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.heading4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heading4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heading4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heading4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.hlink:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hlink = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hlink\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hlink",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.hlinkTrav:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hlinkTrav = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hlinkTrav\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hlinkTrav",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.input:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "input = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"input\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "input",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.linkedCell:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkedCell = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"linkedCell\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkedCell",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.neutral:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "neutral = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"neutral\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "neutral",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.normal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"normal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "normal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.note:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "note = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"note\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "note",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.output:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "output = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"output\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "output",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.sheetTitle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sheetTitle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sheetTitle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sheetTitle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.total:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "total = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"total\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "total",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.warningText:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "warningText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"warningText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "warningText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.wholeComma:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeComma = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wholeComma\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeComma",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.BuiltInStyle.wholeDollar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeDollar = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wholeDollar\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeDollar",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.CalculationMode:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum CalculationMode "
                }
              ],
              "releaseTag": "Public",
              "name": "CalculationMode",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationMode.automatic:member",
                  "docComment": "/**\n * The default recalculation behavior where Excel calculates new formula results every time the relevant data is changed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationMode.automaticExceptTables:member",
                  "docComment": "/**\n * Calculates new formula results every time the relevant data is changed, unless the formula is in a data table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automaticExceptTables = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automaticExceptTables\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automaticExceptTables",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationMode.manual:member",
                  "docComment": "/**\n * Calculations only occur when the user or add-in requests them.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "manual = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"manual\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "manual",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.CalculationState:enum",
              "docComment": "/**\n * Represents the state of calculation across the entire Excel application.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum CalculationState "
                }
              ],
              "releaseTag": "Public",
              "name": "CalculationState",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationState.calculating:member",
                  "docComment": "/**\n * Calculations in progress.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculating = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"calculating\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculating",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationState.done:member",
                  "docComment": "/**\n * Calculations complete.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "done = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"done\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "done",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationState.pending:member",
                  "docComment": "/**\n * Changes that trigger calculation have been made, but a recalculation has not yet been performed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.CalculationType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum CalculationType "
                }
              ],
              "releaseTag": "Public",
              "name": "CalculationType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationType.full:member",
                  "docComment": "/**\n * This will mark all cells as dirty and then recalculate them.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "full = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"full\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "full",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationType.fullRebuild:member",
                  "docComment": "/**\n * This will rebuild the full dependency chain, mark all cells as dirty and then recalculate them.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fullRebuild = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fullRebuild\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fullRebuild",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.CalculationType.recalculate:member",
                  "docComment": "/**\n * Recalculates all cells that Excel has marked as dirty, that is, dependents of volatile or changed data, and cells programmatically marked as dirty.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "recalculate = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"recalculate\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "recalculate",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellBorder:interface",
              "docComment": "/**\n * Represents the properties of a single border returned by `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the border property input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "CellBorder",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorder#color:member",
                  "docComment": "/**\n * Represents the `color` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorder#style:member",
                  "docComment": "/**\n * Represents the `style` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderLineStyle",
                      "canonicalReference": "excel!Excel.BorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorder#tintAndShade:member",
                  "docComment": "/**\n * Represents the `tintAndShade` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorder#weight:member",
                  "docComment": "/**\n * Represents the `weight` property of a single border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderWeight",
                      "canonicalReference": "excel!Excel.BorderWeight:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellBorderCollection:interface",
              "docComment": "/**\n * Represents the `format.borders` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.borders` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellBorderCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CellBorderCollection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#bottom:member",
                  "docComment": "/**\n * Represents the `format.borders.bottom` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#diagonalDown:member",
                  "docComment": "/**\n * Represents the `format.borders.diagonalDown` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalDown?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalDown",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#diagonalUp:member",
                  "docComment": "/**\n * Represents the `format.borders.diagonalUp` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalUp?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalUp",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#horizontal:member",
                  "docComment": "/**\n * Represents the `format.borders.horizontal` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontal?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#left:member",
                  "docComment": "/**\n * Represents the `format.borders.left` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#right:member",
                  "docComment": "/**\n * Represents the `format.borders.right` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#top:member",
                  "docComment": "/**\n * Represents the `format.borders.top` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellBorderCollection#vertical:member",
                  "docComment": "/**\n * Represents the `format.borders.vertical` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellBorder",
                      "canonicalReference": "excel!Excel.CellBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellPropertiesBorderLoadOptions:interface",
              "docComment": "/**\n * Specifies which properties to load on the `format.borders` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesBorderLoadOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesBorderLoadOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesBorderLoadOptions#color:member",
                  "docComment": "/**\n * Specifies whether to load on the `color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesBorderLoadOptions#style:member",
                  "docComment": "/**\n * Specifies whether to load on the `style` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesBorderLoadOptions#tintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load on the `tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesBorderLoadOptions#weight:member",
                  "docComment": "/**\n * Specifies whether to load on the `weight` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellPropertiesFill:interface",
              "docComment": "/**\n * Represents the `format.fill` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.fill` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFill "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFill",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFill#color:member",
                  "docComment": "/**\n * Represents the `format.fill.color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFill#pattern:member",
                  "docComment": "/**\n * Represents the `format.fill.pattern` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FillPattern",
                      "canonicalReference": "excel!Excel.FillPattern:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFill#patternColor:member",
                  "docComment": "/**\n * Represents the `format.fill.patternColor` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternColor?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFill#patternTintAndShade:member",
                  "docComment": "/**\n * Represents the `format.fill.patternTintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternTintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternTintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFill#tintAndShade:member",
                  "docComment": "/**\n * Represents the `format.fill.tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellPropertiesFillLoadOptions:interface",
              "docComment": "/**\n * Specifies which properties to load on the `format.fill` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFillLoadOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFillLoadOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFillLoadOptions#color:member",
                  "docComment": "/**\n * Specifies whether to load the `color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFillLoadOptions#pattern:member",
                  "docComment": "/**\n * Specifies whether to load the `pattern` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFillLoadOptions#patternColor:member",
                  "docComment": "/**\n * Specifies whether to load the `patternColor` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternColor?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFillLoadOptions#patternTintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load the `patternTintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternTintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternTintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFillLoadOptions#tintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load the `tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellPropertiesFont:interface",
              "docComment": "/**\n * Represents the `format.font` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.font` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFont "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFont",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#bold:member",
                  "docComment": "/**\n * Represents the `format.font.bold` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#color:member",
                  "docComment": "/**\n * Represents the `format.font.color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#italic:member",
                  "docComment": "/**\n * Represents the `format.font.italic` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#name:member",
                  "docComment": "/**\n * Represents the `format.font.name` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#size:member",
                  "docComment": "/**\n * Represents the `format.font.size` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#strikethrough:member",
                  "docComment": "/**\n * Represents the `format.font.strikethrough` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strikethrough?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strikethrough",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#subscript:member",
                  "docComment": "/**\n * Represents the `format.font.subscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#superscript:member",
                  "docComment": "/**\n * Represents the `format.font.superscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "superscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "superscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#tintAndShade:member",
                  "docComment": "/**\n * Represents the `format.font.tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFont#underline:member",
                  "docComment": "/**\n * Represents the `format.font.underline` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeUnderlineStyle",
                      "canonicalReference": "excel!Excel.RangeUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions:interface",
              "docComment": "/**\n * Specifies which properties to load on the `format.font` object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesFontLoadOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesFontLoadOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#bold:member",
                  "docComment": "/**\n * Specifies whether to load on the `bold` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#color:member",
                  "docComment": "/**\n * Specifies whether to load on the `color` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#italic:member",
                  "docComment": "/**\n * Specifies whether to load on the `italic` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#name:member",
                  "docComment": "/**\n * Specifies whether to load on the `name` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#size:member",
                  "docComment": "/**\n * Specifies whether to load on the `size` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#strikethrough:member",
                  "docComment": "/**\n * Specifies whether to load on the `strikethrough` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strikethrough?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strikethrough",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#subscript:member",
                  "docComment": "/**\n * Specifies whether to load on the `subscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#superscript:member",
                  "docComment": "/**\n * Specifies whether to load on the `superscript` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "superscript?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "superscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#tintAndShade:member",
                  "docComment": "/**\n * Specifies whether to load on the `tintAndShade` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesFontLoadOptions#underline:member",
                  "docComment": "/**\n * Specifies whether to load on the `underline` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellPropertiesProtection:interface",
              "docComment": "/**\n * Represents the `format.protection` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.protection` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellPropertiesProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "CellPropertiesProtection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesProtection#formulaHidden:member",
                  "docComment": "/**\n * Represents the `format.protection.formulaHidden` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulaHidden?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulaHidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellPropertiesProtection#locked:member",
                  "docComment": "/**\n * Represents the `format.protection.locked` property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "locked?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "locked",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CellValueConditionalFormat:interface",
              "docComment": "/**\n * Represents a cell value conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CellValueConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "CellValueConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellValueConditionalFormat#format:member",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!Excel.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CellValueConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CellValueConditionalFormat#rule:member",
                  "docComment": "/**\n * Specifies the Rule object on this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalCellValueRule",
                      "canonicalReference": "excel!Excel.ConditionalCellValueRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Chart:interface",
              "docComment": "/**\n * Represents a chart object in a workbook. To learn more about the Chart object model, see {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts | Work with charts using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Chart "
                }
              ],
              "releaseTag": "Public",
              "name": "Chart",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Chart#activate:member(1)",
                  "docComment": "/**\n * Activates the chart in the Excel UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "activate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "activate"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#axes:member",
                  "docComment": "/**\n * Represents chart axes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly axes: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxes",
                      "canonicalReference": "excel!Excel.ChartAxes:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "axes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#categoryLabelLevel:member",
                  "docComment": "/**\n * Specifies a ChartCategoryLabelLevel enumeration constant referring to the level of where the category labels are being sourced from.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "categoryLabelLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "categoryLabelLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#chartType:member",
                  "docComment": "/**\n * Specifies the type of the chart. See Excel.ChartType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!Excel.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#dataLabels:member",
                  "docComment": "/**\n * Represents the datalabels on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataLabels: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabels",
                      "canonicalReference": "excel!Excel.ChartDataLabels:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataLabels",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Chart#delete:member(1)",
                  "docComment": "/**\n * Deletes the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#displayBlanksAs:member",
                  "docComment": "/**\n * Specifies the way that blank cells are plotted on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayBlanksAs: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDisplayBlanksAs",
                      "canonicalReference": "excel!Excel.ChartDisplayBlanksAs:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "displayBlanksAs",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#format:member",
                  "docComment": "/**\n * Encapsulates the format properties for the chart area.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAreaFormat",
                      "canonicalReference": "excel!Excel.ChartAreaFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Chart#getImage:member(1)",
                  "docComment": "/**\n * Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions. The aspect ratio is preserved as part of the resizing.\n *\n * @param height - (Optional) The desired height of the resulting image.\n *\n * @param width - (Optional) The desired width of the resulting image.\n *\n * @param fittingMode - (Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getImage(\n            width?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            height?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            fittingMode?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ImageFittingMode",
                      "canonicalReference": "excel!Excel.ImageFittingMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "width",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "height",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "fittingMode",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "getImage"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#height:member",
                  "docComment": "/**\n * Specifies the height, in points, of the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#id:member",
                  "docComment": "/**\n * The unique id of chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#left:member",
                  "docComment": "/**\n * The distance, in points, from the left side of the chart to the worksheet origin.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#legend:member",
                  "docComment": "/**\n * Represents the legend for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly legend: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegend",
                      "canonicalReference": "excel!Excel.ChartLegend:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "legend",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Chart#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#name:member",
                  "docComment": "/**\n * Specifies the name of a chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#pivotOptions:member",
                  "docComment": "/**\n * Encapsulates the options for a pivot chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly pivotOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPivotOptions",
                      "canonicalReference": "excel!Excel.ChartPivotOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pivotOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#plotArea:member",
                  "docComment": "/**\n * Represents the plotArea for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly plotArea: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotArea",
                      "canonicalReference": "excel!Excel.ChartPlotArea:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plotArea",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#plotBy:member",
                  "docComment": "/**\n * Specifies the way columns or rows are used as data series on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plotBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotBy",
                      "canonicalReference": "excel!Excel.ChartPlotBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plotBy",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#plotVisibleOnly:member",
                  "docComment": "/**\n * True if only visible cells are plotted. False if both visible and hidden cells are plotted.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plotVisibleOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plotVisibleOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#series:member",
                  "docComment": "/**\n * Represents either a single series or collection of series in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly series: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesCollection",
                      "canonicalReference": "excel!Excel.ChartSeriesCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "series",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#seriesNameLevel:member",
                  "docComment": "/**\n * Specifies a ChartSeriesNameLevel enumeration constant referring to the level of where the series names are being sourced from.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "seriesNameLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "seriesNameLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Chart#setData:member(1)",
                  "docComment": "/**\n * Resets the source data for the chart.\n *\n * @param sourceData - The range object corresponding to the source data.\n *\n * @param seriesBy - Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto (default), Rows, and Columns. See Excel.ChartSeriesBy for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setData(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", seriesBy?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesBy",
                      "canonicalReference": "excel!Excel.ChartSeriesBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "seriesBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "setData"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Chart#setPosition:member(1)",
                  "docComment": "/**\n * Positions the chart relative to cells on the worksheet.\n *\n * @param startCell - The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.\n *\n * @param endCell - (Optional) The end cell. If specified, the chart's width and height will be set to fully cover up this cell/range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(startCell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", endCell?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "startCell",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "endCell",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "setPosition"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#showAllFieldButtons:member",
                  "docComment": "/**\n * Specifies whether to display all field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAllFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAllFieldButtons",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#showDataLabelsOverMaximum:member",
                  "docComment": "/**\n * Specifies whether to show the data labels when the value is greater than the maximum value on the value axis. If value axis became smaller than the size of data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showDataLabelsOverMaximum: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showDataLabelsOverMaximum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#style:member",
                  "docComment": "/**\n * Specifies the chart style for the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#title:member",
                  "docComment": "/**\n * Specifies the title of the specified chart, including the text, visibility, position, and formatting of the title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly title: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitle",
                      "canonicalReference": "excel!Excel.ChartTitle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#top:member",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#width:member",
                  "docComment": "/**\n * Specifies the width, in points, of the chart object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Chart#worksheet:member",
                  "docComment": "/**\n * The worksheet containing the current chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartAreaFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the overall chart area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAreaFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAreaFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAreaFormat#border:member",
                  "docComment": "/**\n * Represents the border format of chart area, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAreaFormat#colorScheme:member",
                  "docComment": "/**\n * Specifies the color scheme of the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorScheme: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartColorScheme",
                      "canonicalReference": "excel!Excel.ChartColorScheme:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorScheme",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAreaFormat#fill:member",
                  "docComment": "/**\n * Represents the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAreaFormat#font:member",
                  "docComment": "/**\n * Represents the font attributes (font name, font size, color, etc.) for the current object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAreaFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAreaFormat#roundedCorners:member",
                  "docComment": "/**\n * Specifies if the chart area of the chart has rounded corners.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundedCorners: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundedCorners",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartAxes:interface",
              "docComment": "/**\n * Represents the chart axes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxes "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxes",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxes#categoryAxis:member",
                  "docComment": "/**\n * Represents the category axis in a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly categoryAxis: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!Excel.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "categoryAxis",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxes#getItem:member(1)",
                  "docComment": "/**\n * Returns the specific axis identified by type and group.\n *\n * @param type - Specifies the axis type. See Excel.ChartAxisType for details.\n *\n * @param group - Optional. Specifies the axis group. See Excel.ChartAxisGroup for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisType",
                      "canonicalReference": "excel!Excel.ChartAxisType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ", group?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisGroup",
                      "canonicalReference": "excel!Excel.ChartAxisGroup:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!Excel.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "group",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxes#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxes#seriesAxis:member",
                  "docComment": "/**\n * Represents the series axis of a 3-dimensional chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly seriesAxis: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!Excel.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "seriesAxis",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxes#valueAxis:member",
                  "docComment": "/**\n * Represents the value axis in an axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly valueAxis: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxis",
                      "canonicalReference": "excel!Excel.ChartAxis:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "valueAxis",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartAxis:interface",
              "docComment": "/**\n * Represents a single axis in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxis "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxis",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#alignment:member",
                  "docComment": "/**\n * Specifies the alignment for the specified axis tick label. See Excel.ChartTextHorizontalAlignment for detail.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "alignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTickLabelAlignment",
                      "canonicalReference": "excel!Excel.ChartTickLabelAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "alignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#axisGroup:member",
                  "docComment": "/**\n * Specifies the group for the specified axis. See Excel.ChartAxisGroup for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly axisGroup: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisGroup",
                      "canonicalReference": "excel!Excel.ChartAxisGroup:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "axisGroup",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#baseTimeUnit:member",
                  "docComment": "/**\n * Specifies the base unit for the specified category axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "baseTimeUnit: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!Excel.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "baseTimeUnit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#categoryType:member",
                  "docComment": "/**\n * Specifies the category axis type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "categoryType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisCategoryType",
                      "canonicalReference": "excel!Excel.ChartAxisCategoryType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "categoryType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#customDisplayUnit:member",
                  "docComment": "/**\n * Specifies the custom axis display unit value. To set this property, please use the SetCustomDisplayUnit(double) method.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly customDisplayUnit: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "customDisplayUnit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#displayUnit:member",
                  "docComment": "/**\n * Represents the axis display unit. See Excel.ChartAxisDisplayUnit for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "displayUnit: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisDisplayUnit",
                      "canonicalReference": "excel!Excel.ChartAxisDisplayUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "displayUnit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#format:member",
                  "docComment": "/**\n * Represents the formatting of a chart object, which includes line and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisFormat",
                      "canonicalReference": "excel!Excel.ChartAxisFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#height:member",
                  "docComment": "/**\n * Specifies the height, in points, of the chart axis. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#isBetweenCategories:member",
                  "docComment": "/**\n * Specifies if the value axis crosses the category axis between categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isBetweenCategories: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isBetweenCategories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#left:member",
                  "docComment": "/**\n * Specifies the distance, in points, from the left edge of the axis to the left of chart area. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#linkNumberFormat:member",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells. If true, the number format will change in the labels when it changes in the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkNumberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxis#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#logBase:member",
                  "docComment": "/**\n * Specifies the base of the logarithm when using logarithmic scales.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logBase: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logBase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#majorGridlines:member",
                  "docComment": "/**\n * Returns a Gridlines object that represents the major gridlines for the specified axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly majorGridlines: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGridlines",
                      "canonicalReference": "excel!Excel.ChartGridlines:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "majorGridlines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#majorTickMark:member",
                  "docComment": "/**\n * Specifies the type of major tick mark for the specified axis. See Excel.ChartAxisTickMark for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "majorTickMark: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickMark",
                      "canonicalReference": "excel!Excel.ChartAxisTickMark:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "majorTickMark",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#majorTimeUnitScale:member",
                  "docComment": "/**\n * Specifies the major unit scale value for the category axis when the CategoryType property is set to TimeScale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "majorTimeUnitScale: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!Excel.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "majorTimeUnitScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#majorUnit:member",
                  "docComment": "/**\n * Represents the interval between two major tick marks. Can be set to a numeric value or an empty string. The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "majorUnit: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "majorUnit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#maximum:member",
                  "docComment": "/**\n * Represents the maximum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maximum: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maximum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#minimum:member",
                  "docComment": "/**\n * Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minimum: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minimum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#minorGridlines:member",
                  "docComment": "/**\n * Returns a Gridlines object that represents the minor gridlines for the specified axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly minorGridlines: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGridlines",
                      "canonicalReference": "excel!Excel.ChartGridlines:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minorGridlines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#minorTickMark:member",
                  "docComment": "/**\n * Specifies the type of minor tick mark for the specified axis. See Excel.ChartAxisTickMark for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minorTickMark: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickMark",
                      "canonicalReference": "excel!Excel.ChartAxisTickMark:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minorTickMark",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#minorTimeUnitScale:member",
                  "docComment": "/**\n * Specifies the minor unit scale value for the category axis when the CategoryType property is set to TimeScale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minorTimeUnitScale: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTimeUnit",
                      "canonicalReference": "excel!Excel.ChartAxisTimeUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minorTimeUnitScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#minorUnit:member",
                  "docComment": "/**\n * Represents the interval between two minor tick marks. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minorUnit: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minorUnit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#multiLevel:member",
                  "docComment": "/**\n * Specifies if an axis is multilevel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "multiLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "multiLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#numberFormat:member",
                  "docComment": "/**\n * Specifies the format code for the axis tick label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#offset:member",
                  "docComment": "/**\n * Specifies the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "offset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "offset",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#position:member",
                  "docComment": "/**\n * Specifies the specified axis position where the other axis crosses. See Excel.ChartAxisPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisPosition",
                      "canonicalReference": "excel!Excel.ChartAxisPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#positionAt:member",
                  "docComment": "/**\n * Specifies the specified axis position where the other axis crosses at. You should use the SetPositionAt(double) method to set this property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly positionAt: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "positionAt",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#reversePlotOrder:member",
                  "docComment": "/**\n * Specifies if Excel plots data points from last to first.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reversePlotOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "reversePlotOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#scaleType:member",
                  "docComment": "/**\n * Specifies the value axis scale type. See Excel.ChartAxisScaleType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisScaleType",
                      "canonicalReference": "excel!Excel.ChartAxisScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxis#setCategoryNames:member(1)",
                  "docComment": "/**\n * Sets all the category names for the specified axis.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCategoryNames(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCategoryNames"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxis#setCustomDisplayUnit:member(1)",
                  "docComment": "/**\n * Sets the axis display unit to a custom value.\n *\n * @param value - Custom value of the display unit.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCustomDisplayUnit(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setCustomDisplayUnit"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxis#setPositionAt:member(1)",
                  "docComment": "/**\n * Sets the specified axis position where the other axis crosses at.\n *\n * @param value - Custom value of the crosses at\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPositionAt(value: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setPositionAt"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#showDisplayUnitLabel:member",
                  "docComment": "/**\n * Specifies if the axis display unit label is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showDisplayUnitLabel: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showDisplayUnitLabel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#textOrientation:member",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart axis tick label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#tickLabelPosition:member",
                  "docComment": "/**\n * Specifies the position of tick-mark labels on the specified axis. See Excel.ChartAxisTickLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickLabelPosition: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTickLabelPosition",
                      "canonicalReference": "excel!Excel.ChartAxisTickLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tickLabelPosition",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#tickLabelSpacing:member",
                  "docComment": "/**\n * Specifies the number of categories or series between tick-mark labels. Can be a value from 1 through 31999 or an empty string for automatic setting. The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickLabelSpacing: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tickLabelSpacing",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#tickMarkSpacing:member",
                  "docComment": "/**\n * Specifies the number of categories or series between tick marks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickMarkSpacing: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tickMarkSpacing",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#title:member",
                  "docComment": "/**\n * Represents the axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly title: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTitle",
                      "canonicalReference": "excel!Excel.ChartAxisTitle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#top:member",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of the axis to the top of chart area. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#type:member",
                  "docComment": "/**\n * Specifies the axis type. See Excel.ChartAxisType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisType",
                      "canonicalReference": "excel!Excel.ChartAxisType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#visible:member",
                  "docComment": "/**\n * Specifies if the axis is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxis#width:member",
                  "docComment": "/**\n * Specifies the width, in points, of the chart axis. Null if the axis is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisCategoryType:enum",
              "docComment": "/**\n * Specifies the type of the category axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisCategoryType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisCategoryType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisCategoryType.automatic:member",
                  "docComment": "/**\n * Excel controls the axis type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisCategoryType.dateAxis:member",
                  "docComment": "/**\n * Axis groups data on a time scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dateAxis = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dateAxis\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dateAxis",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisCategoryType.textAxis:member",
                  "docComment": "/**\n * Axis groups data by an arbitrary set of categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textAxis = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"textAxis\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textAxis",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisDisplayUnit:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisDisplayUnit "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisDisplayUnit",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.billions:member",
                  "docComment": "/**\n * This will set the axis in units of billions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "billions = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"billions\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "billions",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.custom:member",
                  "docComment": "/**\n * This will set the axis in units of custom value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.hundredMillions:member",
                  "docComment": "/**\n * This will set the axis in units of hundreds of millions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hundredMillions = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hundredMillions\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hundredMillions",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.hundreds:member",
                  "docComment": "/**\n * This will set the axis in units of hundreds.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hundreds = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hundreds\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hundreds",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.hundredThousands:member",
                  "docComment": "/**\n * This will set the axis in units of hundreds of thousands.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hundredThousands = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hundredThousands\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hundredThousands",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.millions:member",
                  "docComment": "/**\n * This will set the axis in units of millions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "millions = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"millions\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "millions",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.none:member",
                  "docComment": "/**\n * Default option. This will reset display unit to the axis, and set unit label invisible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.tenMillions:member",
                  "docComment": "/**\n * This will set the axis in units of tens of millions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tenMillions = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"tenMillions\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tenMillions",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.tenThousands:member",
                  "docComment": "/**\n * This will set the axis in units of tens of thousands.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tenThousands = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"tenThousands\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tenThousands",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.thousands:member",
                  "docComment": "/**\n * This will set the axis in units of thousands.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thousands = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thousands\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thousands",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisDisplayUnit.trillions:member",
                  "docComment": "/**\n * This will set the axis in units of trillions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "trillions = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"trillions\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "trillions",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartAxisFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxisFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisFormat#fill:member",
                  "docComment": "/**\n * Specifies chart fill formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisFormat#font:member",
                  "docComment": "/**\n * Specifies the font attributes (font name, font size, color, etc.) for a chart axis element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisFormat#line:member",
                  "docComment": "/**\n * Specifies chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly line: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!Excel.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxisFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisGroup:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisGroup "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisGroup",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisGroup.primary:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "primary = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"primary\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "primary",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisGroup.secondary:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "secondary = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"secondary\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "secondary",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisPosition.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisPosition.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisPosition.maximum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maximum = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"maximum\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maximum",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisPosition.minimum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minimum = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"minimum\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minimum",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisScaleType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisScaleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisScaleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisScaleType.linear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linear = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"linear\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linear",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisScaleType.logarithmic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logarithmic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"logarithmic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logarithmic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisTickLabelPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisTickLabelPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTickLabelPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickLabelPosition.high:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "high = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"high\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "high",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickLabelPosition.low:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "low = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"low\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "low",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickLabelPosition.nextToAxis:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextToAxis = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextToAxis\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextToAxis",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickLabelPosition.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisTickMark:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisTickMark "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTickMark",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickMark.cross:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cross = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cross\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cross",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickMark.inside:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inside = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"inside\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inside",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickMark.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTickMark.outside:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "outside = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"outside\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outside",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisTimeUnit:enum",
              "docComment": "/**\n * Specifies the unit of time for chart axes and data series.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisTimeUnit "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTimeUnit",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTimeUnit.days:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "days = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"days\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "days",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTimeUnit.months:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "months = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"months\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "months",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisTimeUnit.years:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "years = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"years\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "years",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartAxisTitle:interface",
              "docComment": "/**\n * Represents the title of a chart axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxisTitle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTitle",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitle#format:member",
                  "docComment": "/**\n * Specifies the formatting of chart axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisTitleFormat",
                      "canonicalReference": "excel!Excel.ChartAxisTitleFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitle#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitle#setFormula:member(1)",
                  "docComment": "/**\n * A string value that represents the formula of chart axis title using A1-style notation.\n *\n * @param formula - a string that present the formula to set\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitle#text:member",
                  "docComment": "/**\n * Specifies the axis title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitle#textOrientation:member",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart axis title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitle#visible:member",
                  "docComment": "/**\n * Specifies if the axis title is visibile.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartAxisTitleFormat:interface",
              "docComment": "/**\n * Represents the chart axis title formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartAxisTitleFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisTitleFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitleFormat#border:member",
                  "docComment": "/**\n * Specifies the chart axis title's border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitleFormat#fill:member",
                  "docComment": "/**\n * Specifies the chart axis title's fill formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitleFormat#font:member",
                  "docComment": "/**\n * Specifies the chart axis title's font attributes, such as font name, font size, color, etc. of chart axis title object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartAxisTitleFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartAxisType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartAxisType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartAxisType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisType.category:member",
                  "docComment": "/**\n * Axis displays categories.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "category = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"category\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "category",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisType.series:member",
                  "docComment": "/**\n * Axis displays data series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "series = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"series\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "series",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartAxisType.value:member",
                  "docComment": "/**\n * Axis displays values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"value\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartBinOptions:interface",
              "docComment": "/**\n * Encapsulates the bin options for histogram charts and pareto charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartBinOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBinOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#allowOverflow:member",
                  "docComment": "/**\n * Specifies if bin overflow is enabled in a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowOverflow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowOverflow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#allowUnderflow:member",
                  "docComment": "/**\n * Specifies if bin underflow is enabled in a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowUnderflow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowUnderflow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#count:member",
                  "docComment": "/**\n * Specifies the bin count of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#overflowValue:member",
                  "docComment": "/**\n * Specifies the bin overflow value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overflowValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overflowValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#type:member",
                  "docComment": "/**\n * Specifies the bin's type for a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBinType",
                      "canonicalReference": "excel!Excel.ChartBinType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#underflowValue:member",
                  "docComment": "/**\n * Specifies the bin underflow value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underflowValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underflowValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBinOptions#width:member",
                  "docComment": "/**\n * Specifies the bin width value of a histogram chart or pareto chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartBinType:enum",
              "docComment": "/**\n * Specifies the bin's type of a histogram chart or pareto chart series.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartBinType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBinType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartBinType.auto:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "auto = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"auto\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "auto",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartBinType.binCount:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "binCount = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"binCount\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "binCount",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartBinType.binWidth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "binWidth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"binWidth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "binWidth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartBinType.category:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "category = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"category\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "category",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartBorder:interface",
              "docComment": "/**\n * Represents the border formatting of a chart element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBorder",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartBorder#clear:member(1)",
                  "docComment": "/**\n * Clear the border format of a chart element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBorder#color:member",
                  "docComment": "/**\n * HTML color code representing the color of borders in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBorder#lineStyle:member",
                  "docComment": "/**\n * Represents the line style of the border. See Excel.ChartLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineStyle",
                      "canonicalReference": "excel!Excel.ChartLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartBorder#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBorder#weight:member",
                  "docComment": "/**\n * Represents weight of the border, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartBoxQuartileCalculation:enum",
              "docComment": "/**\n * Represents the quartile calculation type of chart series layout. Only applies to a box and whisker chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartBoxQuartileCalculation "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBoxQuartileCalculation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartBoxQuartileCalculation.exclusive:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "exclusive = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"exclusive\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "exclusive",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartBoxQuartileCalculation.inclusive:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inclusive = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"inclusive\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inclusive",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions:interface",
              "docComment": "/**\n * Represents the properties of a box and whisker chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartBoxwhiskerOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartBoxwhiskerOptions",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions#quartileCalculation:member",
                  "docComment": "/**\n * Specifies if the quartile calculation type of a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quartileCalculation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBoxQuartileCalculation",
                      "canonicalReference": "excel!Excel.ChartBoxQuartileCalculation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quartileCalculation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions#showInnerPoints:member",
                  "docComment": "/**\n * Specifies if inner points are shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showInnerPoints: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showInnerPoints",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions#showMeanLine:member",
                  "docComment": "/**\n * Specifies if the mean line is shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showMeanLine: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showMeanLine",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions#showMeanMarker:member",
                  "docComment": "/**\n * Specifies if the mean marker is shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showMeanMarker: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showMeanMarker",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions#showOutlierPoints:member",
                  "docComment": "/**\n * Specifies if outlier points are shown in a box and whisker chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showOutlierPoints: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showOutlierPoints",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartCollection:interface",
              "docComment": "/**\n * A collection of all the chart objects on a worksheet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartCollection#add:member(1)",
                  "docComment": "/**\n * Creates a new chart.\n *\n * @param type - Represents the type of a chart. See Excel.ChartType for details.\n *\n * @param sourceData - The Range object corresponding to the source data.\n *\n * @param seriesBy - Optional. Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!Excel.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            seriesBy?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesBy",
                      "canonicalReference": "excel!Excel.ChartSeriesBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!Excel.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "seriesBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartCollection#count:member",
                  "docComment": "/**\n * Returns the number of charts in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of charts in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.\n *\n * @param name - Name of the chart to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!Excel.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a chart based on its position in the collection.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!Excel.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If the chart does not exist, will return a null object.\n *\n * @param name - Name of the chart to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!Excel.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartColorScheme:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartColorScheme "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartColorScheme",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.colorfulPalette1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"colorfulPalette1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.colorfulPalette2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"colorfulPalette2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.colorfulPalette3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"colorfulPalette3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.colorfulPalette4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorfulPalette4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"colorfulPalette4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorfulPalette4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette10:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette10 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette10\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette10",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette11:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette11 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette11\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette11",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette12:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette12 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette12\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette12",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette13:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette13 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette13\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette13",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette6 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette6\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette6",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette7:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette7 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette7\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette7",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette8:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette8 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette8\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette8",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartColorScheme.monochromaticPalette9:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "monochromaticPalette9 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"monochromaticPalette9\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "monochromaticPalette9",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartDataLabel:interface",
              "docComment": "/**\n * Represents the data label of a chart point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartDataLabel "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabel",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#autoText:member",
                  "docComment": "/**\n * Specifies if the data label automatically generates appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoText",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#format:member",
                  "docComment": "/**\n * Represents the format of chart data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelFormat",
                      "canonicalReference": "excel!Excel.ChartDataLabelFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#formula:member",
                  "docComment": "/**\n * String value that represents the formula of chart data label using A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#height:member",
                  "docComment": "/**\n * Returns the height, in points, of the chart data label. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#horizontalAlignment:member",
                  "docComment": "/**\n * Represents the horizontal alignment for chart data label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of data label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#left:member",
                  "docComment": "/**\n * Represents the distance, in points, from the left edge of chart data label to the left edge of chart area. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#linkNumberFormat:member",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkNumberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#numberFormat:member",
                  "docComment": "/**\n * String value that represents the format code for data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#position:member",
                  "docComment": "/**\n * DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelPosition",
                      "canonicalReference": "excel!Excel.ChartDataLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#separator:member",
                  "docComment": "/**\n * String representing the separator used for the data label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "separator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "separator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#showBubbleSize:member",
                  "docComment": "/**\n * Specifies if the data label bubble size is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showBubbleSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showBubbleSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#showCategoryName:member",
                  "docComment": "/**\n * Specifies if the data label category name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showCategoryName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showCategoryName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#showLegendKey:member",
                  "docComment": "/**\n * Specifies if the data label legend key is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showLegendKey: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showLegendKey",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#showPercentage:member",
                  "docComment": "/**\n * Specifies if the data label percentage is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showPercentage: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showPercentage",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#showSeriesName:member",
                  "docComment": "/**\n * Specifies if the data label series name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showSeriesName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showSeriesName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#showValue:member",
                  "docComment": "/**\n * Specifies if the data label value is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#text:member",
                  "docComment": "/**\n * String representing the text of the data label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#textOrientation:member",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the chart data label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#top:member",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of chart data label to the top of chart area. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#verticalAlignment:member",
                  "docComment": "/**\n * Represents the vertical alignment of chart data label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of data label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabel#width:member",
                  "docComment": "/**\n * Returns the width, in points, of the chart data label. Null if chart data label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartDataLabelFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart data labels.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartDataLabelFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabelFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabelFormat#border:member",
                  "docComment": "/**\n * Represents the border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabelFormat#fill:member",
                  "docComment": "/**\n * Represents the fill format of the current chart data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabelFormat#font:member",
                  "docComment": "/**\n * Represents the font attributes (font name, font size, color, etc.) for a chart data label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartDataLabelFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartDataLabelPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartDataLabelPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabelPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.bestFit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bestFit = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bestFit\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bestFit",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.callout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"callout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.insideBase:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideBase = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"insideBase\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideBase",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.insideEnd:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideEnd = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"insideEnd\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideEnd",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.outsideEnd:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "outsideEnd = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"outsideEnd\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outsideEnd",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDataLabelPosition.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartDataLabels:interface",
              "docComment": "/**\n * Represents a collection of all the data labels on a chart point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartDataLabels "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDataLabels",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#autoText:member",
                  "docComment": "/**\n * Specifies if data labels automatically generate appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoText",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#format:member",
                  "docComment": "/**\n * Specifies the format of chart data labels, which includes fill and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelFormat",
                      "canonicalReference": "excel!Excel.ChartDataLabelFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#horizontalAlignment:member",
                  "docComment": "/**\n * Specifies the horizontal alignment for chart data label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of data label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#linkNumberFormat:member",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells. If true, the number format will change in the labels when it changes in the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkNumberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#numberFormat:member",
                  "docComment": "/**\n * Specifies the format code for data labels.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#position:member",
                  "docComment": "/**\n * DataLabelPosition value that represents the position of the data label. See Excel.ChartDataLabelPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabelPosition",
                      "canonicalReference": "excel!Excel.ChartDataLabelPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#separator:member",
                  "docComment": "/**\n * String representing the separator used for the data labels on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "separator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "separator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#showBubbleSize:member",
                  "docComment": "/**\n * Specifies if the data label bubble size is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showBubbleSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showBubbleSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#showCategoryName:member",
                  "docComment": "/**\n * Specifies if the data label category name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showCategoryName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showCategoryName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#showLegendKey:member",
                  "docComment": "/**\n * Specifies if the data label legend key is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showLegendKey: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showLegendKey",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#showPercentage:member",
                  "docComment": "/**\n * Specifies if the data label percentage is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showPercentage: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showPercentage",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#showSeriesName:member",
                  "docComment": "/**\n * Specifies if the data label series name is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showSeriesName: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showSeriesName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#showValue:member",
                  "docComment": "/**\n * Specifies if the data label value is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#textOrientation:member",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for data labels. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartDataLabels#verticalAlignment:member",
                  "docComment": "/**\n * Represents the vertical alignment of chart data label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of data label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartDisplayBlanksAs:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartDisplayBlanksAs "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartDisplayBlanksAs",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDisplayBlanksAs.interplotted:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interplotted = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"interplotted\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "interplotted",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDisplayBlanksAs.notPlotted:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notPlotted = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notPlotted\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notPlotted",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartDisplayBlanksAs.zero:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "zero = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"zero\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "zero",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartErrorBars:interface",
              "docComment": "/**\n * This object represents the attributes for a chart's error bars.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartErrorBars "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBars",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartErrorBars#endStyleCap:member",
                  "docComment": "/**\n * Specifies if error bars have an end style cap.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endStyleCap: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endStyleCap",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartErrorBars#format:member",
                  "docComment": "/**\n * Specifies the formatting type of the error bars.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsFormat",
                      "canonicalReference": "excel!Excel.ChartErrorBarsFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartErrorBars#include:member",
                  "docComment": "/**\n * Specifies which parts of the error bars to include.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "include: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsInclude",
                      "canonicalReference": "excel!Excel.ChartErrorBarsInclude:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "include",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartErrorBars#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartErrorBars#type:member",
                  "docComment": "/**\n * The type of range marked by the error bars.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBarsType",
                      "canonicalReference": "excel!Excel.ChartErrorBarsType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartErrorBars#visible:member",
                  "docComment": "/**\n * Specifies whether the error bars are displayed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartErrorBarsFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for chart error bars.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartErrorBarsFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBarsFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartErrorBarsFormat#line:member",
                  "docComment": "/**\n * Represents the chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly line: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!Excel.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartErrorBarsFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartErrorBarsInclude:enum",
              "docComment": "/**\n * Represents which parts of the error bar to include.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartErrorBarsInclude "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBarsInclude",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsInclude.both:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "both = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"both\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "both",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsInclude.minusValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minusValues = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"minusValues\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minusValues",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsInclude.plusValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plusValues = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"plusValues\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plusValues",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartErrorBarsType:enum",
              "docComment": "/**\n * Represents the range type for error bars.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartErrorBarsType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartErrorBarsType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsType.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsType.fixedValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fixedValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fixedValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fixedValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsType.stDev:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stDev = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stDev\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stDev",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartErrorBarsType.stError:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stError = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stError\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stError",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartFill:interface",
              "docComment": "/**\n * Represents the fill formatting for a chart element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartFill "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartFill#clear:member(1)",
                  "docComment": "/**\n * Clear the fill color of a chart element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartFill#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartFill#setSolidColor:member(1)",
                  "docComment": "/**\n * Sets the fill formatting of a chart element to a uniform color.\n *\n * @param color - HTML color code representing the color of the background, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSolidColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSolidColor"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartFont:interface",
              "docComment": "/**\n * This object represents the font attributes (font name, font size, color, etc.) for a chart object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartFont "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartFont",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFont#bold:member",
                  "docComment": "/**\n * Represents the bold status of font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFont#color:member",
                  "docComment": "/**\n * HTML color code representation of the text color (e.g., #FF0000 represents Red).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFont#italic:member",
                  "docComment": "/**\n * Represents the italic status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartFont#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFont#name:member",
                  "docComment": "/**\n * Font name (e.g., \"Calibri\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFont#size:member",
                  "docComment": "/**\n * Size of the font (e.g., 11)\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFont#underline:member",
                  "docComment": "/**\n * Type of underline applied to the font. See Excel.ChartUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartUnderlineStyle",
                      "canonicalReference": "excel!Excel.ChartUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartFormatString:interface",
              "docComment": "/**\n * Represents the substring in chart related objects that contains text, like ChartTitle object, ChartAxisTitle object, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartFormatString "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartFormatString",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartFormatString#font:member",
                  "docComment": "/**\n * Represents the font attributes, such as font name, font size, color, etc. of chart characters object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartFormatString#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartGradientStyle:enum",
              "docComment": "/**\n * Represents the gradient style of a chart series. This is only applicable for region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartGradientStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGradientStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartGradientStyle.threePhaseColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threePhaseColor = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threePhaseColor\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threePhaseColor",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartGradientStyle.twoPhaseColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoPhaseColor = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"twoPhaseColor\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoPhaseColor",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartGradientStyleType:enum",
              "docComment": "/**\n * Represents the gradient style type of a chart series. This is only applicable for region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartGradientStyleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGradientStyleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartGradientStyleType.extremeValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "extremeValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"extremeValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "extremeValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartGradientStyleType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"number\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartGradientStyleType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartGridlines:interface",
              "docComment": "/**\n * Represents major or minor gridlines on a chart axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartGridlines "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGridlines",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartGridlines#format:member",
                  "docComment": "/**\n * Represents the formatting of chart gridlines.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGridlinesFormat",
                      "canonicalReference": "excel!Excel.ChartGridlinesFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartGridlines#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartGridlines#visible:member",
                  "docComment": "/**\n * Specifies if the axis gridlines are visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartGridlinesFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for chart gridlines.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartGridlinesFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartGridlinesFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartGridlinesFormat#line:member",
                  "docComment": "/**\n * Represents chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly line: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!Excel.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartGridlinesFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartLegend:interface",
              "docComment": "/**\n * Represents the legend in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegend "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegend",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#format:member",
                  "docComment": "/**\n * Represents the formatting of a chart legend, which includes fill and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendFormat",
                      "canonicalReference": "excel!Excel.ChartLegendFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#height:member",
                  "docComment": "/**\n * Specifies the height, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#left:member",
                  "docComment": "/**\n * Specifies the left, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#legendEntries:member",
                  "docComment": "/**\n * Represents a collection of legendEntries in the legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly legendEntries: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendEntryCollection",
                      "canonicalReference": "excel!Excel.ChartLegendEntryCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "legendEntries",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLegend#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#overlay:member",
                  "docComment": "/**\n * Specifies if the chart legend should overlap with the main body of the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overlay: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overlay",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#position:member",
                  "docComment": "/**\n * Specifies the position of the legend on the chart. See Excel.ChartLegendPosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendPosition",
                      "canonicalReference": "excel!Excel.ChartLegendPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#showShadow:member",
                  "docComment": "/**\n * Specifies if the legend has a shadow on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showShadow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showShadow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#top:member",
                  "docComment": "/**\n * Specifies the top of a chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#visible:member",
                  "docComment": "/**\n * Specifies if the ChartLegend is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegend#width:member",
                  "docComment": "/**\n * Specifies the width, in points, of the legend on the chart. Null if legend is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartLegendEntry:interface",
              "docComment": "/**\n * Represents the legendEntry in legendEntryCollection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegendEntry "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendEntry",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#height:member",
                  "docComment": "/**\n * Specifies the height of the legendEntry on the chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#index:member",
                  "docComment": "/**\n * Specifies the index of the legendEntry in the chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#left:member",
                  "docComment": "/**\n * Specifies the left of a chart legendEntry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#top:member",
                  "docComment": "/**\n * Specifies the top of a chart legendEntry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#visible:member",
                  "docComment": "/**\n * Represents the visible of a chart legend entry.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntry#width:member",
                  "docComment": "/**\n * Represents the width of the legendEntry on the chart Legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartLegendEntryCollection:interface",
              "docComment": "/**\n * Represents a collection of legendEntries.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegendEntryCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendEntryCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntryCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of legendEntry in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntryCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Returns a legendEntry at the given index.\n *\n * @param index - Index of the legendEntry to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLegendEntry",
                      "canonicalReference": "excel!Excel.ChartLegendEntry:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLegendEntryCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartLegendFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties of a chart legend.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLegendFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendFormat#border:member",
                  "docComment": "/**\n * Represents the border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendFormat#fill:member",
                  "docComment": "/**\n * Represents the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLegendFormat#font:member",
                  "docComment": "/**\n * Represents the font attributes such as font name, font size, color, etc. of a chart legend.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLegendFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartLegendPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartLegendPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLegendPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.corner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "corner = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"corner\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "corner",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLegendPosition.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartLineFormat:interface",
              "docComment": "/**\n * Encapsulates the formatting options for line elements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartLineFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLineFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLineFormat#clear:member(1)",
                  "docComment": "/**\n * Clear the line format of a chart element.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLineFormat#color:member",
                  "docComment": "/**\n * HTML color code representing the color of lines in the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLineFormat#lineStyle:member",
                  "docComment": "/**\n * Represents the line style. See Excel.ChartLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineStyle",
                      "canonicalReference": "excel!Excel.ChartLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartLineFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartLineFormat#weight:member",
                  "docComment": "/**\n * Represents weight of the line, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartLineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.continuous:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continuous = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"continuous\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continuous",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDotDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.grey25:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grey25 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"grey25\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grey25",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.grey50:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grey50 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"grey50\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grey50",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.grey75:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grey75 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"grey75\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grey75",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartLineStyle.roundDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"roundDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartMapAreaLevel:enum",
              "docComment": "/**\n * Represents the mapping level of a chart series. This only applies to region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMapAreaLevel "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapAreaLevel",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.city:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "city = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"city\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "city",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.continent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"continent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.country:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "country = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"country\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "country",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.county:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "county = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"county\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "county",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.dataOnly:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataOnly = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dataOnly\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataOnly",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.state:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "state = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"state\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "state",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapAreaLevel.world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "world = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"world\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "world",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartMapLabelStrategy:enum",
              "docComment": "/**\n * Represents the region level of a chart series layout. This only applies to region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMapLabelStrategy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapLabelStrategy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapLabelStrategy.bestFit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bestFit = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bestFit\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bestFit",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapLabelStrategy.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapLabelStrategy.showAll:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAll = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"showAll\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAll",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartMapOptions:interface",
              "docComment": "/**\n * Encapsulates the properties for a region map chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartMapOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartMapOptions#labelStrategy:member",
                  "docComment": "/**\n * Specifies the series map labels strategy of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "labelStrategy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapLabelStrategy",
                      "canonicalReference": "excel!Excel.ChartMapLabelStrategy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "labelStrategy",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartMapOptions#level:member",
                  "docComment": "/**\n * Specifies the series mapping level of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "level: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapAreaLevel",
                      "canonicalReference": "excel!Excel.ChartMapAreaLevel:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "level",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartMapOptions#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartMapOptions#projectionType:member",
                  "docComment": "/**\n * Specifies the series projection type of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "projectionType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapProjectionType",
                      "canonicalReference": "excel!Excel.ChartMapProjectionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "projectionType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartMapProjectionType:enum",
              "docComment": "/**\n * Represents the region projection type of a chart series layout. This only applies to region map charts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMapProjectionType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMapProjectionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapProjectionType.albers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "albers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"albers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "albers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapProjectionType.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapProjectionType.mercator:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mercator = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mercator\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mercator",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapProjectionType.miller:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "miller = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"miller\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "miller",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMapProjectionType.robinson:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "robinson = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"robinson\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "robinson",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartMarkerStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartMarkerStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartMarkerStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.circle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "circle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"circle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "circle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.diamond:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diamond = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"diamond\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diamond",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.picture:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "picture = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"picture\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "picture",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.plus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plus = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"plus\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plus",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.square:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "square = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"square\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "square",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.star:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.triangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "triangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"triangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "triangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartMarkerStyle.x:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "x = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"x\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "x",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartParentLabelStrategy:enum",
              "docComment": "/**\n * Represents the parent label strategy of the chart series layout. This only applies to treemap charts\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartParentLabelStrategy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartParentLabelStrategy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartParentLabelStrategy.banner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "banner = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"banner\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "banner",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartParentLabelStrategy.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartParentLabelStrategy.overlapping:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overlapping = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"overlapping\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overlapping",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartPivotOptions:interface",
              "docComment": "/**\n * Encapsulates the options for the pivot chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPivotOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPivotOptions",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPivotOptions#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPivotOptions#showAxisFieldButtons:member",
                  "docComment": "/**\n * Specifies whether to display the axis field buttons on a PivotChart. The ShowAxisFieldButtons property corresponds to the \"Show Axis Field Buttons\" command on the \"Field Buttons\" drop-down list of the \"Analyze\" tab, which is available when a PivotChart is selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAxisFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAxisFieldButtons",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPivotOptions#showLegendFieldButtons:member",
                  "docComment": "/**\n * Specifies whether to display the legend field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showLegendFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showLegendFieldButtons",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPivotOptions#showReportFilterFieldButtons:member",
                  "docComment": "/**\n * Specifies whether to display the report filter field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showReportFilterFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showReportFilterFieldButtons",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPivotOptions#showValueFieldButtons:member",
                  "docComment": "/**\n * Specifies whether to display the show value field buttons on a PivotChart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showValueFieldButtons: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showValueFieldButtons",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartPlotArea:interface",
              "docComment": "/**\n * This object represents the attributes for a chart plotArea object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPlotArea "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotArea",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#format:member",
                  "docComment": "/**\n * Specifies the formatting of a chart plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotAreaFormat",
                      "canonicalReference": "excel!Excel.ChartPlotAreaFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#height:member",
                  "docComment": "/**\n * Specifies the height value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#insideHeight:member",
                  "docComment": "/**\n * Specifies the insideHeight value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideHeight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#insideLeft:member",
                  "docComment": "/**\n * Specifies the insideLeft value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideLeft: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideLeft",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#insideTop:member",
                  "docComment": "/**\n * Specifies the insideTop value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideTop: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideTop",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#insideWidth:member",
                  "docComment": "/**\n * Specifies the insideWidth value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insideWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "insideWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#left:member",
                  "docComment": "/**\n * Specifies the left value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#position:member",
                  "docComment": "/**\n * Specifies the position of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPlotAreaPosition",
                      "canonicalReference": "excel!Excel.ChartPlotAreaPosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#top:member",
                  "docComment": "/**\n * Specifies the top value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotArea#width:member",
                  "docComment": "/**\n * Specifies the width value of plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartPlotAreaFormat:interface",
              "docComment": "/**\n * Represents the format properties for chart plotArea.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPlotAreaFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotAreaFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotAreaFormat#border:member",
                  "docComment": "/**\n * Specifies the border attributes of a chart plotArea.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPlotAreaFormat#fill:member",
                  "docComment": "/**\n * Specifies the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPlotAreaFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartPlotAreaPosition:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartPlotAreaPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotAreaPosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartPlotAreaPosition.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartPlotAreaPosition.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartPlotBy:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartPlotBy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPlotBy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartPlotBy.columns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columns = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"columns\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartPlotBy.rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartPoint:interface",
              "docComment": "/**\n * Represents a point of a series in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPoint "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPoint",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#dataLabel:member",
                  "docComment": "/**\n * Returns the data label of a chart point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataLabel: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabel",
                      "canonicalReference": "excel!Excel.ChartDataLabel:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataLabel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#format:member",
                  "docComment": "/**\n * Encapsulates the format properties chart point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPointFormat",
                      "canonicalReference": "excel!Excel.ChartPointFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#hasDataLabel:member",
                  "docComment": "/**\n * Represents whether a data point has a data label. Not applicable for surface charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hasDataLabel: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hasDataLabel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPoint#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#markerBackgroundColor:member",
                  "docComment": "/**\n * HTML color code representation of the marker background color of data point (e.g., #FF0000 represents Red).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerBackgroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerBackgroundColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#markerForegroundColor:member",
                  "docComment": "/**\n * HTML color code representation of the marker foreground color of data point (e.g., #FF0000 represents Red).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerForegroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerForegroundColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#markerSize:member",
                  "docComment": "/**\n * Represents marker size of data point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#markerStyle:member",
                  "docComment": "/**\n * Represents marker style of a chart data point. See Excel.ChartMarkerStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMarkerStyle",
                      "canonicalReference": "excel!Excel.ChartMarkerStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPoint#value:member",
                  "docComment": "/**\n * Returns the value of a chart point.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartPointFormat:interface",
              "docComment": "/**\n * Represents formatting object for chart points.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPointFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPointFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPointFormat#border:member",
                  "docComment": "/**\n * Represents the border format of a chart data point, which includes color, style, and weight information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPointFormat#fill:member",
                  "docComment": "/**\n * Represents the fill format of a chart, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPointFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartPointsCollection:interface",
              "docComment": "/**\n * A collection of all the chart points within a series inside a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartPointsCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartPointsCollection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartPointsCollection#count:member",
                  "docComment": "/**\n * Returns the number of chart points in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPointsCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of chart points in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPointsCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Retrieve a point based on its position within the series.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPoint",
                      "canonicalReference": "excel!Excel.ChartPoint:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartPointsCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartSeries:interface",
              "docComment": "/**\n * Represents a series in a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartSeries "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeries",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#axisGroup:member",
                  "docComment": "/**\n * Specifies the group for the specified series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "axisGroup: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartAxisGroup",
                      "canonicalReference": "excel!Excel.ChartAxisGroup:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "axisGroup",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#binOptions:member",
                  "docComment": "/**\n * Encapsulates the bin options for histogram charts and pareto charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly binOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBinOptions",
                      "canonicalReference": "excel!Excel.ChartBinOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "binOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#boxwhiskerOptions:member",
                  "docComment": "/**\n * Encapsulates the options for the box and whisker charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly boxwhiskerOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBoxwhiskerOptions",
                      "canonicalReference": "excel!Excel.ChartBoxwhiskerOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boxwhiskerOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#bubbleScale:member",
                  "docComment": "/**\n * This can be an integer value from 0 (zero) to 300, representing the percentage of the default size. This property only applies to bubble charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bubbleScale: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bubbleScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#chartType:member",
                  "docComment": "/**\n * Represents the chart type of a series. See Excel.ChartType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartType",
                      "canonicalReference": "excel!Excel.ChartType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#dataLabels:member",
                  "docComment": "/**\n * Represents a collection of all dataLabels in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataLabels: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartDataLabels",
                      "canonicalReference": "excel!Excel.ChartDataLabels:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataLabels",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeries#delete:member(1)",
                  "docComment": "/**\n * Deletes the chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#doughnutHoleSize:member",
                  "docComment": "/**\n * Represents the doughnut hole size of a chart series. Only valid on doughnut and doughnutExploded charts. Throws an invalid argument exception on invalid charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doughnutHoleSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doughnutHoleSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#explosion:member",
                  "docComment": "/**\n * Specifies the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "explosion: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "explosion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#filtered:member",
                  "docComment": "/**\n * Specifies if the series is filtered. Not applicable for surface charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "filtered: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filtered",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#firstSliceAngle:member",
                  "docComment": "/**\n * Specifies the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts. Can be a value from 0 through 360.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstSliceAngle: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstSliceAngle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#format:member",
                  "docComment": "/**\n * Represents the formatting of a chart series, which includes fill and line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeriesFormat",
                      "canonicalReference": "excel!Excel.ChartSeriesFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gapWidth:member",
                  "docComment": "/**\n * Represents the gap width of a chart series. Only valid on bar and column charts, as well as specific classes of line and pie charts. Throws an invalid argument exception on invalid charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gapWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gapWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMaximumColor:member",
                  "docComment": "/**\n * Specifies the color for maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMaximumColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMaximumColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMaximumType:member",
                  "docComment": "/**\n * Specifies the type for maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMaximumType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!Excel.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMaximumType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMaximumValue:member",
                  "docComment": "/**\n * Specifies the maximum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMaximumValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMaximumValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMidpointColor:member",
                  "docComment": "/**\n * Specifies the color for midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMidpointColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMidpointColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMidpointType:member",
                  "docComment": "/**\n * Specifies the type for midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMidpointType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!Excel.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMidpointType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMidpointValue:member",
                  "docComment": "/**\n * Specifies the midpoint value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMidpointValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMidpointValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMinimumColor:member",
                  "docComment": "/**\n * Specifies the color for minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMinimumColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMinimumColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMinimumType:member",
                  "docComment": "/**\n * Specifies the type for minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMinimumType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyleType",
                      "canonicalReference": "excel!Excel.ChartGradientStyleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMinimumType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientMinimumValue:member",
                  "docComment": "/**\n * Specifies the minimum value of a region map chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientMinimumValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientMinimumValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#gradientStyle:member",
                  "docComment": "/**\n * Specifies the series gradient style of a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartGradientStyle",
                      "canonicalReference": "excel!Excel.ChartGradientStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#hasDataLabels:member",
                  "docComment": "/**\n * Specifies if the series has data labels.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hasDataLabels: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hasDataLabels",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#invertColor:member",
                  "docComment": "/**\n * Specifies the fill color for negative data points in a series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invertColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invertColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#invertIfNegative:member",
                  "docComment": "/**\n * True if Excel inverts the pattern in the item when it corresponds to a negative number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invertIfNegative: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invertIfNegative",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeries#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#mapOptions:member",
                  "docComment": "/**\n * Encapsulates the options for a region map chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly mapOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMapOptions",
                      "canonicalReference": "excel!Excel.ChartMapOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mapOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#markerBackgroundColor:member",
                  "docComment": "/**\n * Specifies the markers background color of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerBackgroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerBackgroundColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#markerForegroundColor:member",
                  "docComment": "/**\n * Specifies the markers foreground color of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerForegroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerForegroundColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#markerSize:member",
                  "docComment": "/**\n * Specifies the marker size of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#markerStyle:member",
                  "docComment": "/**\n * Specifies the marker style of a chart series. See Excel.ChartMarkerStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "markerStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartMarkerStyle",
                      "canonicalReference": "excel!Excel.ChartMarkerStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "markerStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#name:member",
                  "docComment": "/**\n * Specifies the name of a series in a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#overlap:member",
                  "docComment": "/**\n * Specifies how bars and columns are positioned. Can be a value between –100 and 100. Applies only to 2-D bar and 2-D column charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overlap: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overlap",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#parentLabelStrategy:member",
                  "docComment": "/**\n * Specifies the series parent label strategy area for a treemap chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "parentLabelStrategy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartParentLabelStrategy",
                      "canonicalReference": "excel!Excel.ChartParentLabelStrategy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "parentLabelStrategy",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#plotOrder:member",
                  "docComment": "/**\n * Specifies the plot order of a chart series within the chart group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plotOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plotOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#points:member",
                  "docComment": "/**\n * Returns a collection of all points in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly points: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartPointsCollection",
                      "canonicalReference": "excel!Excel.ChartPointsCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "points",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#secondPlotSize:member",
                  "docComment": "/**\n * Specifies the size of the secondary section of either a pie-of-pie chart or a bar-of-pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "secondPlotSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "secondPlotSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeries#setBubbleSizes:member(1)",
                  "docComment": "/**\n * Sets the bubble sizes for a chart series. Only works for bubble charts.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBubbleSizes(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setBubbleSizes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeries#setValues:member(1)",
                  "docComment": "/**\n * Sets the values for a chart series. For scatter chart, it means Y axis values.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setValues(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setValues"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeries#setXAxisValues:member(1)",
                  "docComment": "/**\n * Sets the values of the X axis for a chart series. Only works for scatter charts.\n *\n * @param sourceData - The Range object corresponding to the source data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setXAxisValues(sourceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setXAxisValues"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#showConnectorLines:member",
                  "docComment": "/**\n * Specifies whether connector lines are shown in waterfall charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showConnectorLines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showConnectorLines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#showLeaderLines:member",
                  "docComment": "/**\n * Specifies whether leader lines are displayed for each data label in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showLeaderLines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showLeaderLines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#showShadow:member",
                  "docComment": "/**\n * Specifies if the series has a shadow.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showShadow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showShadow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#smooth:member",
                  "docComment": "/**\n * Specifies if the series is smooth. Only applicable to line and scatter charts.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "smooth: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "smooth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#splitType:member",
                  "docComment": "/**\n * Specifies the way the two sections of either a pie-of-pie chart or a bar-of-pie chart are split.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSplitType",
                      "canonicalReference": "excel!Excel.ChartSplitType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#splitValue:member",
                  "docComment": "/**\n * Specifies the threshold value that separates two sections of either a pie-of-pie chart or a bar-of-pie chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitValue: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#trendlines:member",
                  "docComment": "/**\n * The collection of trendlines in the series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly trendlines: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineCollection",
                      "canonicalReference": "excel!Excel.ChartTrendlineCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "trendlines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#varyByCategories:member",
                  "docComment": "/**\n * True if Excel assigns a different color or pattern to each data marker. The chart must contain only one series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "varyByCategories: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "varyByCategories",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#xErrorBars:member",
                  "docComment": "/**\n * Represents the error bar object of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly xErrorBars: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBars",
                      "canonicalReference": "excel!Excel.ChartErrorBars:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xErrorBars",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeries#yErrorBars:member",
                  "docComment": "/**\n * Represents the error bar object of a chart series.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly yErrorBars: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartErrorBars",
                      "canonicalReference": "excel!Excel.ChartErrorBars:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yErrorBars",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartSeriesBy:enum",
              "docComment": "/**\n * Specifies whether the series are by rows or by columns. On Desktop, the \"auto\" option will inspect the source data shape to automatically guess whether the data is by rows or columns; in Excel on the web, \"auto\" will simply default to \"columns\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartSeriesBy "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeriesBy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSeriesBy.auto:member",
                  "docComment": "/**\n * On Desktop, the \"auto\" option will inspect the source data shape to automatically guess whether the data is by rows or columns; in Excel on the web, \"auto\" will simply default to \"columns\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "auto = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"auto\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "auto",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSeriesBy.columns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columns = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"columns\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSeriesBy.rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartSeriesCollection:interface",
              "docComment": "/**\n * Represents a collection of chart series.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartSeriesCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeriesCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeriesCollection#add:member(1)",
                  "docComment": "/**\n * Add a new series to the collection. The new added series is not visible until set values/x axis values/bubble sizes for it (depending on chart type).\n *\n * @param name - Optional. Name of the series.\n *\n * @param index - Optional. Index value of the series to be added. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeries",
                      "canonicalReference": "excel!Excel.ChartSeries:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeriesCollection#count:member",
                  "docComment": "/**\n * Returns the number of series in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeriesCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of series in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeriesCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Retrieves a series based on its position in the collection.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartSeries",
                      "canonicalReference": "excel!Excel.ChartSeries:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeriesCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartSeriesFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart series\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartSeriesFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSeriesFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeriesFormat#fill:member",
                  "docComment": "/**\n * Represents the fill format of a chart series, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartSeriesFormat#line:member",
                  "docComment": "/**\n * Represents line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly line: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!Excel.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartSeriesFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartSplitType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartSplitType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartSplitType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSplitType.splitByCustomSplit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByCustomSplit = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"splitByCustomSplit\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByCustomSplit",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSplitType.splitByPercentValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByPercentValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"splitByPercentValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByPercentValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSplitType.splitByPosition:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByPosition = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"splitByPosition\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByPosition",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartSplitType.splitByValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "splitByValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"splitByValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "splitByValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment:enum",
              "docComment": "/**\n * Represents the horizontal alignment for the specified object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTextHorizontalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTextHorizontalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"distributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justify\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartTextVerticalAlignment:enum",
              "docComment": "/**\n * Represents the vertical alignment for the specified object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTextVerticalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTextVerticalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextVerticalAlignment.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextVerticalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextVerticalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"distributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextVerticalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justify\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTextVerticalAlignment.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartTickLabelAlignment:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTickLabelAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTickLabelAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTickLabelAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTickLabelAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTickLabelAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTitle:interface",
              "docComment": "/**\n * Represents a chart title object of a chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTitle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTitle",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#format:member",
                  "docComment": "/**\n * Represents the formatting of a chart title, which includes fill and font formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitleFormat",
                      "canonicalReference": "excel!Excel.ChartTitleFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTitle#getSubstring:member(1)",
                  "docComment": "/**\n * Get the substring of a chart title. Line break '\\n' also counts one character.\n *\n * @param start - Start position of substring to be retrieved. Position start with 0.\n *\n * @param length - Length of substring to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubstring(start: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", length: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFormatString",
                      "canonicalReference": "excel!Excel.ChartFormatString:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "start",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "length",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getSubstring"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#height:member",
                  "docComment": "/**\n * Returns the height, in points, of the chart title. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#horizontalAlignment:member",
                  "docComment": "/**\n * Specifies the horizontal alignment for chart title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#left:member",
                  "docComment": "/**\n * Specifies the distance, in points, from the left edge of chart title to the left edge of chart area. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTitle#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#overlay:member",
                  "docComment": "/**\n * Specifies if the chart title will overlay the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overlay: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overlay",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#position:member",
                  "docComment": "/**\n * Represents the position of chart title. See Excel.ChartTitlePosition for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTitlePosition",
                      "canonicalReference": "excel!Excel.ChartTitlePosition:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTitle#setFormula:member(1)",
                  "docComment": "/**\n * Sets a string value that represents the formula of chart title using A1-style notation.\n *\n * @param formula - A string that represents the formula to set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFormula(formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setFormula"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#showShadow:member",
                  "docComment": "/**\n * Represents a boolean value that determines if the chart title has a shadow.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showShadow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showShadow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#text:member",
                  "docComment": "/**\n * Specifies the chart's title text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#textOrientation:member",
                  "docComment": "/**\n * Specifies the angle to which the text is oriented for the chart title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#top:member",
                  "docComment": "/**\n * Specifies the distance, in points, from the top edge of chart title to the top of chart area. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#verticalAlignment:member",
                  "docComment": "/**\n * Specifies the vertical alignment of chart title. See Excel.ChartTextVerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#visible:member",
                  "docComment": "/**\n * Specifies if the chart title is visibile.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitle#width:member",
                  "docComment": "/**\n * Specifies the width, in points, of the chart title. Null if chart title is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTitleFormat:interface",
              "docComment": "/**\n * Provides access to the office art formatting for chart title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTitleFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTitleFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitleFormat#border:member",
                  "docComment": "/**\n * Represents the border format of chart title, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitleFormat#fill:member",
                  "docComment": "/**\n * Represents the fill format of an object, which includes background formatting information.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTitleFormat#font:member",
                  "docComment": "/**\n * Represents the font attributes (font name, font size, color, etc.) for an object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTitleFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartTitlePosition:enum",
              "docComment": "/**\n * Represents the position of chart title.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTitlePosition "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTitlePosition",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTitlePosition.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTitlePosition.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTitlePosition.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTitlePosition.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTitlePosition.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTrendline:interface",
              "docComment": "/**\n * This object represents the attributes for a chart trendline object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendline "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendline",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#backwardPeriod:member",
                  "docComment": "/**\n * Represents the number of periods that the trendline extends backward.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "backwardPeriod: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "backwardPeriod",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#delete:member(1)",
                  "docComment": "/**\n * Delete the trendline object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#format:member",
                  "docComment": "/**\n * Represents the formatting of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineFormat",
                      "canonicalReference": "excel!Excel.ChartTrendlineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#forwardPeriod:member",
                  "docComment": "/**\n * Represents the number of periods that the trendline extends forward.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "forwardPeriod: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "forwardPeriod",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#intercept:member",
                  "docComment": "/**\n * Represents the intercept value of the trendline. Can be set to a numeric value or an empty string (for automatic values). The returned value is always a number.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "intercept: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "intercept",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#label:member",
                  "docComment": "/**\n * Represents the label of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly label: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineLabel",
                      "canonicalReference": "excel!Excel.ChartTrendlineLabel:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "label",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#movingAveragePeriod:member",
                  "docComment": "/**\n * Represents the period of a chart trendline. Only applicable for trendline with MovingAverage type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "movingAveragePeriod: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "movingAveragePeriod",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#name:member",
                  "docComment": "/**\n * Represents the name of the trendline. Can be set to a string value, or can be set to null value represents automatic values. The returned value is always a string\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#polynomialOrder:member",
                  "docComment": "/**\n * Represents the order of a chart trendline. Only applicable for trendline with Polynomial type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "polynomialOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "polynomialOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#showEquation:member",
                  "docComment": "/**\n * True if the equation for the trendline is displayed on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showEquation: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showEquation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#showRSquared:member",
                  "docComment": "/**\n * True if the R-squared for the trendline is displayed on the chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showRSquared: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showRSquared",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendline#type:member",
                  "docComment": "/**\n * Represents the type of a chart trendline.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineType",
                      "canonicalReference": "excel!Excel.ChartTrendlineType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTrendlineCollection:interface",
              "docComment": "/**\n * Represents a collection of Chart Trendlines.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new trendline to trendline collection.\n *\n * @param type - Specifies the trendline type. The default value is \"Linear\". See Excel.ChartTrendline for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(type?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineType",
                      "canonicalReference": "excel!Excel.ChartTrendlineType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendline",
                      "canonicalReference": "excel!Excel.ChartTrendline:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of trendlines in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineCollection#getItem:member(1)",
                  "docComment": "/**\n * Get trendline object by index, which is the insertion order in items array.\n *\n * @param index - Represents the insertion order in items array.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendline",
                      "canonicalReference": "excel!Excel.ChartTrendline:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTrendlineFormat:interface",
              "docComment": "/**\n * Represents the format properties for chart trendline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineFormat#line:member",
                  "docComment": "/**\n * Represents chart line formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly line: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartLineFormat",
                      "canonicalReference": "excel!Excel.ChartLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTrendlineLabel:interface",
              "docComment": "/**\n * This object represents the attributes for a chart trendline lable object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineLabel "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineLabel",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#autoText:member",
                  "docComment": "/**\n * Specifies if trendline label automatically generate appropriate text based on context.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoText",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#format:member",
                  "docComment": "/**\n * The format of chart trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTrendlineLabelFormat",
                      "canonicalReference": "excel!Excel.ChartTrendlineLabelFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#formula:member",
                  "docComment": "/**\n * String value that represents the formula of chart trendline label using A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#height:member",
                  "docComment": "/**\n * Returns the height, in points, of the chart trendline label. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#horizontalAlignment:member",
                  "docComment": "/**\n * Represents the horizontal alignment for chart trendline label. See Excel.ChartTextHorizontalAlignment for details. This property is valid only when TextOrientation of trendline label is -90, 90, or 180.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextHorizontalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#left:member",
                  "docComment": "/**\n * Represents the distance, in points, from the left edge of chart trendline label to the left edge of chart area. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#linkNumberFormat:member",
                  "docComment": "/**\n * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkNumberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkNumberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#numberFormat:member",
                  "docComment": "/**\n * String value that represents the format code for trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#text:member",
                  "docComment": "/**\n * String representing the text of the trendline label on a chart.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#textOrientation:member",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the chart trendline label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#top:member",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of chart trendline label to the top of chart area. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#verticalAlignment:member",
                  "docComment": "/**\n * Represents the vertical alignment of chart trendline label. See Excel.ChartTextVerticalAlignment for details. This property is valid only when TextOrientation of trendline label is 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartTextVerticalAlignment",
                      "canonicalReference": "excel!Excel.ChartTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabel#width:member",
                  "docComment": "/**\n * Returns the width, in points, of the chart trendline label. Null if chart trendline label is not visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ChartTrendlineLabelFormat:interface",
              "docComment": "/**\n * Encapsulates the format properties for the chart trendline label.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ChartTrendlineLabelFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineLabelFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabelFormat#border:member",
                  "docComment": "/**\n * Specifies the border format, which includes color, linestyle, and weight.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly border: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartBorder",
                      "canonicalReference": "excel!Excel.ChartBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "border",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabelFormat#fill:member",
                  "docComment": "/**\n * Specifies the fill format of the current chart trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFill",
                      "canonicalReference": "excel!Excel.ChartFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabelFormat#font:member",
                  "docComment": "/**\n * Specifies the font attributes (font name, font size, color, etc.) for a chart trendline label.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartFont",
                      "canonicalReference": "excel!Excel.ChartFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ChartTrendlineLabelFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartTrendlineType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartTrendlineType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartTrendlineType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTrendlineType.exponential:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "exponential = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"exponential\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "exponential",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTrendlineType.linear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linear = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"linear\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linear",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTrendlineType.logarithmic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logarithmic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"logarithmic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logarithmic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTrendlineType.movingAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "movingAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"movingAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "movingAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTrendlineType.polynomial:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "polynomial = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"polynomial\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "polynomial",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartTrendlineType.power:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "power = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"power\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "power",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartType "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DArea:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DArea = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DArea\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DArea",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DAreaStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DAreaStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DAreaStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DAreaStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DAreaStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DAreaStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DAreaStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DAreaStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DBarClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DBarClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DBarStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DBarStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DBarStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DBarStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DColumn:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DColumn = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DColumn\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DColumn",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DColumnClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DColumnClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DColumnClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DColumnClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DColumnStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DColumnStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DColumnStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DColumnStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DColumnStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DColumnStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DColumnStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DColumnStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DLine:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DLine = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DLine\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DLine",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DPie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DPie = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DPie\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DPie",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType._3DPieExploded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_3DPieExploded = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"3DPieExploded\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "_3DPieExploded",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.area:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "area = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"area\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "area",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.areaStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "areaStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"areaStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "areaStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.areaStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "areaStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"areaStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "areaStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.barClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"barClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.barOfPie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barOfPie = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"barOfPie\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barOfPie",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.barStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"barStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.barStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"barStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.boxwhisker:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boxwhisker = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"boxwhisker\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boxwhisker",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.bubble:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bubble = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bubble\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bubble",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.bubble3DEffect:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bubble3DEffect = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bubble3DEffect\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bubble3DEffect",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.columnClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"columnClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.columnStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"columnStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.columnStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"columnStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneBarClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneBarClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneBarStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneBarStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneBarStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneBarStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneCol:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneCol = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneCol\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneCol",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneColClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneColClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneColClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneColClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneColStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneColStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneColStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneColStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.coneColStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "coneColStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"coneColStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "coneColStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderBarClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderBarClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderBarStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderBarStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderBarStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderBarStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderCol:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderCol = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderCol\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderCol",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderColClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderColClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderColClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderColClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderColStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderColStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderColStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderColStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.cylinderColStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cylinderColStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinderColStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cylinderColStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.doughnut:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doughnut = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"doughnut\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doughnut",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.doughnutExploded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doughnutExploded = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"doughnutExploded\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doughnutExploded",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.funnel:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "funnel = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"funnel\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "funnel",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.histogram:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "histogram = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"histogram\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "histogram",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.line:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "line = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"line\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.lineMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineMarkers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lineMarkers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineMarkers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.lineMarkersStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineMarkersStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lineMarkersStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineMarkersStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.lineMarkersStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineMarkersStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lineMarkersStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineMarkersStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.lineStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lineStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.lineStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lineStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pareto:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pareto = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pareto\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pareto",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pie = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pie\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pie",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pieExploded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pieExploded = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pieExploded\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pieExploded",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pieOfPie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pieOfPie = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pieOfPie\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pieOfPie",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidBarClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidBarClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidBarClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidBarClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidBarStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidBarStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidBarStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidBarStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidBarStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidBarStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidBarStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidBarStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidCol:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidCol = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidCol\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidCol",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidColClustered:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidColClustered = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidColClustered\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidColClustered",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidColStacked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidColStacked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidColStacked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidColStacked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.pyramidColStacked100:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pyramidColStacked100 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pyramidColStacked100\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pyramidColStacked100",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.radar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radar = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"radar\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "radar",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.radarFilled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radarFilled = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"radarFilled\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "radarFilled",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.radarMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radarMarkers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"radarMarkers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "radarMarkers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.regionMap:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "regionMap = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"regionMap\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "regionMap",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.stockHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockHLC = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stockHLC\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockHLC",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.stockOHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockOHLC = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stockOHLC\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockOHLC",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.stockVHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockVHLC = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stockVHLC\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockVHLC",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.stockVOHLC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stockVOHLC = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stockVOHLC\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stockVOHLC",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.sunburst:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sunburst = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sunburst\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sunburst",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.surface:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surface = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"surface\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surface",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.surfaceTopView:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surfaceTopView = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"surfaceTopView\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surfaceTopView",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.surfaceTopViewWireframe:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surfaceTopViewWireframe = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"surfaceTopViewWireframe\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surfaceTopViewWireframe",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.surfaceWireframe:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "surfaceWireframe = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"surfaceWireframe\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "surfaceWireframe",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.treemap:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "treemap = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"treemap\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "treemap",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.waterfall:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "waterfall = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"waterfall\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "waterfall",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.xyscatter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"xyscatter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.xyscatterLines:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterLines = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"xyscatterLines\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterLines",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.xyscatterLinesNoMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterLinesNoMarkers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"xyscatterLinesNoMarkers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterLinesNoMarkers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.xyscatterSmooth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterSmooth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"xyscatterSmooth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterSmooth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartType.xyscatterSmoothNoMarkers:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "xyscatterSmoothNoMarkers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"xyscatterSmoothNoMarkers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "xyscatterSmoothNoMarkers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ChartUnderlineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ChartUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ChartUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ChartUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"single\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ClearApplyTo:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ClearApplyTo "
                }
              ],
              "releaseTag": "Public",
              "name": "ClearApplyTo",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ClearApplyTo.all:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "all = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"all\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "all",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ClearApplyTo.contents:member",
                  "docComment": "/**\n * Clears the contents of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contents = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"contents\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "contents",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ClearApplyTo.formats:member",
                  "docComment": "/**\n * Clears all formatting for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formats = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formats\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formats",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ClearApplyTo.hyperlinks:member",
                  "docComment": "/**\n * Clears all hyperlinks, but leaves all content and formatting intact.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hyperlinks = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hyperlinks\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hyperlinks",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ClearApplyTo.removeHyperlinks:member",
                  "docComment": "/**\n * Removes hyperlinks and formatting for the cell but leaves content, conditional formats, and data validation intact.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeHyperlinks = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"removeHyperlinks\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "removeHyperlinks",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ColorScaleConditionalFormat:interface",
              "docComment": "/**\n * Represents ColorScale criteria for conditional formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ColorScaleConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ColorScaleConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ColorScaleConditionalFormat#criteria:member",
                  "docComment": "/**\n * The criteria of the color scale. Midpoint is optional when using a two point color scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriteria",
                      "canonicalReference": "excel!Excel.ConditionalColorScaleCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criteria",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ColorScaleConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ColorScaleConditionalFormat#threeColorScale:member",
                  "docComment": "/**\n * If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly threeColorScale: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeColorScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Comment:interface",
              "docComment": "/**\n * Represents a comment in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Comment "
                }
              ],
              "releaseTag": "Public",
              "name": "Comment",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#authorEmail:member",
                  "docComment": "/**\n * Gets the email of the comment's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly authorEmail: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "authorEmail",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#authorName:member",
                  "docComment": "/**\n * Gets the name of the comment's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly authorName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "authorName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#content:member",
                  "docComment": "/**\n * The comment's content. The string is plain text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "content: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "content",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#creationDate:member",
                  "docComment": "/**\n * Gets the creation time of the comment. Returns null if the comment was converted from a note, since the comment does not have a creation date.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly creationDate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "creationDate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Comment#delete:member(1)",
                  "docComment": "/**\n * Deletes the comment and all the connected replies.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Comment#getLocation:member(1)",
                  "docComment": "/**\n * Gets the cell where this comment is located.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocation"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#id:member",
                  "docComment": "/**\n * Specifies the comment identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Comment#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#mentions:member",
                  "docComment": "/**\n * Gets the entities (e.g., people) that are mentioned in comments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly mentions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentMention",
                      "canonicalReference": "excel!Excel.CommentMention:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mentions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#replies:member",
                  "docComment": "/**\n * Represents a collection of reply objects associated with the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly replies: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReplyCollection",
                      "canonicalReference": "excel!Excel.CommentReplyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "replies",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#resolved:member",
                  "docComment": "/**\n * The comment thread status. A value of \"true\" means the comment thread is resolved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "resolved: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "resolved",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Comment#richContent:member",
                  "docComment": "/**\n * Gets the rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly richContent: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "richContent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Comment#updateMentions:member(1)",
                  "docComment": "/**\n * Updates the comment content with a specially formatted string and a list of mentions.\n *\n * @param contentWithMentions - The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "updateMentions(contentWithMentions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!Excel.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "contentWithMentions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "updateMentions"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CommentCollection:interface",
              "docComment": "/**\n * Represents a collection of comment objects that are part of the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#add:member(1)",
                  "docComment": "/**\n * Creates a new comment with the given content on the given cell. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n *\n * @param cellAddress - The cell to which the comment is added. This can be a Range object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n *\n * @param content - The comment's content. This can be either a string or CommentRichContent object. Strings are used for plain text. CommentRichContent objects allow for other comment features, such as mentions.\n *\n * @param contentType - Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            cellAddress: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            content: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!Excel.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            contentType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContentType",
                      "canonicalReference": "excel!Excel.ContentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!Excel.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellAddress",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "contentType",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of comments in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a comment from the collection based on its ID.\n *\n * @param commentId - The identifier for the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(commentId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!Excel.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "commentId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a comment from the collection based on its position.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!Excel.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#getItemByCell:member(1)",
                  "docComment": "/**\n * Gets the comment from the specified cell.\n *\n * @param cellAddress - The cell which the comment is on. This can be a Range object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemByCell(cellAddress: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!Excel.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellAddress",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getItemByCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#getItemByReplyId:member(1)",
                  "docComment": "/**\n * Gets the comment to which the given reply is connected.\n *\n * @param replyId - The identifier of comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemByReplyId(replyId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!Excel.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "replyId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemByReplyId"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CommentMention:interface",
              "docComment": "/**\n * Represents the entity that is mentioned in comments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentMention "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentMention",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentMention#email:member",
                  "docComment": "/**\n * The email address of the entity that is mentioned in comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "email: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "email",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentMention#id:member",
                  "docComment": "/**\n * The id of the entity. The id matches one of the ids in `CommentRichContent.richContent`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentMention#name:member",
                  "docComment": "/**\n * The name of the entity that is mentioned in comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CommentReply:interface",
              "docComment": "/**\n * Represents a comment reply in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentReply "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentReply",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#authorEmail:member",
                  "docComment": "/**\n * Gets the email of the comment reply's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly authorEmail: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "authorEmail",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#authorName:member",
                  "docComment": "/**\n * Gets the name of the comment reply's author.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly authorName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "authorName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#content:member",
                  "docComment": "/**\n * The comment reply's content. The string is plain text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "content: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "content",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#creationDate:member",
                  "docComment": "/**\n * Gets the creation time of the comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly creationDate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "creationDate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReply#delete:member(1)",
                  "docComment": "/**\n * Deletes the comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReply#getLocation:member(1)",
                  "docComment": "/**\n * Gets the cell where this comment reply is located.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReply#getParentComment:member(1)",
                  "docComment": "/**\n * Gets the parent comment of this reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getParentComment(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Comment",
                      "canonicalReference": "excel!Excel.Comment:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getParentComment"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#id:member",
                  "docComment": "/**\n * Specifies the comment reply identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReply#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#mentions:member",
                  "docComment": "/**\n * The entities (e.g., people) that are mentioned in comments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly mentions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentMention",
                      "canonicalReference": "excel!Excel.CommentMention:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mentions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#resolved:member",
                  "docComment": "/**\n * The comment reply status. A value of \"true\" means the reply is in the resolved state.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly resolved: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "resolved",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentReply#richContent:member",
                  "docComment": "/**\n * The rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly richContent: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "richContent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReply#updateMentions:member(1)",
                  "docComment": "/**\n * Updates the comment content with a specially formatted string and a list of mentions.\n *\n * @param contentWithMentions - The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "updateMentions(contentWithMentions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!Excel.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "contentWithMentions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "updateMentions"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CommentReplyCollection:interface",
              "docComment": "/**\n * Represents a collection of comment reply objects that are part of the comment.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentReplyCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentReplyCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReplyCollection#add:member(1)",
                  "docComment": "/**\n * Creates a comment reply for comment.\n *\n * @param content - The comment's content. This can be either a string or Interface CommentRichContent (e.g., for comments with mentions).\n *\n * @param contentType - Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            content: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentRichContent",
                      "canonicalReference": "excel!Excel.CommentRichContent:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            contentType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContentType",
                      "canonicalReference": "excel!Excel.ContentType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReply",
                      "canonicalReference": "excel!Excel.CommentReply:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "content",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "contentType",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReplyCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of comment replies in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReplyCollection#getItem:member(1)",
                  "docComment": "/**\n * Returns a comment reply identified by its ID.\n *\n * @param commentReplyId - The identifier for the comment reply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(commentReplyId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReply",
                      "canonicalReference": "excel!Excel.CommentReply:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "commentReplyId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReplyCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a comment reply based on its position in the collection.\n *\n * @param index - The index value of the comment reply to be retrieved. The collection uses zero-based indexing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentReply",
                      "canonicalReference": "excel!Excel.CommentReply:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CommentReplyCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CommentRichContent:interface",
              "docComment": "/**\n * Represents the content contained within a comment or comment reply. Rich content incudes the text string and any other objects contained within the comment body, such as mentions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CommentRichContent "
                }
              ],
              "releaseTag": "Public",
              "name": "CommentRichContent",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentRichContent#mentions:member",
                  "docComment": "/**\n * An array containing all the entities (e.g., people) mentioned within the comment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mentions?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentMention",
                      "canonicalReference": "excel!Excel.CommentMention:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mentions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CommentRichContent#richContent:member",
                  "docComment": "/**\n * Specifies the rich content of the comment (e.g., comment content with mentions, the first mentioned entity has an id attribute of 0, and the second mentioned entity has an id attribute of 1).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "richContent: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "richContent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalCellValueOperator:enum",
              "docComment": "/**\n * Represents the operator of the text conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalCellValueOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalCellValueOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.between:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "between = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"between\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "between",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.equalTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalTo = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"equalTo\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalTo",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.greaterThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThan = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"greaterThan\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThan",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.greaterThanOrEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThanOrEqual = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"greaterThanOrEqual\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThanOrEqual",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.lessThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThan = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lessThan\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThan",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.lessThanOrEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThanOrEqual = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lessThanOrEqual\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThanOrEqual",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.notBetween:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notBetween = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notBetween\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notBetween",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalCellValueOperator.notEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notEqualTo = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notEqualTo\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalCellValueRule:interface",
              "docComment": "/**\n * Represents a cell value conditional format rule.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalCellValueRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalCellValueRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalCellValueRule#formula1:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalCellValueRule#formula2:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalCellValueRule#operator:member",
                  "docComment": "/**\n * The operator of the cell value conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalCellValueOperator",
                      "canonicalReference": "excel!Excel.ConditionalCellValueOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalColorScaleCriteria:interface",
              "docComment": "/**\n * Represents the criteria of the color scale.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalColorScaleCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalColorScaleCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalColorScaleCriteria#maximum:member",
                  "docComment": "/**\n * The maximum point Color Scale Criterion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maximum: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriterion",
                      "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maximum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalColorScaleCriteria#midpoint:member",
                  "docComment": "/**\n * The midpoint Color Scale Criterion if the color scale is a 3-color scale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "midpoint?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriterion",
                      "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "midpoint",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalColorScaleCriteria#minimum:member",
                  "docComment": "/**\n * The minimum point Color Scale Criterion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minimum: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalColorScaleCriterion",
                      "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minimum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion:interface",
              "docComment": "/**\n * Represents a Color Scale Criterion which contains a type, value, and a color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalColorScaleCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalColorScaleCriterion",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion#color:member",
                  "docComment": "/**\n * HTML color code representation of the color scale color (e.g., #FF0000 represents Red).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion#formula:member",
                  "docComment": "/**\n * A number, a formula, or null (if Type is LowestValue).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalColorScaleCriterion#type:member",
                  "docComment": "/**\n * What the criterion conditional formula should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatColorCriterionType",
                      "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalDataBarAxisFormat:enum",
              "docComment": "/**\n * Represents the format options for a Data Bar Axis.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalDataBarAxisFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarAxisFormat",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalDataBarAxisFormat.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalDataBarAxisFormat.cellMidPoint:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellMidPoint = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cellMidPoint\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellMidPoint",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalDataBarAxisFormat.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalDataBarDirection:enum",
              "docComment": "/**\n * Represents the Data Bar direction within a cell.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalDataBarDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalDataBarDirection.context:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "context = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"context\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "context",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalDataBarDirection.leftToRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftToRight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftToRight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftToRight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalDataBarDirection.rightToLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightToLeft = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightToLeft\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightToLeft",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat:interface",
              "docComment": "/**\n * Represents a conditional format DataBar Format for the negative side of the data bar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalDataBarNegativeFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarNegativeFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat#borderColor:member",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\"). \"Empty String\" if no border is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat#fillColor:member",
                  "docComment": "/**\n * HTML color code representing the fill color, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat#matchPositiveBorderColor:member",
                  "docComment": "/**\n * Specifies if the negative DataBar has the same border color as the positive DataBar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchPositiveBorderColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchPositiveBorderColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat#matchPositiveFillColor:member",
                  "docComment": "/**\n * Specifies if the negative DataBar has the same fill color as the positive DataBar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchPositiveFillColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchPositiveFillColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalDataBarPositiveFormat:interface",
              "docComment": "/**\n * Represents a conditional format DataBar Format for the positive side of the data bar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalDataBarPositiveFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarPositiveFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarPositiveFormat#borderColor:member",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\"). \"\" (empty string) if no border is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarPositiveFormat#fillColor:member",
                  "docComment": "/**\n * HTML color code representing the fill color, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fillColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fillColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarPositiveFormat#gradientFill:member",
                  "docComment": "/**\n * Specifies if the DataBar has a gradient.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradientFill: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradientFill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarPositiveFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalDataBarRule:interface",
              "docComment": "/**\n * Represents a rule-type for a Data Bar.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalDataBarRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalDataBarRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarRule#formula:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the databar rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalDataBarRule#type:member",
                  "docComment": "/**\n * The type of rule for the databar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatRuleType",
                      "canonicalReference": "excel!Excel.ConditionalFormatRuleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalFormat:interface",
              "docComment": "/**\n * An object encapsulating a conditional format's range, format, rule, and other properties. To learn more about the conditional formatting object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting | Apply conditional formatting to Excel ranges}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#cellValue:member",
                  "docComment": "/**\n * Returns the cell value conditional format properties if the current conditional format is a CellValue type. For example to format all cells between 5 and 10.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly cellValue: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellValueConditionalFormat",
                      "canonicalReference": "excel!Excel.CellValueConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellValue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#cellValueOrNullObject:member",
                  "docComment": "/**\n * Returns the cell value conditional format properties if the current conditional format is a CellValue type. For example to format all cells between 5 and 10.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly cellValueOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CellValueConditionalFormat",
                      "canonicalReference": "excel!Excel.CellValueConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellValueOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#colorScale:member",
                  "docComment": "/**\n * Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly colorScale: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColorScaleConditionalFormat",
                      "canonicalReference": "excel!Excel.ColorScaleConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#colorScaleOrNullObject:member",
                  "docComment": "/**\n * Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly colorScaleOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColorScaleConditionalFormat",
                      "canonicalReference": "excel!Excel.ColorScaleConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorScaleOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#custom:member",
                  "docComment": "/**\n * Returns the custom conditional format properties if the current conditional format is a custom type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly custom: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomConditionalFormat",
                      "canonicalReference": "excel!Excel.CustomConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#customOrNullObject:member",
                  "docComment": "/**\n * Returns the custom conditional format properties if the current conditional format is a custom type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly customOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomConditionalFormat",
                      "canonicalReference": "excel!Excel.CustomConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "customOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#dataBar:member",
                  "docComment": "/**\n * Returns the data bar properties if the current conditional format is a data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataBar: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataBarConditionalFormat",
                      "canonicalReference": "excel!Excel.DataBarConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataBar",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#dataBarOrNullObject:member",
                  "docComment": "/**\n * Returns the data bar properties if the current conditional format is a data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataBarOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataBarConditionalFormat",
                      "canonicalReference": "excel!Excel.DataBarConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataBarOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#delete:member(1)",
                  "docComment": "/**\n * Deletes this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#getRange:member(1)",
                  "docComment": "/**\n * Returns the range the conditonal format is applied to. Throws an error if the conditional format is applied to multiple ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)",
                  "docComment": "/**\n * Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#getRanges:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas, comprising one or more rectangular ranges, the conditonal format is applied to.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRanges(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRanges"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#iconSet:member",
                  "docComment": "/**\n * Returns the IconSet conditional format properties if the current conditional format is an IconSet type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly iconSet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSetConditionalFormat",
                      "canonicalReference": "excel!Excel.IconSetConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "iconSet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#iconSetOrNullObject:member",
                  "docComment": "/**\n * Returns the IconSet conditional format properties if the current conditional format is an IconSet type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly iconSetOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSetConditionalFormat",
                      "canonicalReference": "excel!Excel.IconSetConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "iconSetOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#id:member",
                  "docComment": "/**\n * The Priority of the Conditional Format within the current ConditionalFormatCollection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#preset:member",
                  "docComment": "/**\n * Returns the preset criteria conditional format. See Excel.PresetCriteriaConditionalFormat for more details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly preset: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PresetCriteriaConditionalFormat",
                      "canonicalReference": "excel!Excel.PresetCriteriaConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "preset",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#presetOrNullObject:member",
                  "docComment": "/**\n * Returns the preset criteria conditional format. See Excel.PresetCriteriaConditionalFormat for more details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly presetOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PresetCriteriaConditionalFormat",
                      "canonicalReference": "excel!Excel.PresetCriteriaConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "presetOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#priority:member",
                  "docComment": "/**\n * The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order. Use a negative priority to begin from the back. Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority. Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "priority: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "priority",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#stopIfTrue:member",
                  "docComment": "/**\n * If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell. Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stopIfTrue: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stopIfTrue",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#textComparison:member",
                  "docComment": "/**\n * Returns the specific text conditional format properties if the current conditional format is a text type. For example to format cells matching the word \"Text\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly textComparison: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextConditionalFormat",
                      "canonicalReference": "excel!Excel.TextConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textComparison",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#textComparisonOrNullObject:member",
                  "docComment": "/**\n * Returns the specific text conditional format properties if the current conditional format is a text type. For example to format cells matching the word \"Text\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly textComparisonOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextConditionalFormat",
                      "canonicalReference": "excel!Excel.TextConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textComparisonOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#topBottom:member",
                  "docComment": "/**\n * Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type. For example to format the top 10% or bottom 10 items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly topBottom: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TopBottomConditionalFormat",
                      "canonicalReference": "excel!Excel.TopBottomConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topBottom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#topBottomOrNullObject:member",
                  "docComment": "/**\n * Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type. For example to format the top 10% or bottom 10 items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly topBottomOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TopBottomConditionalFormat",
                      "canonicalReference": "excel!Excel.TopBottomConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topBottomOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormat#type:member",
                  "docComment": "/**\n * A type of conditional format. Only one can be set at a time.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatType",
                      "canonicalReference": "excel!Excel.ConditionalFormatType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalFormatCollection:interface",
              "docComment": "/**\n * Represents a collection of all the conditional formats that are overlap the range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalFormatCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new conditional format to the collection at the first/top priority.\n *\n * @param type - The type of conditional format being added. See Excel.ConditionalFormatType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatType",
                      "canonicalReference": "excel!Excel.ConditionalFormatType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!Excel.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatCollection#clearAll:member(1)",
                  "docComment": "/**\n * Clears all conditional formats active on the current specified range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearAll(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearAll"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of conditional formats in the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatCollection#getItem:member(1)",
                  "docComment": "/**\n * Returns a conditional format for the given ID.\n *\n * @param id - The id of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!Excel.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Returns a conditional format at the given index.\n *\n * @param index - Index of the conditional formats to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormat",
                      "canonicalReference": "excel!Excel.ConditionalFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType:enum",
              "docComment": "/**\n * Represents the types of color criterion for conditional formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatColorCriterionType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatColorCriterionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.formula:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formula\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.highestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "highestValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"highestValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "highestValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.lowestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lowestValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lowestValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lowestValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"number\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatColorCriterionType.percentile:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentile = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentile\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentile",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalFormatDirection:enum",
              "docComment": "/**\n * Represents the direction for a selection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatDirection.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatDirection.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType:enum",
              "docComment": "/**\n * Represents the types of icon conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatIconRuleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatIconRuleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType.formula:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formula\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"number\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType.percentile:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentile = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentile\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentile",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion:enum",
              "docComment": "/**\n * Represents the criteria for the Preset Criteria conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatPresetCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatPresetCriterion",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.aboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "aboveAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"aboveAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "aboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.belowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "belowAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"belowAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "belowAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.blanks:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blanks = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"blanks\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blanks",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.duplicateValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicateValues = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"duplicateValues\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "duplicateValues",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.equalOrAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalOrAboveAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"equalOrAboveAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalOrAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.equalOrBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalOrBelowAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"equalOrBelowAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalOrBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.errors:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errors = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errors\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errors",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.lastMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastMonth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastMonth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastMonth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.lastSevenDays:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastSevenDays = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastSevenDays\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastSevenDays",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.lastWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastWeek = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastWeek\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastWeek",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.nextMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextMonth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextMonth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextMonth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.nextWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextWeek = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextWeek\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextWeek",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.nonBlanks:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nonBlanks = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nonBlanks\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nonBlanks",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.nonErrors:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nonErrors = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nonErrors\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nonErrors",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oneStdDevAboveAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"oneStdDevAboveAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oneStdDevAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.oneStdDevBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oneStdDevBelowAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"oneStdDevBelowAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oneStdDevBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.thisMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisMonth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thisMonth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisMonth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.thisWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisWeek = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thisWeek\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisWeek",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.threeStdDevAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeStdDevAboveAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeStdDevAboveAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeStdDevAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.threeStdDevBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeStdDevBelowAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeStdDevBelowAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeStdDevBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.today:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "today = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"today\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "today",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.tomorrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tomorrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"tomorrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tomorrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.twoStdDevAboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoStdDevAboveAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"twoStdDevAboveAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoStdDevAboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.twoStdDevBelowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoStdDevBelowAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"twoStdDevBelowAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoStdDevBelowAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.uniqueValues:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "uniqueValues = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"uniqueValues\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "uniqueValues",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion.yesterday:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "yesterday = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"yesterday\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yesterday",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalFormatRule:interface",
              "docComment": "/**\n * Represents a rule, for all traditional rule/format pairings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalFormatRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatRule#formula:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatRule#formulaLocal:member",
                  "docComment": "/**\n * The formula, if required, to evaluate the conditional format rule on in the user's language.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulaLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulaLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalFormatRule#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalFormatRuleType:enum",
              "docComment": "/**\n * Represents the types of conditional format values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatRuleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatRuleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.automatic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"automatic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.formula:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formula\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.highestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "highestValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"highestValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "highestValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.lowestValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lowestValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lowestValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lowestValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"number\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.percent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatRuleType.percentile:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentile = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentile\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentile",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalFormatType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalFormatType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalFormatType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.cellValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cellValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.colorScale:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colorScale = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"colorScale\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "colorScale",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.containsText:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "containsText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"containsText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "containsText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.dataBar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataBar = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dataBar\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataBar",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.iconSet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "iconSet = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"iconSet\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "iconSet",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.presetCriteria:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "presetCriteria = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"presetCriteria\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "presetCriteria",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalFormatType.topBottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topBottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topBottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topBottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalIconCriterion:interface",
              "docComment": "/**\n * Represents an Icon Criterion which contains a type, value, an Operator, and an optional custom icon, if not using an iconset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalIconCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalIconCriterion",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterion#customIcon:member",
                  "docComment": "/**\n * The custom icon for the current criterion if different from the default IconSet, else null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "customIcon?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!Excel.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "customIcon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterion#formula:member",
                  "docComment": "/**\n * A number or a formula depending on the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterion#operator:member",
                  "docComment": "/**\n * GreaterThan or GreaterThanOrEqual for each of the rule type for the Icon conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalIconCriterionOperator",
                      "canonicalReference": "excel!Excel.ConditionalIconCriterionOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterion#type:member",
                  "docComment": "/**\n * What the icon conditional formula should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatIconRuleType",
                      "canonicalReference": "excel!Excel.ConditionalFormatIconRuleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalIconCriterionOperator:enum",
              "docComment": "/**\n * Represents the operator for each icon criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalIconCriterionOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalIconCriterionOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterionOperator.greaterThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThan = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"greaterThan\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThan",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterionOperator.greaterThanOrEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThanOrEqual = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"greaterThanOrEqual\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThanOrEqual",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalIconCriterionOperator.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalPresetCriteriaRule:interface",
              "docComment": "/**\n * Represents the Preset Criteria Conditional Format Rule\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalPresetCriteriaRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalPresetCriteriaRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalPresetCriteriaRule#criterion:member",
                  "docComment": "/**\n * The criterion of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criterion: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatPresetCriterion",
                      "canonicalReference": "excel!Excel.ConditionalFormatPresetCriterion:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criterion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface",
              "docComment": "/**\n * Represents the border of an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorder",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorder#color:member",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorder#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorder#sideIndex:member",
                  "docComment": "/**\n * Constant value that indicates the specific side of the border. See Excel.ConditionalRangeBorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly sideIndex: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderIndex",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sideIndex",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorder#style:member",
                  "docComment": "/**\n * One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderLineStyle",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection:interface",
              "docComment": "/**\n * Represents the border objects that make up range border.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeBorderCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorderCollection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#bottom:member",
                  "docComment": "/**\n * Gets the bottom border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly bottom: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#count:member",
                  "docComment": "/**\n * Number of border objects in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a border object using its name.\n *\n * @param index - Index value of the border object to be retrieved. See Excel.ConditionalRangeBorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(index: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderIndex",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a border object using its index.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#left:member",
                  "docComment": "/**\n * Gets the left border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly left: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#right:member",
                  "docComment": "/**\n * Gets the right border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly right: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection#top:member",
                  "docComment": "/**\n * Gets the top border.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly top: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorder",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalRangeBorderIndex "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorderIndex",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex.edgeBottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeBottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeBottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeBottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex.edgeLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeLeft = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeLeft\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeLeft",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex.edgeRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeRight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeRight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeRight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderIndex.edgeTop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "edgeTop = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"edgeTop\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "edgeTop",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalRangeBorderLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeBorderLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle.continuous:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "continuous = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"continuous\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "continuous",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDotDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle.dot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeBorderLineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalRangeFill:interface",
              "docComment": "/**\n * Represents the background of a conditional range object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeFill "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFill#clear:member(1)",
                  "docComment": "/**\n * Resets the fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFill#color:member",
                  "docComment": "/**\n * HTML color code representing the color of the fill, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFill#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalRangeFont:interface",
              "docComment": "/**\n * This object represents the font attributes (font style, color, etc.) for an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeFont "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFont",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#bold:member",
                  "docComment": "/**\n * Specifies if the font is bold.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#clear:member(1)",
                  "docComment": "/**\n * Resets the font formats.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#color:member",
                  "docComment": "/**\n * HTML color code representation of the text color (e.g., #FF0000 represents Red).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#italic:member",
                  "docComment": "/**\n * Specifies if the font is italic.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#strikethrough:member",
                  "docComment": "/**\n * Specifies the strikethrough status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strikethrough: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strikethrough",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFont#underline:member",
                  "docComment": "/**\n * The type of underline applied to the font. See Excel.ConditionalRangeFontUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFontUnderlineStyle",
                      "canonicalReference": "excel!Excel.ConditionalRangeFontUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalRangeFontUnderlineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalRangeFontUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFontUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeFontUnderlineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"double\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeFontUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalRangeFontUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"single\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalRangeFormat:interface",
              "docComment": "/**\n * A format object encapsulating the conditional formats range's font, fill, borders, and other properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalRangeFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalRangeFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFormat#borders:member",
                  "docComment": "/**\n * Collection of border objects that apply to the overall conditional format range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly borders: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeBorderCollection",
                      "canonicalReference": "excel!Excel.ConditionalRangeBorderCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFormat#fill:member",
                  "docComment": "/**\n * Returns the fill object defined on the overall conditional format range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFill",
                      "canonicalReference": "excel!Excel.ConditionalRangeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFormat#font:member",
                  "docComment": "/**\n * Returns the font object defined on the overall conditional format range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFont",
                      "canonicalReference": "excel!Excel.ConditionalRangeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalRangeFormat#numberFormat:member",
                  "docComment": "/**\n * Represents Excel's number format code for the given range. Cleared if null is passed in.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalTextComparisonRule:interface",
              "docComment": "/**\n * Represents a Cell Value Conditional Format Rule\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalTextComparisonRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTextComparisonRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalTextComparisonRule#operator:member",
                  "docComment": "/**\n * The operator of the text conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTextOperator",
                      "canonicalReference": "excel!Excel.ConditionalTextOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalTextComparisonRule#text:member",
                  "docComment": "/**\n * The Text value of conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalTextOperator:enum",
              "docComment": "/**\n * Represents the operator of the text conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalTextOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTextOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTextOperator.beginsWith:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginsWith = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"beginsWith\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginsWith",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTextOperator.contains:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contains = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"contains\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "contains",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTextOperator.endsWith:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endsWith = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"endsWith\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endsWith",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTextOperator.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTextOperator.notContains:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notContains = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notContains\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notContains",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType:enum",
              "docComment": "/**\n * Represents the criteria for the above/below average conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConditionalTopBottomCriterionType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTopBottomCriterionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType.bottomItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomItems = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomItems\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomItems",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType.bottomPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomPercent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomPercent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomPercent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType.topItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topItems = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topItems\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topItems",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType.topPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topPercent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topPercent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topPercent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ConditionalTopBottomRule:interface",
              "docComment": "/**\n * Represents the rule of the top/bottom conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ConditionalTopBottomRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ConditionalTopBottomRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomRule#rank:member",
                  "docComment": "/**\n * The rank between 1 and 1000 for numeric ranks or 1 and 100 for percent ranks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rank: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rank",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ConditionalTopBottomRule#type:member",
                  "docComment": "/**\n * Format values based on the top or bottom rank.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTopBottomCriterionType",
                      "canonicalReference": "excel!Excel.ConditionalTopBottomCriterionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ConnectorType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ConnectorType "
                }
              ],
              "releaseTag": "Public",
              "name": "ConnectorType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConnectorType.curve:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curve = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"curve\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curve",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConnectorType.elbow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "elbow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"elbow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "elbow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ConnectorType.straight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "straight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"straight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "straight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ContentType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ContentType "
                }
              ],
              "releaseTag": "Public",
              "name": "ContentType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ContentType.mention:member",
                  "docComment": "/**\n * Comment content containing mentions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mention = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mention\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mention",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ContentType.plain:member",
                  "docComment": "/**\n * Indicates plain format type of the comment content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plain = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"plain\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plain",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CultureInfo:interface",
              "docComment": "/**\n * Provides information based on current system culture settings. This includes the culture names, number formatting, and other culturally dependent settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CultureInfo "
                }
              ],
              "releaseTag": "Public",
              "name": "CultureInfo",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CultureInfo#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CultureInfo#name:member",
                  "docComment": "/**\n * Gets the culture name in the format languagecode2-country/regioncode2 (e.g., \"zh-cn\" or \"en-us\"). This is based on current system settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CultureInfo#numberFormat:member",
                  "docComment": "/**\n * Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly numberFormat: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberFormatInfo",
                      "canonicalReference": "excel!Excel.NumberFormatInfo:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomConditionalFormat:interface",
              "docComment": "/**\n * Represents a custom conditional format type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomConditionalFormat#format:member",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!Excel.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomConditionalFormat#rule:member",
                  "docComment": "/**\n * Specifies the Rule object on this conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatRule",
                      "canonicalReference": "excel!Excel.ConditionalFormatRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomDataValidation:interface",
              "docComment": "/**\n * Represents the Custom data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomDataValidation#formula:member",
                  "docComment": "/**\n * A custom data validation formula. This creates special input rules, such as preventing duplicates, or limiting the total in a range of cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomProperty:interface",
              "docComment": "/**\n * Represents a custom property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomProperty "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomProperty",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomProperty#delete:member(1)",
                  "docComment": "/**\n * Deletes the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomProperty#key:member",
                  "docComment": "/**\n * The key of the custom property. The key is limited to 255 characters outside of Excel on the web (larger keys are automatically trimmed to 255 characters on other platforms).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "key",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomProperty#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomProperty#type:member",
                  "docComment": "/**\n * The type of the value used for the custom property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DocumentPropertyType",
                      "canonicalReference": "excel!Excel.DocumentPropertyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomProperty#value:member",
                  "docComment": "/**\n * The value of the custom property. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomPropertyCollection:interface",
              "docComment": "/**\n * Contains the collection of customProperty objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomPropertyCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomPropertyCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomPropertyCollection#add:member(1)",
                  "docComment": "/**\n * Creates a new or sets an existing custom property.\n *\n * @param key - Required. The custom property's key, which is case-insensitive. The key is limited to 255 characters outside of Excel on the web (larger keys are automatically trimmed to 255 characters on other platforms).\n *\n * @param value - Required. The custom property's value. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperty",
                      "canonicalReference": "excel!Excel.CustomProperty:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomPropertyCollection#deleteAll:member(1)",
                  "docComment": "/**\n * Deletes all custom properties in this collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "deleteAll(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "deleteAll"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomPropertyCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the count of custom properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomPropertyCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a custom property object by its key, which is case-insensitive. Throws if the custom property does not exist.\n *\n * @param key - The key that identifies the custom property object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperty",
                      "canonicalReference": "excel!Excel.CustomProperty:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomPropertyCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a custom property object by its key, which is case-insensitive. Returns a null object if the custom property does not exist.\n *\n * @param key - Required. The key that identifies the custom property object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomProperty",
                      "canonicalReference": "excel!Excel.CustomProperty:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomPropertyCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomXmlPart:interface",
              "docComment": "/**\n * Represents a custom XML part object in a workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomXmlPart "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomXmlPart",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPart#delete:member(1)",
                  "docComment": "/**\n * Deletes the custom XML part.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPart#getXml:member(1)",
                  "docComment": "/**\n * Gets the custom XML part's full XML content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getXml(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getXml"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomXmlPart#id:member",
                  "docComment": "/**\n * The custom XML part's ID.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPart#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.CustomXmlPart#namespaceUri:member",
                  "docComment": "/**\n * The custom XML part's namespace URI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly namespaceUri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "namespaceUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPart#setXml:member(1)",
                  "docComment": "/**\n * Sets the custom XML part's full XML content.\n *\n * @param xml - XML content for the part.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setXml(xml: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "xml",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setXml"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomXmlPartCollection:interface",
              "docComment": "/**\n * A collection of custom XML parts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomXmlPartCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomXmlPartCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new custom XML part to the workbook.\n *\n * @param xml - XML content. Must be a valid XML fragment.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(xml: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "xml",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartCollection#getByNamespace:member(1)",
                  "docComment": "/**\n * Gets a new scoped collection of custom XML parts whose namespaces match the given namespace.\n *\n * @param namespaceUri - This must be a fully qualified schema URI; for example, \"http://schemas.contoso.com/review/1.0\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getByNamespace(namespaceUri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPartScopedCollection",
                      "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "namespaceUri",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getByNamespace"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of CustomXml parts in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a custom XML part based on its ID.\n *\n * @param id - ID of the object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a custom XML part based on its ID. If the CustomXmlPart does not exist, the return object's isNull property will be true.\n *\n * @param id - ID of the object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection:interface",
              "docComment": "/**\n * A scoped collection of custom XML parts. A scoped collection is the result of some operation (e.g., filtering by namespace). A scoped collection cannot be scoped any further.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface CustomXmlPartScopedCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "CustomXmlPartScopedCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of CustomXML parts in this collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a custom XML part based on its ID.\n *\n * @param id - ID of the object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a custom XML part based on its ID. If the CustomXmlPart does not exist, the return object's isNull property will be true.\n *\n * @param id - ID of the object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection#getOnlyItem:member(1)",
                  "docComment": "/**\n * If the collection contains exactly one item, this method returns it. Otherwise, this method produces an error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOnlyItem(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOnlyItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection#getOnlyItemOrNullObject:member(1)",
                  "docComment": "/**\n * If the collection contains exactly one item, this method returns it. Otherwise, this method returns Null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOnlyItemOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPart",
                      "canonicalReference": "excel!Excel.CustomXmlPart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getOnlyItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.CustomXmlPartScopedCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataBarConditionalFormat:interface",
              "docComment": "/**\n * Represents an Excel Conditional Data Bar Type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataBarConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "DataBarConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#axisColor:member",
                  "docComment": "/**\n * HTML color code representing the color of the Axis line, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\"). \"\" (empty string) if no axis is present or set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "axisColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "axisColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#axisFormat:member",
                  "docComment": "/**\n * Representation of how the axis is determined for an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "axisFormat: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarAxisFormat",
                      "canonicalReference": "excel!Excel.ConditionalDataBarAxisFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "axisFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#barDirection:member",
                  "docComment": "/**\n * Specifies the direction that the data bar graphic should be based on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "barDirection: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarDirection",
                      "canonicalReference": "excel!Excel.ConditionalDataBarDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "barDirection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#lowerBoundRule:member",
                  "docComment": "/**\n * The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar. The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lowerBoundRule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarRule",
                      "canonicalReference": "excel!Excel.ConditionalDataBarRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lowerBoundRule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#negativeFormat:member",
                  "docComment": "/**\n * Representation of all values to the left of the axis in an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly negativeFormat: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarNegativeFormat",
                      "canonicalReference": "excel!Excel.ConditionalDataBarNegativeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "negativeFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#positiveFormat:member",
                  "docComment": "/**\n * Representation of all values to the right of the axis in an Excel data bar.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly positiveFormat: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarPositiveFormat",
                      "canonicalReference": "excel!Excel.ConditionalDataBarPositiveFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "positiveFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#showDataBarOnly:member",
                  "docComment": "/**\n * If true, hides the values from the cells where the data bar is applied.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showDataBarOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showDataBarOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataBarConditionalFormat#upperBoundRule:member",
                  "docComment": "/**\n * The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar. The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upperBoundRule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalDataBarRule",
                      "canonicalReference": "excel!Excel.ConditionalDataBarRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upperBoundRule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataConnectionCollection:interface",
              "docComment": "/**\n * Represents a collection of all the Data Connections that are part of the workbook or worksheet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataConnectionCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "DataConnectionCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataConnectionCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataConnectionCollection#refreshAll:member(1)",
                  "docComment": "/**\n * Refreshes all the Data Connections in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refreshAll(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refreshAll"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataPivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel DataPivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataPivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "DataPivotHierarchy",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#field:member",
                  "docComment": "/**\n * Returns the PivotFields associated with the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly field: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!Excel.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "field",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#id:member",
                  "docComment": "/**\n * Id of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#name:member",
                  "docComment": "/**\n * Name of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#numberFormat:member",
                  "docComment": "/**\n * Number format of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#position:member",
                  "docComment": "/**\n * Position of the DataPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#setToDefault:member(1)",
                  "docComment": "/**\n * Reset the DataPivotHierarchy back to its default values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setToDefault(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setToDefault"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#showAs:member",
                  "docComment": "/**\n * Specifies if the data should be shown as a specific summary calculation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAs: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShowAsRule",
                      "canonicalReference": "excel!Excel.ShowAsRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAs",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchy#summarizeBy:member",
                  "docComment": "/**\n * Specifies if all items of the DataPivotHierarchy are shown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "summarizeBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AggregationFunction",
                      "canonicalReference": "excel!Excel.AggregationFunction:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "summarizeBy",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataPivotHierarchyCollection:interface",
              "docComment": "/**\n * Represents a collection of DataPivotHierarchy items associated with the PivotTable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataPivotHierarchyCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "DataPivotHierarchyCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchyCollection#add:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!Excel.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!Excel.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchyCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of pivot hierarchies in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchyCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a DataPivotHierarchy by its name or id.\n *\n * @param name - Name of the DataPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!Excel.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchyCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a DataPivotHierarchy by name. If the DataPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the DataPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!Excel.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchyCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataPivotHierarchyCollection#remove:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(DataPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!Excel.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "DataPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "remove"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataValidation:interface",
              "docComment": "/**\n * Represents the data validation applied to the current range. To learn more about the data validation object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-data-validation | Add data validation to Excel ranges}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidation",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataValidation#clear:member(1)",
                  "docComment": "/**\n * Clears the data validation from the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidation#errorAlert:member",
                  "docComment": "/**\n * Error alert when user enters invalid data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorAlert: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationErrorAlert",
                      "canonicalReference": "excel!Excel.DataValidationErrorAlert:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorAlert",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataValidation#getInvalidCells:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas, comprising one or more rectangular ranges, with invalid cell values. If all cell values are valid, this function will throw an ItemNotFound error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInvalidCells(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInvalidCells"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataValidation#getInvalidCellsOrNullObject:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas, comprising one or more rectangular ranges, with invalid cell values. If all cell values are valid, this function will return null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInvalidCellsOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getInvalidCellsOrNullObject"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidation#ignoreBlanks:member",
                  "docComment": "/**\n * Specifies if data validation will be performed on blank cells, it defaults to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ignoreBlanks: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ignoreBlanks",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DataValidation#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidation#prompt:member",
                  "docComment": "/**\n * Prompt when users select a cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "prompt: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationPrompt",
                      "canonicalReference": "excel!Excel.DataValidationPrompt:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "prompt",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidation#rule:member",
                  "docComment": "/**\n * Data validation rule that contains different type of data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationRule",
                      "canonicalReference": "excel!Excel.DataValidationRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidation#type:member",
                  "docComment": "/**\n * Type of the data validation, see Excel.DataValidationType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationType",
                      "canonicalReference": "excel!Excel.DataValidationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidation#valid:member",
                  "docComment": "/**\n * Represents if all cell values are valid according to the data validation rules. Returns true if all cell values are valid, or false if all cell values are invalid. Returns null if there are both valid and invalid cell values within the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly valid: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "valid",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.DataValidationAlertStyle:enum",
              "docComment": "/**\n * Represents Data validation error alert style. The default is \"Stop\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DataValidationAlertStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationAlertStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationAlertStyle.information:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "information = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"information\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "information",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationAlertStyle.stop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stop = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stop\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stop",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationAlertStyle.warning:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "warning = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"warning\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "warning",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataValidationErrorAlert:interface",
              "docComment": "/**\n * Represents the error alert properties for the data validation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidationErrorAlert "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationErrorAlert",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationErrorAlert#message:member",
                  "docComment": "/**\n * Represents error alert message.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationErrorAlert#showAlert:member",
                  "docComment": "/**\n * Specifies whether to show an error alert dialog when a user enters invalid data. The default is true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAlert: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAlert",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationErrorAlert#style:member",
                  "docComment": "/**\n * The data validation alert type, please see Excel.DataValidationAlertStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationAlertStyle",
                      "canonicalReference": "excel!Excel.DataValidationAlertStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationErrorAlert#title:member",
                  "docComment": "/**\n * Represents error alert dialog title.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.DataValidationOperator:enum",
              "docComment": "/**\n * Represents Data validation operator enum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DataValidationOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.between:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "between = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"between\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "between",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.equalTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "equalTo = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"equalTo\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "equalTo",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.greaterThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThan = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"greaterThan\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThan",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.greaterThanOrEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "greaterThanOrEqualTo = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"greaterThanOrEqualTo\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "greaterThanOrEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.lessThan:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThan = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lessThan\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThan",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.lessThanOrEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lessThanOrEqualTo = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lessThanOrEqualTo\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lessThanOrEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.notBetween:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notBetween = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notBetween\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notBetween",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationOperator.notEqualTo:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notEqualTo = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notEqualTo\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notEqualTo",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataValidationPrompt:interface",
              "docComment": "/**\n * Represents the user prompt properties for the data validation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidationPrompt "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationPrompt",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationPrompt#message:member",
                  "docComment": "/**\n * Specifies the message of the prompt.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationPrompt#showPrompt:member",
                  "docComment": "/**\n * Specifies if a prompt is shown when a user selects a cell with data validation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showPrompt: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showPrompt",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationPrompt#title:member",
                  "docComment": "/**\n * Specifies the title for the prompt.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DataValidationRule:interface",
              "docComment": "/**\n * Data validation rule contains different types of data validation. You can only use one of them at a time according the Excel.DataValidationType.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DataValidationRule "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#custom:member",
                  "docComment": "/**\n * Custom data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomDataValidation",
                      "canonicalReference": "excel!Excel.CustomDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#date:member",
                  "docComment": "/**\n * Date data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DateTimeDataValidation",
                      "canonicalReference": "excel!Excel.DateTimeDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#decimal:member",
                  "docComment": "/**\n * Decimal data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "decimal?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BasicDataValidation",
                      "canonicalReference": "excel!Excel.BasicDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decimal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#list:member",
                  "docComment": "/**\n * List data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "list?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ListDataValidation",
                      "canonicalReference": "excel!Excel.ListDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "list",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#textLength:member",
                  "docComment": "/**\n * TextLength data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textLength?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BasicDataValidation",
                      "canonicalReference": "excel!Excel.BasicDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textLength",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#time:member",
                  "docComment": "/**\n * Time data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "time?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DateTimeDataValidation",
                      "canonicalReference": "excel!Excel.DateTimeDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "time",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DataValidationRule#wholeNumber:member",
                  "docComment": "/**\n * WholeNumber data validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeNumber?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BasicDataValidation",
                      "canonicalReference": "excel!Excel.BasicDataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeNumber",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.DataValidationType:enum",
              "docComment": "/**\n * Represents Data validation type enum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DataValidationType "
                }
              ],
              "releaseTag": "Public",
              "name": "DataValidationType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.custom:member",
                  "docComment": "/**\n * Custom data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.date:member",
                  "docComment": "/**\n * Date data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"date\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.decimal:member",
                  "docComment": "/**\n * Decimal data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "decimal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"decimal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decimal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.inconsistent:member",
                  "docComment": "/**\n * Inconsistent means that the range has inconsistent data validation (there are different rules on different cells)\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inconsistent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"inconsistent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inconsistent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.list:member",
                  "docComment": "/**\n * List data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "list = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"list\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "list",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.mixedCriteria:member",
                  "docComment": "/**\n * MixedCriteria means that the range has data validation present on some but not all cells\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mixedCriteria = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mixedCriteria\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mixedCriteria",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.none:member",
                  "docComment": "/**\n * None means allow any value and so there is no data validation in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.textLength:member",
                  "docComment": "/**\n * Text length data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textLength = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"textLength\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textLength",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.time:member",
                  "docComment": "/**\n * Time data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "time = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"time\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "time",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DataValidationType.wholeNumber:member",
                  "docComment": "/**\n * Whole number data validation type\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wholeNumber = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wholeNumber\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wholeNumber",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DateTimeDataValidation:interface",
              "docComment": "/**\n * Represents the Date data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DateTimeDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "DateTimeDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DateTimeDataValidation#formula1:member",
                  "docComment": "/**\n * Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand. When setting the value, it can be passed in as a Date, a Range object, or a string formula (where the string is either a stringified date/time in ISO8601 format, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DateTimeDataValidation#formula2:member",
                  "docComment": "/**\n * With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan. When setting the value, it can be passed in as a Date, a Range object, or a string (where the string is either a stringified date/time in ISO8601 format, a cell reference like \"=A1\", or a formula like \"=MIN(A1, B1)\"). When retrieving the value, it will always be returned as a string formula, for example: \"=10\", \"=A1\", \"=SUM(A1:B5)\", etc.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DateTimeDataValidation#operator:member",
                  "docComment": "/**\n * The operator to use for validating the data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidationOperator",
                      "canonicalReference": "excel!Excel.DataValidationOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.DeleteShiftDirection:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DeleteShiftDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "DeleteShiftDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DeleteShiftDirection.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DeleteShiftDirection.up:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "up = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"up\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "up",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.DocumentProperties:interface",
              "docComment": "/**\n * Represents workbook properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DocumentProperties "
                }
              ],
              "releaseTag": "Public",
              "name": "DocumentProperties",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#author:member",
                  "docComment": "/**\n * The author of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "author: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "author",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#category:member",
                  "docComment": "/**\n * The category of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "category: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "category",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#comments:member",
                  "docComment": "/**\n * The comments of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "comments: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "comments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#company:member",
                  "docComment": "/**\n * The company of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "company: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "company",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#creationDate:member",
                  "docComment": "/**\n * Gets the creation date of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly creationDate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "creationDate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#custom:member",
                  "docComment": "/**\n * Gets the collection of custom properties of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly custom: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomPropertyCollection",
                      "canonicalReference": "excel!Excel.CustomPropertyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#keywords:member",
                  "docComment": "/**\n * The keywords of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "keywords: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "keywords",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#lastAuthor:member",
                  "docComment": "/**\n * Gets the last author of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly lastAuthor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastAuthor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#manager:member",
                  "docComment": "/**\n * The manager of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "manager: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "manager",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#revisionNumber:member",
                  "docComment": "/**\n * Gets the revision number of the workbook. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "revisionNumber: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "revisionNumber",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#subject:member",
                  "docComment": "/**\n * The subject of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subject: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.DocumentProperties#title:member",
                  "docComment": "/**\n * The title of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.DocumentPropertyType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DocumentPropertyType "
                }
              ],
              "releaseTag": "Public",
              "name": "DocumentPropertyType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DocumentPropertyType.boolean:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boolean = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"boolean\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boolean",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DocumentPropertyType.date:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"date\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DocumentPropertyType.float:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "float = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"float\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "float",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DocumentPropertyType.number:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "number = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"number\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "number",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DocumentPropertyType.string:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "string = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"string\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "string",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.DynamicFilterCriteria:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum DynamicFilterCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "DynamicFilterCriteria",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.aboveAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "aboveAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"aboveAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "aboveAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodApril:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodApril = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodApril\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodApril",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodAugust:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodAugust = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodAugust\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodAugust",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodDecember:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodDecember = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodDecember\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodDecember",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodFebruray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodFebruray = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodFebruray\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodFebruray",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodJanuary:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodJanuary = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodJanuary\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodJanuary",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodJuly:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodJuly = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodJuly\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodJuly",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodJune:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodJune = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodJune\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodJune",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodMarch:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodMarch = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodMarch\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodMarch",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodMay:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodMay = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodMay\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodMay",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodNovember:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodNovember = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodNovember\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodNovember",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodOctober:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodOctober = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodOctober\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodOctober",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodQuarter1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodQuarter1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodQuarter2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodQuarter2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodQuarter3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodQuarter3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodQuarter4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodQuarter4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodQuarter4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodQuarter4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.allDatesInPeriodSeptember:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allDatesInPeriodSeptember = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"allDatesInPeriodSeptember\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allDatesInPeriodSeptember",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.belowAverage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "belowAverage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"belowAverage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "belowAverage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.lastMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastMonth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastMonth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastMonth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.lastQuarter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastQuarter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastQuarter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastQuarter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.lastWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastWeek = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastWeek\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastWeek",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.lastYear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lastYear = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lastYear\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lastYear",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.nextMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextMonth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextMonth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextMonth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.nextQuarter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextQuarter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextQuarter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextQuarter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.nextWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextWeek = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextWeek\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextWeek",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.nextYear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nextYear = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nextYear\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nextYear",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.thisMonth:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisMonth = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thisMonth\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisMonth",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.thisQuarter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisQuarter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thisQuarter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisQuarter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.thisWeek:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisWeek = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thisWeek\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisWeek",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.thisYear:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thisYear = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thisYear\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thisYear",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.today:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "today = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"today\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "today",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.tomorrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tomorrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"tomorrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tomorrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.unknown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unknown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.yearToDate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "yearToDate = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"yearToDate\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yearToDate",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.DynamicFilterCriteria.yesterday:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "yesterday = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"yesterday\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "yesterday",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.FillPattern:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FillPattern "
                }
              ],
              "releaseTag": "Public",
              "name": "FillPattern",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.checker:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "checker = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"checker\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "checker",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.crissCross:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "crissCross = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"crissCross\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "crissCross",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.down:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "down = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"down\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "down",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.gray16:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray16 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gray16\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray16",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.gray25:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray25 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gray25\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray25",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.gray50:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray50 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gray50\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray50",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.gray75:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray75 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gray75\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray75",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.gray8:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gray8 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gray8\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gray8",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.grid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "grid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"grid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "grid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.horizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"horizontal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.lightDown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightDown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lightDown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightDown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.lightHorizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightHorizontal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lightHorizontal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightHorizontal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.lightUp:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightUp = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lightUp\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightUp",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.lightVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightVertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lightVertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightVertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.linearGradient:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linearGradient = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"linearGradient\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linearGradient",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.rectangularGradient:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rectangularGradient = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rectangularGradient\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rectangularGradient",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.semiGray75:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "semiGray75 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"semiGray75\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "semiGray75",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.solid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "solid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"solid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "solid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.up:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "up = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"up\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "up",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FillPattern.vertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"vertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Filter:interface",
              "docComment": "/**\n * Manages the filtering of a table's column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Filter "
                }
              ],
              "releaseTag": "Public",
              "name": "Filter",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#apply:member(1)",
                  "docComment": "/**\n * Apply the given filter criteria on the given column.\n *\n * @param criteria - The criteria to apply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!Excel.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyBottomItemsFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Bottom Item\" filter to the column for the given number of elements.\n *\n * @param count - The number of elements from the bottom to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyBottomItemsFilter(count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyBottomItemsFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyBottomPercentFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Bottom Percent\" filter to the column for the given percentage of elements.\n *\n * @param percent - The percentage of elements from the bottom to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyBottomPercentFilter(percent: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "percent",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyBottomPercentFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyCellColorFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Cell Color\" filter to the column for the given color.\n *\n * @param color - The background color of the cells to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyCellColorFilter(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyCellColorFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyCustomFilter:member(1)",
                  "docComment": "/**\n * Apply an \"Icon\" filter to the column for the given criteria strings.\n *\n * @param criteria1 - The first criteria string.\n *\n * @param criteria2 - Optional. The second criteria string.\n *\n * @param oper - Optional. The operator that describes how the two criteria are joined.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyCustomFilter(\n            criteria1: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            oper?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterOperator",
                      "canonicalReference": "excel!Excel.FilterOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria1",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria2",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "oper",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "applyCustomFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyDynamicFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Dynamic\" filter to the column.\n *\n * @param criteria - The dynamic criteria to apply.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyDynamicFilter(criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DynamicFilterCriteria",
                      "canonicalReference": "excel!Excel.DynamicFilterCriteria:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyDynamicFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyFontColorFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Font Color\" filter to the column for the given color.\n *\n * @param color - The font color of the cells to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyFontColorFilter(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyFontColorFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyIconFilter:member(1)",
                  "docComment": "/**\n * Apply an \"Icon\" filter to the column for the given icon.\n *\n * @param icon - The icons of the cells to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyIconFilter(icon: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!Excel.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "icon",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyIconFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyTopItemsFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Top Item\" filter to the column for the given number of elements.\n *\n * @param count - The number of elements from the top to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyTopItemsFilter(count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyTopItemsFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyTopPercentFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Top Percent\" filter to the column for the given percentage of elements.\n *\n * @param percent - The percentage of elements from the top to show.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyTopPercentFilter(percent: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "percent",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "applyTopPercentFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#applyValuesFilter:member(1)",
                  "docComment": "/**\n * Apply a \"Values\" filter to the column for the given values.\n *\n * @param values - The list of values to show. This must be an array of strings or an array of Excel.FilterDateTime objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyValuesFilter(values: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterDatetime",
                      "canonicalReference": "excel!Excel.FilterDatetime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "applyValuesFilter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#clear:member(1)",
                  "docComment": "/**\n * Clear the filter on the given column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Filter#criteria:member",
                  "docComment": "/**\n * The currently applied filter on the given column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterCriteria",
                      "canonicalReference": "excel!Excel.FilterCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criteria",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Filter#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.FilterCriteria:interface",
              "docComment": "/**\n * Represents the filtering criteria applied to a column.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#color:member",
                  "docComment": "/**\n * The HTML color string used to filter cells. Used with \"cellColor\" and \"fontColor\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#criterion1:member",
                  "docComment": "/**\n * The first criterion used to filter data. Used as an operator in the case of \"custom\" filtering. For example \">50\" for number greater than 50 or \"=*s\" for values ending in \"s\".\n *\n * Used as a number in the case of top/bottom items/percents (e.g., \"5\" for the top 5 items if filterOn is set to \"topItems\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criterion1?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criterion1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#criterion2:member",
                  "docComment": "/**\n * The second criterion used to filter data. Only used as an operator in the case of \"custom\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criterion2?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criterion2",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#dynamicCriteria:member",
                  "docComment": "/**\n * The dynamic criteria from the Excel.DynamicFilterCriteria set to apply on this column. Used with \"dynamic\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dynamicCriteria?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DynamicFilterCriteria",
                      "canonicalReference": "excel!Excel.DynamicFilterCriteria:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dynamicCriteria",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#filterOn:member",
                  "docComment": "/**\n * The property used by the filter to determine whether the values should stay visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "filterOn: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterOn",
                      "canonicalReference": "excel!Excel.FilterOn:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filterOn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#icon:member",
                  "docComment": "/**\n * The icon used to filter cells. Used with \"icon\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!Excel.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#operator:member",
                  "docComment": "/**\n * The operator used to combine criterion 1 and 2 when using \"custom\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "operator?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterOperator",
                      "canonicalReference": "excel!Excel.FilterOperator:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "operator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#subField:member",
                  "docComment": "/**\n * The property used by the filter to do rich filter on richvalues.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subField?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subField",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterCriteria#values:member",
                  "docComment": "/**\n * The set of values to be used as part of \"values\" filtering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterDatetime",
                      "canonicalReference": "excel!Excel.FilterDatetime:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.FilterDatetime:interface",
              "docComment": "/**\n * Represents how to filter a date when filtering on values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterDatetime "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterDatetime",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterDatetime#date:member",
                  "docComment": "/**\n * The date in ISO8601 format used to filter data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "date: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "date",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterDatetime#specificity:member",
                  "docComment": "/**\n * How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to \"month\", the filter operation will keep all rows with a date in the month of april 2009.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "specificity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterDatetimeSpecificity",
                      "canonicalReference": "excel!Excel.FilterDatetimeSpecificity:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "specificity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.FilterDatetimeSpecificity:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FilterDatetimeSpecificity "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterDatetimeSpecificity",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterDatetimeSpecificity.day:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "day = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"day\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "day",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterDatetimeSpecificity.hour:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hour = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hour\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hour",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterDatetimeSpecificity.minute:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "minute = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"minute\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "minute",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterDatetimeSpecificity.month:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "month = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"month\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "month",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterDatetimeSpecificity.second:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "second = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"second\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "second",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterDatetimeSpecificity.year:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "year = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"year\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "year",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.FilterOn:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FilterOn "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterOn",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.bottomItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomItems = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomItems\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomItems",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.bottomPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomPercent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomPercent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomPercent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.cellColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellColor = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cellColor\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellColor",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.custom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "custom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"custom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "custom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.dynamic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dynamic = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dynamic\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dynamic",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.fontColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fontColor = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fontColor\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fontColor",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.icon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"icon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.topItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topItems = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topItems\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topItems",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.topPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topPercent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topPercent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topPercent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOn.values:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"values\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.FilterOperator:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum FilterOperator "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterOperator",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOperator.and:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "and = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"and\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "and",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.FilterOperator.or:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "or = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"or\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "or",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.FilterPivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel FilterPivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterPivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterPivotHierarchy",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#enableMultipleFilterItems:member",
                  "docComment": "/**\n * Determines whether to allow multiple filter items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enableMultipleFilterItems: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "enableMultipleFilterItems",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#fields:member",
                  "docComment": "/**\n * Returns the PivotFields associated with the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotFieldCollection",
                      "canonicalReference": "excel!Excel.PivotFieldCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fields",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#id:member",
                  "docComment": "/**\n * Id of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#name:member",
                  "docComment": "/**\n * Name of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#position:member",
                  "docComment": "/**\n * Position of the FilterPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchy#setToDefault:member(1)",
                  "docComment": "/**\n * Reset the FilterPivotHierarchy back to its default values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setToDefault(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setToDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection:interface",
              "docComment": "/**\n * Represents a collection of FilterPivotHierarchy items associated with the PivotTable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FilterPivotHierarchyCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "FilterPivotHierarchyCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection#add:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column, or filter axis, it will be removed from that location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!Excel.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!Excel.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of pivot hierarchies in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a FilterPivotHierarchy by its name or id.\n *\n * @param name - Name of the FilterPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!Excel.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a FilterPivotHierarchy by name. If the FilterPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the FilterPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!Excel.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection#remove:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(filterPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchy",
                      "canonicalReference": "excel!Excel.FilterPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "filterPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "remove"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.FormatProtection:interface",
              "docComment": "/**\n * Represents the format protection of a range object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface FormatProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "FormatProtection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FormatProtection#formulaHidden:member",
                  "docComment": "/**\n * Specifies if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulaHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulaHidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.FormatProtection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.FormatProtection#locked:member",
                  "docComment": "/**\n * Specifies if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "locked: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "locked",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.GeometricShape:interface",
              "docComment": "/**\n * Represents a geometric shape inside a worksheet. A geometric shape can be a rectangle, block arrow, equation symbol, flowchart item, star, banner, callout, or any other basic shape in Excel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface GeometricShape "
                }
              ],
              "releaseTag": "Public",
              "name": "GeometricShape",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.GeometricShape#id:member",
                  "docComment": "/**\n * Returns the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.GeometricShape#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.GeometricShape#shape:member",
                  "docComment": "/**\n * Returns the Shape object for the geometric shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.GeometricShapeType:enum",
              "docComment": "/**\n * Specifies the shape type for a GeometricShape object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum GeometricShapeType "
                }
              ],
              "releaseTag": "Public",
              "name": "GeometricShapeType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.accentBorderCallout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentBorderCallout1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accentBorderCallout1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentBorderCallout1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.accentBorderCallout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentBorderCallout2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accentBorderCallout2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentBorderCallout2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.accentBorderCallout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentBorderCallout3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accentBorderCallout3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentBorderCallout3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.accentCallout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentCallout1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accentCallout1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentCallout1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.accentCallout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentCallout2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accentCallout2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentCallout2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.accentCallout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "accentCallout3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"accentCallout3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "accentCallout3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonBackPrevious:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonBackPrevious = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonBackPrevious\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonBackPrevious",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonBeginning:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonBeginning = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonBeginning\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonBeginning",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonBlank:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonBlank = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonBlank\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonBlank",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonDocument:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonDocument = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonDocument\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonDocument",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonEnd:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonEnd = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonEnd\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonEnd",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonForwardNext:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonForwardNext = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonForwardNext\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonForwardNext",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonHelp:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonHelp = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonHelp\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonHelp",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonHome:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonHome = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonHome\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonHome",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonInformation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonInformation = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonInformation\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonInformation",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonMovie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonMovie = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonMovie\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonMovie",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonReturn:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonReturn = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonReturn\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonReturn",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.actionButtonSound:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "actionButtonSound = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"actionButtonSound\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "actionButtonSound",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.arc:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "arc = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"arc\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "arc",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.bentArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bentArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bentArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bentArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.bentUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bentUpArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bentUpArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bentUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.bevel:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bevel = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bevel\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bevel",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.blockArc:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blockArc = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"blockArc\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blockArc",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.borderCallout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderCallout1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"borderCallout1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderCallout1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.borderCallout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderCallout2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"borderCallout2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderCallout2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.borderCallout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderCallout3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"borderCallout3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borderCallout3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.bracePair:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bracePair = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bracePair\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bracePair",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.bracketPair:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bracketPair = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bracketPair\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bracketPair",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.callout1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"callout1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.callout2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"callout2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.callout3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "callout3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"callout3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "callout3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.can:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "can = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"can\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "can",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.chartPlus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartPlus = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"chartPlus\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartPlus",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.chartStar:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartStar = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"chartStar\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartStar",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.chartX:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartX = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"chartX\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartX",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.chevron:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chevron = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"chevron\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chevron",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.chord:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chord = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"chord\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chord",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.circularArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "circularArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"circularArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "circularArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.cloud:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cloud = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cloud\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cloud",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.cloudCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cloudCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cloudCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cloudCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.corner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "corner = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"corner\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "corner",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.cornerTabs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cornerTabs = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cornerTabs\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cornerTabs",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.cube:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cube = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cube\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cube",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.curvedDownArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedDownArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"curvedDownArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedDownArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.curvedLeftArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedLeftArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"curvedLeftArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedLeftArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.curvedRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedRightArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"curvedRightArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.curvedUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "curvedUpArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"curvedUpArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "curvedUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.decagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "decagon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"decagon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "decagon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.diagonalStripe:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diagonalStripe = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"diagonalStripe\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diagonalStripe",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.diamond:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "diamond = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"diamond\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "diamond",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.dodecagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dodecagon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dodecagon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dodecagon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.donut:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "donut = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"donut\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "donut",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.doubleWave:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doubleWave = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"doubleWave\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doubleWave",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.downArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "downArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"downArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "downArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.downArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "downArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"downArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "downArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.ellipse:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipse = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ellipse\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipse",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.ellipseRibbon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipseRibbon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ellipseRibbon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipseRibbon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.ellipseRibbon2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipseRibbon2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ellipseRibbon2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipseRibbon2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartAlternateProcess:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartAlternateProcess = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartAlternateProcess\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartAlternateProcess",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartCollate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartCollate = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartCollate\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartCollate",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartConnector:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartConnector = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartConnector\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartConnector",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartDecision:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDecision = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartDecision\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDecision",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartDelay:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDelay = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartDelay\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDelay",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartDisplay:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDisplay = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartDisplay\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDisplay",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartDocument:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartDocument = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartDocument\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartDocument",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartExtract:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartExtract = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartExtract\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartExtract",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartInputOutput:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartInputOutput = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartInputOutput\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartInputOutput",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartInternalStorage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartInternalStorage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartInternalStorage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartInternalStorage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartMagneticDisk:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMagneticDisk = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartMagneticDisk\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMagneticDisk",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartMagneticDrum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMagneticDrum = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartMagneticDrum\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMagneticDrum",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartMagneticTape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMagneticTape = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartMagneticTape\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMagneticTape",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartManualInput:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartManualInput = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartManualInput\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartManualInput",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartManualOperation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartManualOperation = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartManualOperation\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartManualOperation",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartMerge:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMerge = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartMerge\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMerge",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartMultidocument:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartMultidocument = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartMultidocument\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartMultidocument",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartOfflineStorage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOfflineStorage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartOfflineStorage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOfflineStorage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartOffpageConnector:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOffpageConnector = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartOffpageConnector\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOffpageConnector",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartOnlineStorage:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOnlineStorage = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartOnlineStorage\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOnlineStorage",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartOr:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartOr = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartOr\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartOr",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartPredefinedProcess:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPredefinedProcess = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartPredefinedProcess\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPredefinedProcess",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartPreparation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPreparation = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartPreparation\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPreparation",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartProcess:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartProcess = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartProcess\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartProcess",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartPunchedCard:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPunchedCard = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartPunchedCard\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPunchedCard",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartPunchedTape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartPunchedTape = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartPunchedTape\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartPunchedTape",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartSort:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartSort = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartSort\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartSort",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartSummingJunction:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartSummingJunction = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartSummingJunction\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartSummingJunction",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.flowChartTerminator:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flowChartTerminator = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"flowChartTerminator\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "flowChartTerminator",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.foldedCorner:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "foldedCorner = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"foldedCorner\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "foldedCorner",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.frame:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "frame = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"frame\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "frame",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.funnel:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "funnel = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"funnel\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "funnel",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.gear6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gear6 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gear6\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gear6",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.gear9:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gear9 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gear9\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gear9",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.halfFrame:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "halfFrame = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"halfFrame\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "halfFrame",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.heart:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heart = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heart\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heart",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.heptagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heptagon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heptagon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heptagon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.hexagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hexagon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hexagon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hexagon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.homePlate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "homePlate = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"homePlate\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "homePlate",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.horizontalScroll:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalScroll = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"horizontalScroll\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalScroll",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.irregularSeal1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "irregularSeal1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"irregularSeal1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "irregularSeal1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.irregularSeal2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "irregularSeal2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"irregularSeal2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "irregularSeal2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftBrace:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftBrace = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftBrace\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftBrace",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftBracket:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftBracket = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftBracket\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftBracket",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftCircularArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftCircularArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftCircularArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftCircularArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftRightArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftRightArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftRightArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftRightCircularArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightCircularArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftRightCircularArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightCircularArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftRightRibbon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightRibbon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftRightRibbon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightRibbon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftRightUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftRightUpArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftRightUpArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftRightUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.leftUpArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftUpArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftUpArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftUpArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.lightningBolt:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lightningBolt = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lightningBolt\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lightningBolt",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.lineInverse:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lineInverse = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"lineInverse\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineInverse",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.mathDivide:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathDivide = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mathDivide\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathDivide",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.mathEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathEqual = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mathEqual\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathEqual",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.mathMinus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathMinus = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mathMinus\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathMinus",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.mathMultiply:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathMultiply = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mathMultiply\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathMultiply",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.mathNotEqual:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathNotEqual = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mathNotEqual\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathNotEqual",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.mathPlus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mathPlus = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mathPlus\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mathPlus",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.moon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "moon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"moon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "moon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.nonIsoscelesTrapezoid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nonIsoscelesTrapezoid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"nonIsoscelesTrapezoid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "nonIsoscelesTrapezoid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.noSmoking:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noSmoking = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"noSmoking\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "noSmoking",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.notchedRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notchedRightArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notchedRightArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notchedRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.octagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "octagon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"octagon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "octagon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.parallelogram:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "parallelogram = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"parallelogram\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "parallelogram",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.pentagon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pentagon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pentagon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pentagon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.pie:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pie = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pie\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pie",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.pieWedge:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pieWedge = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pieWedge\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pieWedge",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.plaque:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plaque = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"plaque\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plaque",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.plaqueTabs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plaqueTabs = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"plaqueTabs\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plaqueTabs",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.plus:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "plus = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"plus\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "plus",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.quadArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quadArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"quadArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quadArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.quadArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quadArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"quadArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quadArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.rectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.ribbon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ribbon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ribbon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ribbon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.ribbon2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ribbon2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ribbon2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ribbon2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.rightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.rightArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.rightBrace:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightBrace = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightBrace\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightBrace",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.rightBracket:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightBracket = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightBracket\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightBracket",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.rightTriangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightTriangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightTriangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightTriangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.round1Rectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "round1Rectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"round1Rectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "round1Rectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.round2DiagonalRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "round2DiagonalRectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"round2DiagonalRectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "round2DiagonalRectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.round2SameRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "round2SameRectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"round2SameRectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "round2SameRectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.roundRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundRectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"roundRectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundRectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.smileyFace:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "smileyFace = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"smileyFace\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "smileyFace",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.snip1Rectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snip1Rectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"snip1Rectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snip1Rectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.snip2DiagonalRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snip2DiagonalRectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"snip2DiagonalRectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snip2DiagonalRectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.snip2SameRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snip2SameRectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"snip2SameRectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snip2SameRectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.snipRoundRectangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "snipRoundRectangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"snipRoundRectangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "snipRoundRectangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.squareTabs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "squareTabs = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"squareTabs\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "squareTabs",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star10:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star10 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star10\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star10",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star12:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star12 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star12\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star12",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star16:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star16 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star16\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star16",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star24:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star24 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star24\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star24",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star32:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star32 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star32\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star32",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star6 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star6\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star6",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star7:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star7 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star7\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star7",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.star8:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "star8 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"star8\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "star8",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.stripedRightArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stripedRightArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"stripedRightArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "stripedRightArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.sun:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sun = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sun\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sun",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.swooshArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "swooshArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"swooshArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "swooshArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.teardrop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "teardrop = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"teardrop\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "teardrop",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.trapezoid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "trapezoid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"trapezoid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "trapezoid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.triangle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "triangle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"triangle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "triangle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.upArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"upArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.upArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"upArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.upDownArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upDownArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"upDownArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upDownArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.upDownArrowCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "upDownArrowCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"upDownArrowCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "upDownArrowCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.uturnArrow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "uturnArrow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"uturnArrow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "uturnArrow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.verticalScroll:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalScroll = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"verticalScroll\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalScroll",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.wave:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wave = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wave\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wave",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.wedgeEllipseCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wedgeEllipseCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wedgeEllipseCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wedgeEllipseCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.wedgeRectCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wedgeRectCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wedgeRectCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wedgeRectCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GeometricShapeType.wedgeRRectCallout:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wedgeRRectCallout = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wedgeRRectCallout\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wedgeRRectCallout",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.GroupOption:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum GroupOption "
                }
              ],
              "releaseTag": "Public",
              "name": "GroupOption",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GroupOption.byColumns:member",
                  "docComment": "/**\n * Group by columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "byColumns = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"byColumns\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "byColumns",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.GroupOption.byRows:member",
                  "docComment": "/**\n * Group by rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "byRows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"byRows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "byRows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.GroupShapeCollection:interface",
              "docComment": "/**\n * Represents the shape collection inside a shape group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface GroupShapeCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "GroupShapeCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.GroupShapeCollection#_GetItem:member(1)",
                  "docComment": "/**\n * Returns a shape identified by the shape id.\n *\n * @param shapeId - The identifier for the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_GetItem(shapeId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shapeId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "_GetItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.GroupShapeCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of shapes in the shape group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.GroupShapeCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a shape using its Name or ID.\n *\n * @param key - The Name or ID of the shape to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.GroupShapeCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a shape based on its position in the collection.\n *\n * @param index - The zero-based index value of the object to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.GroupShapeCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.HeaderFooter:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface HeaderFooter "
                }
              ],
              "releaseTag": "Public",
              "name": "HeaderFooter",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#centerFooter:member",
                  "docComment": "/**\n * The center footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centerFooter: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centerFooter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#centerHeader:member",
                  "docComment": "/**\n * The center header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centerHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centerHeader",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#leftFooter:member",
                  "docComment": "/**\n * The left footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftFooter: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftFooter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#leftHeader:member",
                  "docComment": "/**\n * The left header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftHeader",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#rightFooter:member",
                  "docComment": "/**\n * The right footer of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightFooter: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightFooter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooter#rightHeader:member",
                  "docComment": "/**\n * The right header of the worksheet. To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightHeader",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.HeaderFooterGroup:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface HeaderFooterGroup "
                }
              ],
              "releaseTag": "Public",
              "name": "HeaderFooterGroup",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#defaultForAllPages:member",
                  "docComment": "/**\n * The general header/footer, used for all pages unless even/odd or first page is specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly defaultForAllPages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!Excel.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "defaultForAllPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#evenPages:member",
                  "docComment": "/**\n * The header/footer to use for even pages, odd header/footer needs to be specified for odd pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly evenPages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!Excel.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "evenPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#firstPage:member",
                  "docComment": "/**\n * The first page header/footer, for all other pages general or even/odd is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly firstPage: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!Excel.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstPage",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#oddPages:member",
                  "docComment": "/**\n * The header/footer to use for odd pages, even header/footer needs to be specified for even pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly oddPages: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooter",
                      "canonicalReference": "excel!Excel.HeaderFooter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oddPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#state:member",
                  "docComment": "/**\n * The state by which headers/footers are set. See Excel.HeaderFooterState for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "state: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooterState",
                      "canonicalReference": "excel!Excel.HeaderFooterState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "state",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#useSheetMargins:member",
                  "docComment": "/**\n * Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "useSheetMargins: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "useSheetMargins",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.HeaderFooterGroup#useSheetScale:member",
                  "docComment": "/**\n * Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page layout options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "useSheetScale: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "useSheetScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.HeaderFooterState:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum HeaderFooterState "
                }
              ],
              "releaseTag": "Public",
              "name": "HeaderFooterState",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HeaderFooterState.default:member",
                  "docComment": "/**\n * Only one general header/footer is used for all pages printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"default\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "default",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HeaderFooterState.firstAndDefault:member",
                  "docComment": "/**\n * There is a separate first page header/footer, and a general header/footer used for all other pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstAndDefault = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"firstAndDefault\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstAndDefault",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HeaderFooterState.firstOddAndEven:member",
                  "docComment": "/**\n * There is a separate first page header/footer, then there is a separate header/footer for odd and even pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstOddAndEven = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"firstOddAndEven\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstOddAndEven",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HeaderFooterState.oddAndEven:member",
                  "docComment": "/**\n * There is a different header/footer for odd and even pages.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oddAndEven = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"oddAndEven\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oddAndEven",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.HorizontalAlignment:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum HorizontalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "HorizontalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.centerAcrossSelection:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centerAcrossSelection = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"centerAcrossSelection\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centerAcrossSelection",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"distributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.fill:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fill = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fill\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.general:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "general = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"general\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "general",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justify\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.HorizontalAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Icon:interface",
              "docComment": "/**\n * Represents a cell icon.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Icon "
                }
              ],
              "releaseTag": "Public",
              "name": "Icon",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Icon#index:member",
                  "docComment": "/**\n * Specifies the index of the icon in the given set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Icon#set:member",
                  "docComment": "/**\n * Specifies the set that the icon is part of.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "set: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSet",
                      "canonicalReference": "excel!Excel.IconSet:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "set",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.IconSet:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum IconSet "
                }
              ],
              "releaseTag": "Public",
              "name": "IconSet",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fiveArrows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveArrows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fiveArrows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveArrows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fiveArrowsGray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveArrowsGray = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fiveArrowsGray\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveArrowsGray",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fiveBoxes:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveBoxes = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fiveBoxes\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveBoxes",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fiveQuarters:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveQuarters = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fiveQuarters\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveQuarters",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fiveRating:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fiveRating = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fiveRating\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fiveRating",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fourArrows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourArrows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fourArrows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourArrows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fourArrowsGray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourArrowsGray = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fourArrowsGray\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourArrowsGray",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fourRating:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourRating = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fourRating\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourRating",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fourRedToBlack:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourRedToBlack = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fourRedToBlack\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourRedToBlack",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.fourTrafficLights:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fourTrafficLights = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fourTrafficLights\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fourTrafficLights",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeArrows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeArrows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeArrows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeArrows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeArrowsGray:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeArrowsGray = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeArrowsGray\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeArrowsGray",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeFlags:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeFlags = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeFlags\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeFlags",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeSigns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeSigns = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeSigns\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeSigns",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeStars:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeStars = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeStars\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeStars",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeSymbols:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeSymbols = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeSymbols\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeSymbols",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeSymbols2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeSymbols2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeSymbols2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeSymbols2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeTrafficLights1:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeTrafficLights1 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeTrafficLights1\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeTrafficLights1",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeTrafficLights2:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeTrafficLights2 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeTrafficLights2\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeTrafficLights2",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.IconSet.threeTriangles:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "threeTriangles = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"threeTriangles\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "threeTriangles",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.IconSetConditionalFormat:interface",
              "docComment": "/**\n * Represents an IconSet criteria for conditional formatting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface IconSetConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "IconSetConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IconSetConditionalFormat#criteria:member",
                  "docComment": "/**\n * An array of Criteria and IconSets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalIconCriterion",
                      "canonicalReference": "excel!Excel.ConditionalIconCriterion:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "criteria",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.IconSetConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IconSetConditionalFormat#reverseIconOrder:member",
                  "docComment": "/**\n * If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reverseIconOrder: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "reverseIconOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IconSetConditionalFormat#showIconOnly:member",
                  "docComment": "/**\n * If true, hides the values and only shows icons.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showIconOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showIconOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IconSetConditionalFormat#style:member",
                  "docComment": "/**\n * If set, displays the IconSet option for the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "IconSet",
                      "canonicalReference": "excel!Excel.IconSet:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Image:interface",
              "docComment": "/**\n * Represents an image in the worksheet. To get the corresponding Shape object, use Image.shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Image "
                }
              ],
              "releaseTag": "Public",
              "name": "Image",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Image#format:member",
                  "docComment": "/**\n * Returns the format of the image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PictureFormat",
                      "canonicalReference": "excel!Excel.PictureFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Image#id:member",
                  "docComment": "/**\n * Specifies the shape identifier for the image object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Image#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Image#shape:member",
                  "docComment": "/**\n * Returns the Shape object associated with the image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ImageFittingMode:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ImageFittingMode "
                }
              ],
              "releaseTag": "Public",
              "name": "ImageFittingMode",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ImageFittingMode.fill:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fill = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fill\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ImageFittingMode.fit:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fit = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fit\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fit",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ImageFittingMode.fitAndCenter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fitAndCenter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fitAndCenter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fitAndCenter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.InsertShiftDirection:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum InsertShiftDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "InsertShiftDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.InsertShiftDirection.down:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "down = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"down\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "down",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.InsertShiftDirection.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.IterativeCalculation:interface",
              "docComment": "/**\n * Represents the Iterative Calculation settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface IterativeCalculation "
                }
              ],
              "releaseTag": "Public",
              "name": "IterativeCalculation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IterativeCalculation#enabled:member",
                  "docComment": "/**\n * True if Excel will use iteration to resolve circular references.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "enabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.IterativeCalculation#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IterativeCalculation#maxChange:member",
                  "docComment": "/**\n * Specifies the maximum amount of change between each iteration as Excel resolves circular references.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maxChange: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maxChange",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.IterativeCalculation#maxIteration:member",
                  "docComment": "/**\n * Specifies the maximum number of iterations that Excel can use to resolve a circular reference.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "maxIteration: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "maxIteration",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Line:interface",
              "docComment": "/**\n * Represents a line inside a worksheet. To get the corresponding Shape object, use `Line.shape`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Line "
                }
              ],
              "releaseTag": "Public",
              "name": "Line",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#beginArrowheadLength:member",
                  "docComment": "/**\n * Represents the length of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginArrowheadLength: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadLength",
                      "canonicalReference": "excel!Excel.ArrowheadLength:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginArrowheadLength",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#beginArrowheadStyle:member",
                  "docComment": "/**\n * Represents the style of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginArrowheadStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadStyle",
                      "canonicalReference": "excel!Excel.ArrowheadStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginArrowheadStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#beginArrowheadWidth:member",
                  "docComment": "/**\n * Represents the width of the arrowhead at the beginning of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginArrowheadWidth: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadWidth",
                      "canonicalReference": "excel!Excel.ArrowheadWidth:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginArrowheadWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#beginConnectedShape:member",
                  "docComment": "/**\n * Represents the shape to which the beginning of the specified line is attached.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly beginConnectedShape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginConnectedShape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#beginConnectedSite:member",
                  "docComment": "/**\n * Represents the connection site to which the beginning of a connector is connected. Returns null when the beginning of the line is not attached to any shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly beginConnectedSite: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginConnectedSite",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Line#connectBeginShape:member(1)",
                  "docComment": "/**\n * Attaches the beginning of the specified connector to a specified shape.\n *\n * @param shape - The shape to connect.\n *\n * @param connectionSite - The connection site on the shape to which the beginning of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "connectBeginShape(shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", connectionSite: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shape",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "connectionSite",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "connectBeginShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Line#connectEndShape:member(1)",
                  "docComment": "/**\n * Attaches the end of the specified connector to a specified shape.\n *\n * @param shape - The shape to connect.\n *\n * @param connectionSite - The connection site on the shape to which the end of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "connectEndShape(shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", connectionSite: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shape",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "connectionSite",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "connectEndShape"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#connectorType:member",
                  "docComment": "/**\n * Represents the connector type for the line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "connectorType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConnectorType",
                      "canonicalReference": "excel!Excel.ConnectorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "connectorType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Line#disconnectBeginShape:member(1)",
                  "docComment": "/**\n * Detaches the beginning of the specified connector from a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disconnectBeginShape(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "disconnectBeginShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Line#disconnectEndShape:member(1)",
                  "docComment": "/**\n * Detaches the end of the specified connector from a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disconnectEndShape(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "disconnectEndShape"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#endArrowheadLength:member",
                  "docComment": "/**\n * Represents the length of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endArrowheadLength: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadLength",
                      "canonicalReference": "excel!Excel.ArrowheadLength:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endArrowheadLength",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#endArrowheadStyle:member",
                  "docComment": "/**\n * Represents the style of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endArrowheadStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadStyle",
                      "canonicalReference": "excel!Excel.ArrowheadStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endArrowheadStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#endArrowheadWidth:member",
                  "docComment": "/**\n * Represents the width of the arrowhead at the end of the specified line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endArrowheadWidth: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ArrowheadWidth",
                      "canonicalReference": "excel!Excel.ArrowheadWidth:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endArrowheadWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#endConnectedShape:member",
                  "docComment": "/**\n * Represents the shape to which the end of the specified line is attached.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly endConnectedShape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endConnectedShape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#endConnectedSite:member",
                  "docComment": "/**\n * Represents the connection site to which the end of a connector is connected. Returns null when the end of the line is not attached to any shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly endConnectedSite: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endConnectedSite",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#id:member",
                  "docComment": "/**\n * Specifies the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#isBeginConnected:member",
                  "docComment": "/**\n * Specifies if the beginning of the specified line is connected to a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isBeginConnected: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isBeginConnected",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#isEndConnected:member",
                  "docComment": "/**\n * Specifies if the end of the specified line is connected to a shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isEndConnected: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isEndConnected",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Line#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Line#shape:member",
                  "docComment": "/**\n * Returns the Shape object associated with the line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.LinkedDataTypeState:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum LinkedDataTypeState "
                }
              ],
              "releaseTag": "Public",
              "name": "LinkedDataTypeState",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.LinkedDataTypeState.brokenLinkedData:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "brokenLinkedData = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"brokenLinkedData\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "brokenLinkedData",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.LinkedDataTypeState.disambiguationNeeded:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disambiguationNeeded = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"disambiguationNeeded\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "disambiguationNeeded",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.LinkedDataTypeState.fetchingData:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fetchingData = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fetchingData\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fetchingData",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.LinkedDataTypeState.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.LinkedDataTypeState.validLinkedData:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "validLinkedData = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"validLinkedData\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "validLinkedData",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ListDataValidation:interface",
              "docComment": "/**\n * Represents the List data validation criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ListDataValidation "
                }
              ],
              "releaseTag": "Public",
              "name": "ListDataValidation",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ListDataValidation#inCellDropDown:member",
                  "docComment": "/**\n * Displays the list in cell drop down or not, it defaults to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inCellDropDown: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inCellDropDown",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ListDataValidation#source:member",
                  "docComment": "/**\n * Source of the list for data validation When setting the value, it can be passed in as a Excel Range object, or a string that contains comma separated number, boolean or date.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "source: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "source",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.NamedItem:interface",
              "docComment": "/**\n * Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type below), range object, or a reference to a range. This object can be used to obtain range object associated with names.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NamedItem "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItem",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#arrayValues:member",
                  "docComment": "/**\n * Returns an object containing values and types of the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly arrayValues: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemArrayValues",
                      "canonicalReference": "excel!Excel.NamedItemArrayValues:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "arrayValues",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#comment:member",
                  "docComment": "/**\n * Specifies the comment associated with this name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "comment: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "comment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItem#delete:member(1)",
                  "docComment": "/**\n * Deletes the given name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#formula:member",
                  "docComment": "/**\n * The formula of the named item. Formula always starts with a '=' sign.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formula",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItem#getRange:member(1)",
                  "docComment": "/**\n * Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItem#getRangeOrNullObject:member(1)",
                  "docComment": "/**\n * Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRangeOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItem#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#name:member",
                  "docComment": "/**\n * The name of the object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#scope:member",
                  "docComment": "/**\n * Specifies if the name is scoped to the workbook or to a specific worksheet. Possible values are: Worksheet, Workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly scope: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemScope",
                      "canonicalReference": "excel!Excel.NamedItemScope:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scope",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#type:member",
                  "docComment": "/**\n * Specifies the type of the value returned by the name's formula. See Excel.NamedItemType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemType",
                      "canonicalReference": "excel!Excel.NamedItemType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#value:member",
                  "docComment": "/**\n * Represents the value computed by the name's formula. For a named range, will return the range address.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#visible:member",
                  "docComment": "/**\n * Specifies if the object is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#worksheet:member",
                  "docComment": "/**\n * Returns the worksheet on which the named item is scoped to. Throws an error if the item is scoped to the workbook instead.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItem#worksheetOrNullObject:member",
                  "docComment": "/**\n * Returns the worksheet on which the named item is scoped to. Returns a null object if the item is scoped to the workbook instead.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheetOrNullObject: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheetOrNullObject",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.NamedItemArrayValues:interface",
              "docComment": "/**\n * Represents an object containing values and types of a named item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NamedItemArrayValues "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemArrayValues",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemArrayValues#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItemArrayValues#types:member",
                  "docComment": "/**\n * Represents the types for each item in the named item array\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly types: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!Excel.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "types",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NamedItemArrayValues#values:member",
                  "docComment": "/**\n * Represents the values of each item in the named item array.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly values: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.NamedItemCollection:interface",
              "docComment": "/**\n * A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NamedItemCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new name to the collection of the given scope.\n *\n * @param name - The name of the named item.\n *\n * @param reference - The formula or the range that the name will refer to.\n *\n * @param comment - Optional. The comment associated with the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            reference: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            comment?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!Excel.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "reference",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemCollection#addFormulaLocal:member(1)",
                  "docComment": "/**\n * Adds a new name to the collection of the given scope using the user's locale for the formula.\n *\n * @param name - The \"name\" of the named item.\n *\n * @param formula - The formula in the user's locale that the name will refer to.\n *\n * @param comment - Optional. The comment associated with the named item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addFormulaLocal(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            formula: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            comment?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!Excel.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "formula",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "comment",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "addFormulaLocal"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of named items in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a NamedItem object using its name.\n *\n * @param name - Nameditem name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!Excel.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a NamedItem object using its name. If the nameditem object does not exist, will return a null object.\n *\n * @param name - Nameditem name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItem",
                      "canonicalReference": "excel!Excel.NamedItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NamedItemCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.NamedItemScope:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum NamedItemScope "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemScope",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemScope.workbook:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "workbook = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"workbook\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "workbook",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemScope.worksheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "worksheet = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"worksheet\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.NamedItemType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum NamedItemType "
                }
              ],
              "releaseTag": "Public",
              "name": "NamedItemType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.array:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "array = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"array\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "array",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.boolean:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boolean = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"boolean\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boolean",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"double\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.error:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "error = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"error\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "error",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.integer:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "integer = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"integer\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "integer",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.range:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "range = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"range\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "range",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.NamedItemType.string:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "string = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"string\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "string",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.NumberFormatInfo:interface",
              "docComment": "/**\n * Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface NumberFormatInfo "
                }
              ],
              "releaseTag": "Public",
              "name": "NumberFormatInfo",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.NumberFormatInfo#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NumberFormatInfo#numberDecimalSeparator:member",
                  "docComment": "/**\n * Gets the string used as the decimal separator for numeric values. This is based on current system settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly numberDecimalSeparator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberDecimalSeparator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.NumberFormatInfo#numberGroupSeparator:member",
                  "docComment": "/**\n * Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on current system settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly numberGroupSeparator: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberGroupSeparator",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PageBreak:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageBreak "
                }
              ],
              "releaseTag": "Public",
              "name": "PageBreak",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageBreak#columnIndex:member",
                  "docComment": "/**\n * Specifies the column index for the page break\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly columnIndex: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnIndex",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreak#delete:member(1)",
                  "docComment": "/**\n * Deletes a page break object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreak#getCellAfterBreak:member(1)",
                  "docComment": "/**\n * Gets the first cell after the page break.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCellAfterBreak(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCellAfterBreak"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreak#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PageBreakCollection:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageBreakCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PageBreakCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreakCollection#add:member(1)",
                  "docComment": "/**\n * Adds a page break before the top-left cell of the range specified.\n *\n * @param pageBreakRange - The range immediately after the page break to be added.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(pageBreakRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreak",
                      "canonicalReference": "excel!Excel.PageBreak:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pageBreakRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreakCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of page breaks in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreakCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a page break object via the index.\n *\n * @param index - Index of the page break.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreak",
                      "canonicalReference": "excel!Excel.PageBreak:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreakCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageBreakCollection#removePageBreaks:member(1)",
                  "docComment": "/**\n * Resets all manual page breaks in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removePageBreaks(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "removePageBreaks"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PageLayout:interface",
              "docComment": "/**\n * Represents layout and print settings that are not dependent any printer-specific implementation. These settings include margins, orientation, page numbering, title rows, and print area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageLayout "
                }
              ],
              "releaseTag": "Public",
              "name": "PageLayout",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#blackAndWhite:member",
                  "docComment": "/**\n * The worksheet's black and white print option.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blackAndWhite: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blackAndWhite",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#bottomMargin:member",
                  "docComment": "/**\n * The worksheet's bottom page margin to use for printing in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#centerHorizontally:member",
                  "docComment": "/**\n * The worksheet's center horizontally flag. This flag determines whether the worksheet will be centered horizontally when it's printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centerHorizontally: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centerHorizontally",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#centerVertically:member",
                  "docComment": "/**\n * The worksheet's center vertically flag. This flag determines whether the worksheet will be centered vertically when it's printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centerVertically: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centerVertically",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#draftMode:member",
                  "docComment": "/**\n * The worksheet's draft mode option. If true the sheet will be printed without graphics.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "draftMode: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "draftMode",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#firstPageNumber:member",
                  "docComment": "/**\n * The worksheet's first page number to print. Null value represents \"auto\" page numbering.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "firstPageNumber: "
                    },
                    {
                      "kind": "Content",
                      "text": "number | \"\""
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "firstPageNumber",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#footerMargin:member",
                  "docComment": "/**\n * The worksheet's footer margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "footerMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "footerMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#getPrintArea:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet. If there is no print area, an ItemNotFound error will be thrown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintArea(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintArea"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet. If there is no print area, a null object will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintAreaOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintAreaOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#getPrintTitleColumns:member(1)",
                  "docComment": "/**\n * Gets the range object representing the title columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintTitleColumns(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintTitleColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the range object representing the title columns. If not set, this will return a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintTitleColumnsOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintTitleColumnsOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#getPrintTitleRows:member(1)",
                  "docComment": "/**\n * Gets the range object representing the title rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintTitleRows(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintTitleRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the range object representing the title rows. If not set, this will return a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrintTitleRowsOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getPrintTitleRowsOrNullObject"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#headerMargin:member",
                  "docComment": "/**\n * The worksheet's header margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "headerMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "headerMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#headersFooters:member",
                  "docComment": "/**\n * Header and footer configuration for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly headersFooters: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HeaderFooterGroup",
                      "canonicalReference": "excel!Excel.HeaderFooterGroup:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "headersFooters",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#leftMargin:member",
                  "docComment": "/**\n * The worksheet's left margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#orientation:member",
                  "docComment": "/**\n * The worksheet's orientation of the page.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "orientation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageOrientation",
                      "canonicalReference": "excel!Excel.PageOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "orientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#paperSize:member",
                  "docComment": "/**\n * The worksheet's paper size of the page.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "paperSize: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PaperType",
                      "canonicalReference": "excel!Excel.PaperType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "paperSize",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#printComments:member",
                  "docComment": "/**\n * Specifies if the worksheet's comments should be displayed when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "printComments: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintComments",
                      "canonicalReference": "excel!Excel.PrintComments:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "printComments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#printErrors:member",
                  "docComment": "/**\n * The worksheet's print errors option.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "printErrors: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintErrorType",
                      "canonicalReference": "excel!Excel.PrintErrorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "printErrors",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#printGridlines:member",
                  "docComment": "/**\n * Specifies if the worksheet's gridlines will be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "printGridlines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "printGridlines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#printHeadings:member",
                  "docComment": "/**\n * Specifies if the worksheet's headings will be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "printHeadings: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "printHeadings",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#printOrder:member",
                  "docComment": "/**\n * The worksheet's page print order option. This specifies the order to use for processing the page number printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "printOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintOrder",
                      "canonicalReference": "excel!Excel.PrintOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "printOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#rightMargin:member",
                  "docComment": "/**\n * The worksheet's right margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#setPrintArea:member(1)",
                  "docComment": "/**\n * Sets the worksheet's print area.\n *\n * @param printArea - The range, or RangeAreas of the content to print.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintArea(printArea: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printArea",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "setPrintArea"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#setPrintMargins:member(1)",
                  "docComment": "/**\n * Sets the worksheet's page margins with units.\n *\n * @param unit - Measurement unit for the margins provided.\n *\n * @param marginOptions - Margin values to set, margins not provided will remain unchanged.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintMargins(\n            unit: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PrintMarginUnit",
                      "canonicalReference": "excel!Excel.PrintMarginUnit:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            marginOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayoutMarginOptions",
                      "canonicalReference": "excel!Excel.PageLayoutMarginOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "unit",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "marginOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "setPrintMargins"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#setPrintTitleColumns:member(1)",
                  "docComment": "/**\n * Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.\n *\n * @param printTitleColumns - The columns to be repeated to the left of each page, range must span the entire column to be valid.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintTitleColumns(printTitleColumns: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printTitleColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setPrintTitleColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PageLayout#setPrintTitleRows:member(1)",
                  "docComment": "/**\n * Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.\n *\n * @param printTitleRows - The rows to be repeated at the top of each page, range must span the entire row to be valid.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPrintTitleRows(printTitleRows: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "printTitleRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setPrintTitleRows"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#topMargin:member",
                  "docComment": "/**\n * The worksheet's top margin, in points, for use when printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayout#zoom:member",
                  "docComment": "/**\n * The worksheet's print zoom options. The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "zoom: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayoutZoomOptions",
                      "canonicalReference": "excel!Excel.PageLayoutZoomOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "zoom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PageLayoutMarginOptions:interface",
              "docComment": "/**\n * Represents the options in page layout margins.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageLayoutMarginOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "PageLayoutMarginOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutMarginOptions#bottom:member",
                  "docComment": "/**\n * Specifies the page layout bottom margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutMarginOptions#footer:member",
                  "docComment": "/**\n * Specifies the page layout footer margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "footer?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "footer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutMarginOptions#header:member",
                  "docComment": "/**\n * Specifies the page layout header margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "header?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "header",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutMarginOptions#left:member",
                  "docComment": "/**\n * Specifies the page layout left margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutMarginOptions#right:member",
                  "docComment": "/**\n * Specifies the page layout right margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutMarginOptions#top:member",
                  "docComment": "/**\n * Specifies the page layout top margin in the unit specified to use for printing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PageLayoutZoomOptions:interface",
              "docComment": "/**\n * Represents page zoom properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PageLayoutZoomOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "PageLayoutZoomOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutZoomOptions#horizontalFitToPages:member",
                  "docComment": "/**\n * Number of pages to fit horizontally. This value can be null if percentage scale is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalFitToPages?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalFitToPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutZoomOptions#scale:member",
                  "docComment": "/**\n * Print page scale value can be between 10 and 400. This value can be null if fit to page tall or wide is specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scale?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PageLayoutZoomOptions#verticalFitToPages:member",
                  "docComment": "/**\n * Number of pages to fit vertically. This value can be null if percentage scale is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalFitToPages?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalFitToPages",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PageOrientation:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PageOrientation "
                }
              ],
              "releaseTag": "Public",
              "name": "PageOrientation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PageOrientation.landscape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "landscape = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"landscape\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "landscape",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PageOrientation.portrait:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "portrait = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"portrait\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "portrait",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PaperType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PaperType "
                }
              ],
              "releaseTag": "Public",
              "name": "PaperType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.a3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"a3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.a4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"a4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.a4Small:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a4Small = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"a4Small\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a4Small",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.a5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "a5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"a5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "a5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.b4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "b4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"b4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "b4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.b5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "b5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"b5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "b5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.csheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "csheet = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"csheet\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "csheet",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.dsheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dsheet = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dsheet\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dsheet",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelope10:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope10 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelope10\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope10",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelope11:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope11 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelope11\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope11",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelope12:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope12 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelope12\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope12",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelope14:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope14 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelope14\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope14",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelope9:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelope9 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelope9\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelope9",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeB4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeB4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeB4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeB4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeB5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeB5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeB5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeB5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeB6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeB6 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeB6\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeB6",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeC3:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC3 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeC3\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC3",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeC4:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC4 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeC4\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC4",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeC5:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC5 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeC5\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC5",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeC6:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC6 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeC6\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC6",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeC65:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeC65 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeC65\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeC65",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeDL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeDL = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeDL\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeDL",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeItaly:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeItaly = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeItaly\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeItaly",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopeMonarch:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopeMonarch = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopeMonarch\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopeMonarch",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.envelopePersonal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "envelopePersonal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"envelopePersonal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "envelopePersonal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.esheet:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "esheet = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"esheet\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "esheet",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.executive:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "executive = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"executive\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "executive",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.fanfoldLegalGerman:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fanfoldLegalGerman = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fanfoldLegalGerman\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fanfoldLegalGerman",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.fanfoldStdGerman:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fanfoldStdGerman = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fanfoldStdGerman\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fanfoldStdGerman",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.fanfoldUS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fanfoldUS = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fanfoldUS\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fanfoldUS",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.folio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "folio = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"folio\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "folio",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.ledger:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ledger = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ledger\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ledger",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.legal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "legal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"legal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "legal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.letter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "letter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"letter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "letter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.letterSmall:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "letterSmall = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"letterSmall\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "letterSmall",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.note:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "note = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"note\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "note",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.paper10x14:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "paper10x14 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"paper10x14\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "paper10x14",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.paper11x17:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "paper11x17 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"paper11x17\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "paper11x17",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.quatro:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "quatro = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"quatro\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "quatro",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.statement:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "statement = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"statement\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "statement",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PaperType.tabloid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tabloid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"tabloid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tabloid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PictureFormat:enum",
              "docComment": "/**\n * The format of the image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PictureFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "PictureFormat",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PictureFormat.bmp:member",
                  "docComment": "/**\n * Bitmap image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bmp = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bmp\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bmp",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PictureFormat.gif:member",
                  "docComment": "/**\n * Graphics Interchange Format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gif = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gif\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gif",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PictureFormat.jpeg:member",
                  "docComment": "/**\n * Joint Photographic Experts Group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "jpeg = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"jpeg\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "jpeg",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PictureFormat.png:member",
                  "docComment": "/**\n * Portable Network Graphics.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "png = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"png\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "png",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PictureFormat.svg:member",
                  "docComment": "/**\n * Scalable Vector Graphic.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "svg = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"svg\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "svg",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PictureFormat.unknown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unknown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PivotAxis:enum",
              "docComment": "/**\n * Represents the axis from which to get the PivotItems.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PivotAxis "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotAxis",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotAxis.column:member",
                  "docComment": "/**\n * The column axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "column = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"column\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "column",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotAxis.data:member",
                  "docComment": "/**\n * The data axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "data = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"data\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "data",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotAxis.filter:member",
                  "docComment": "/**\n * The filter axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "filter = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"filter\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filter",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotAxis.row:member",
                  "docComment": "/**\n * The row axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "row = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"row\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "row",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotAxis.unknown:member",
                  "docComment": "/**\n * The axis or region is unknown or unsupported.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unknown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotField:interface",
              "docComment": "/**\n * Represents the Excel PivotField.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotField "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotField",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotField#id:member",
                  "docComment": "/**\n * Id of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotField#items:member",
                  "docComment": "/**\n * Returns the PivotFields associated with the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly items: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItemCollection",
                      "canonicalReference": "excel!Excel.PivotItemCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "items",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotField#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotField#name:member",
                  "docComment": "/**\n * Name of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotField#showAllItems:member",
                  "docComment": "/**\n * Determines whether to show all items of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showAllItems: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showAllItems",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotField#sortByLabels:member(1)",
                  "docComment": "/**\n * Sorts the PivotField. If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.\n *\n * @param sortBy - Specifies if the sorting is done in ascending or descending order.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortByLabels(sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortBy",
                      "canonicalReference": "excel!Excel.SortBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "sortByLabels"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotField#sortByValues:member(1)",
                  "docComment": "/**\n * Sorts the PivotField by specified values in a given scope. The scope defines which specific values will be used to sort when there are multiple values from the same DataPivotHierarchy.\n *\n * @param sortBy - Specifies if the sorting is done in ascending or descending order.\n *\n * @param valuesHierarchy - Specifies the values hierarchy on the data axis to be used for sorting.\n *\n * @param pivotItemScope - The items that should be used for the scope of the sorting. These will be the items that make up the row or column that you want to sort on. If a string is used instead of a PivotItem, the string represents the ID of the PivotItem. If there are no items other than data hierarchy on the axis you want to sort on, this can be empty.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortByValues(\n            sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortBy",
                      "canonicalReference": "excel!Excel.SortBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            valuesHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!Excel.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            pivotItemScope?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!Excel.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string>\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "valuesHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "pivotItemScope",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "sortByValues"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotField#subtotals:member",
                  "docComment": "/**\n * Subtotals of the PivotField.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subtotals: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Subtotals",
                      "canonicalReference": "excel!Excel.Subtotals:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subtotals",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotFieldCollection:interface",
              "docComment": "/**\n * Represents a collection of all the PivotFields that are part of a PivotTable's hierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotFieldCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotFieldCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotFieldCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of pivot fields in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotFieldCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a PivotField by its name or id.\n *\n * @param name - Name of the PivotField to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!Excel.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotFieldCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a PivotField by name. If the PivotField does not exist, will return a null object.\n *\n * @param name - Name of the PivotField to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!Excel.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotFieldCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion:enum",
              "docComment": "/**\n * Represents the criteria for the top/bottom values filter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PivotFilterTopBottomCriterion "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotFilterTopBottomCriterion",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.bottomItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomItems = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomItems\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomItems",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.bottomPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomPercent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomPercent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomPercent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.bottomSum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomSum = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottomSum\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomSum",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.invalid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "invalid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"invalid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "invalid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.topItems:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topItems = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topItems\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topItems",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.topPercent:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topPercent = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topPercent\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topPercent",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotFilterTopBottomCriterion.topSum:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topSum = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"topSum\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topSum",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel PivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotHierarchy",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotHierarchy#fields:member",
                  "docComment": "/**\n * Returns the PivotFields associated with the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotFieldCollection",
                      "canonicalReference": "excel!Excel.PivotFieldCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fields",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotHierarchy#id:member",
                  "docComment": "/**\n * Id of the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotHierarchy#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotHierarchy#name:member",
                  "docComment": "/**\n * Name of the PivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotHierarchyCollection:interface",
              "docComment": "/**\n * Represents a collection of all the PivotHierarchies that are part of the PivotTable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotHierarchyCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotHierarchyCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotHierarchyCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of pivot hierarchies in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotHierarchyCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a PivotHierarchy by its name or id.\n *\n * @param name - Name of the PivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!Excel.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotHierarchyCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a PivotHierarchy by name. If the PivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the PivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!Excel.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotHierarchyCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotItem:interface",
              "docComment": "/**\n * Represents the Excel PivotItem.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotItem "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotItem",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotItem#id:member",
                  "docComment": "/**\n * Id of the PivotItem.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotItem#isExpanded:member",
                  "docComment": "/**\n * Determines whether the item is expanded to show child items or if it's collapsed and child items are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isExpanded: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isExpanded",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotItem#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotItem#name:member",
                  "docComment": "/**\n * Name of the PivotItem.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotItem#visible:member",
                  "docComment": "/**\n * Specifies if the PivotItem is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotItemCollection:interface",
              "docComment": "/**\n * Represents a collection of all the PivotItems related to their parent PivotField.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotItemCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotItemCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotItemCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of PivotItems in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotItemCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a PivotItem by its name or id.\n *\n * @param name - Name of the PivotItem to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!Excel.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotItemCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a PivotItem by name. If the PivotItem does not exist, will return a null object.\n *\n * @param name - Name of the PivotItem to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!Excel.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotItemCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotLayout:interface",
              "docComment": "/**\n * Represents the visual layout of the PivotTable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotLayout "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotLayout",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#autoFormat:member",
                  "docComment": "/**\n * Specifies if formatting will be automatically formatted when it’s refreshed or when fields are moved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#enableFieldList:member",
                  "docComment": "/**\n * Specifies if the field list can be shown in the UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enableFieldList: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "enableFieldList",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getColumnLabelRange:member(1)",
                  "docComment": "/**\n * Returns the range where the PivotTable's column labels reside.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnLabelRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getColumnLabelRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getDataBodyRange:member(1)",
                  "docComment": "/**\n * Returns the range where the PivotTable's data values reside.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataBodyRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataBodyRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getDataHierarchy:member(1)",
                  "docComment": "/**\n * Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.\n *\n * @param cell - A single cell within the PivotTable data body.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataHierarchy(cell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchy",
                      "canonicalReference": "excel!Excel.DataPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cell",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getDataHierarchy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getFilterAxisRange:member(1)",
                  "docComment": "/**\n * Returns the range of the PivotTable's filter area.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFilterAxisRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFilterAxisRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getPivotItems:member(1)",
                  "docComment": "/**\n * Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.\n *\n * @param axis - The axis from which to get the PivotItems. Must be either \"row\" or \"column.\"\n *\n * @param cell - A single cell within the PivotTable's data body.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotItems(axis: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotAxis",
                      "canonicalReference": "excel!Excel.PivotAxis:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ", cell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!Excel.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "axis",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cell",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getPivotItems"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getRange:member(1)",
                  "docComment": "/**\n * Returns the range the PivotTable exists on, excluding the filter area.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#getRowLabelRange:member(1)",
                  "docComment": "/**\n * Returns the range where the PivotTable's row labels reside.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowLabelRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRowLabelRange"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#layoutType:member",
                  "docComment": "/**\n * This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this will be null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "layoutType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotLayoutType",
                      "canonicalReference": "excel!Excel.PivotLayoutType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "layoutType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#preserveFormatting:member",
                  "docComment": "/**\n * Specifies if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "preserveFormatting: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "preserveFormatting",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotLayout#setAutoSortOnCell:member(1)",
                  "docComment": "/**\n * Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context. This behaves identically to applying an autosort from the UI.\n *\n * @param cell - A single cell to use get the criteria from for applying the autosort.\n *\n * @param sortBy - The direction of the sort.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAutoSortOnCell(cell: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortBy",
                      "canonicalReference": "excel!Excel.SortBy:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cell",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "sortBy",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "setAutoSortOnCell"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#showColumnGrandTotals:member",
                  "docComment": "/**\n * Specifies if the PivotTable report shows grand totals for columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showColumnGrandTotals: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showColumnGrandTotals",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#showRowGrandTotals:member",
                  "docComment": "/**\n * Specifies if the PivotTable report shows grand totals for rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showRowGrandTotals: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showRowGrandTotals",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotLayout#subtotalLocation:member",
                  "docComment": "/**\n * This property indicates the SubtotalLocationType of all fields on the PivotTable. If fields have different states, this will be null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subtotalLocation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubtotalLocationType",
                      "canonicalReference": "excel!Excel.SubtotalLocationType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subtotalLocation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PivotLayoutType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PivotLayoutType "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotLayoutType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotLayoutType.compact:member",
                  "docComment": "/**\n * A horizontally compressed form with labels from the next field in the same column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "compact = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"compact\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "compact",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotLayoutType.outline:member",
                  "docComment": "/**\n * Inner fields' items are on same row as outer fields' items and subtotals are always on the bottom.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "outline = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"outline\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "outline",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PivotLayoutType.tabular:member",
                  "docComment": "/**\n * Inner fields' items are always on a new line relative to the outer fields' items.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tabular = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"tabular\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tabular",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotTable:interface",
              "docComment": "/**\n * Represents an Excel PivotTable. To learn more about the PivotTable object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables | Work with PivotTables using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTable "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTable",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#columnHierarchies:member",
                  "docComment": "/**\n * The Column Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly columnHierarchies: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchyCollection",
                      "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnHierarchies",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#dataHierarchies:member",
                  "docComment": "/**\n * The Data Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataHierarchies: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataPivotHierarchyCollection",
                      "canonicalReference": "excel!Excel.DataPivotHierarchyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataHierarchies",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTable#delete:member(1)",
                  "docComment": "/**\n * Deletes the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#enableDataValueEditing:member",
                  "docComment": "/**\n * Specifies if the PivotTable allows values in the data body to be edited by the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enableDataValueEditing: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "enableDataValueEditing",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#filterHierarchies:member",
                  "docComment": "/**\n * The Filter Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly filterHierarchies: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FilterPivotHierarchyCollection",
                      "canonicalReference": "excel!Excel.FilterPivotHierarchyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filterHierarchies",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#hierarchies:member",
                  "docComment": "/**\n * The Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly hierarchies: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchyCollection",
                      "canonicalReference": "excel!Excel.PivotHierarchyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hierarchies",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#id:member",
                  "docComment": "/**\n * Id of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#layout:member",
                  "docComment": "/**\n * The PivotLayout describing the layout and visual structure of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly layout: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotLayout",
                      "canonicalReference": "excel!Excel.PivotLayout:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "layout",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTable#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#name:member",
                  "docComment": "/**\n * Name of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTable#refresh:member(1)",
                  "docComment": "/**\n * Refreshes the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refresh(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refresh"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#rowHierarchies:member",
                  "docComment": "/**\n * The Row Pivot Hierarchies of the PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rowHierarchies: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchyCollection",
                      "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rowHierarchies",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#useCustomSortLists:member",
                  "docComment": "/**\n * Specifies if the PivotTable uses custom lists when sorting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "useCustomSortLists: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "useCustomSortLists",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTable#worksheet:member",
                  "docComment": "/**\n * The worksheet containing the current PivotTable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotTableCollection:interface",
              "docComment": "/**\n * Represents a collection of all the PivotTables that are part of the workbook or worksheet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTableCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTableCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableCollection#add:member(1)",
                  "docComment": "/**\n * Add a PivotTable based on the specified source data and insert it at the top-left cell of the destination range.\n *\n * @param name - The name of the new PivotTable.\n *\n * @param source - The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.\n *\n * @param destination - The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            source: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            destination: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "source",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "destination",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 9
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of pivot tables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a PivotTable by name.\n *\n * @param name - Name of the PivotTable to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.\n *\n * @param name - Name of the PivotTable to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableCollection#refreshAll:member(1)",
                  "docComment": "/**\n * Refreshes all the pivot tables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "refreshAll(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "refreshAll"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotTableScopedCollection:interface",
              "docComment": "/**\n * Represents a scoped collection of PivotTables. The PivotTables are sorted based on the location of the PivotTable's top-left corner. They are ordered top to bottom and then left to right.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTableScopedCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTableScopedCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableScopedCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of PivotTables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableScopedCollection#getFirst:member(1)",
                  "docComment": "/**\n * Gets the first PivotTable in the collection. The PivotTables in the collection are sorted top to bottom and left to right, such that top-left table is the first PivotTable in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirst(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFirst"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableScopedCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a PivotTable by name.\n *\n * @param key - Name of the PivotTable to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.\n *\n * @param name - Name of the PivotTable to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableScopedCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotTableStyle:interface",
              "docComment": "/**\n * Represents a PivotTable Style, which defines style elements by PivotTable region.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTableStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTableStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the PivotTableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this PivotTableStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!Excel.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyle#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTableStyle#name:member",
                  "docComment": "/**\n * Gets the name of the PivotTableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PivotTableStyle#readOnly:member",
                  "docComment": "/**\n * Specifies if this PivotTableStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly readOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PivotTableStyleCollection:interface",
              "docComment": "/**\n * Represents a collection of PivotTable styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PivotTableStyleCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "PivotTableStyleCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#add:member(1)",
                  "docComment": "/**\n * Creates a blank PivotTableStyle with the specified name.\n *\n * @param name - The unique name for the new PivotTableStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!Excel.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of PivotTable styles in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#getDefault:member(1)",
                  "docComment": "/**\n * Gets the default PivotTableStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefault(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!Excel.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefault"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a PivotTableStyle by name.\n *\n * @param name - Name of the PivotTableStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!Excel.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a PivotTableStyle by name. If the PivotTableStyle does not exist, will return a null object.\n *\n * @param name - Name of the PivotTableStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!Excel.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PivotTableStyleCollection#setDefault:member(1)",
                  "docComment": "/**\n * Sets the default PivotTableStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The PivotTableStyle object or name of the PivotTableStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefault(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyle",
                      "canonicalReference": "excel!Excel.PivotTableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.Placement:enum",
              "docComment": "/**\n * Specifies the way that an object is attached to its underlying cells.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum Placement "
                }
              ],
              "releaseTag": "Public",
              "name": "Placement",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.Placement.absolute:member",
                  "docComment": "/**\n * The object is free floating.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "absolute = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"absolute\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "absolute",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.Placement.oneCell:member",
                  "docComment": "/**\n * The object is moved and sized with the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "oneCell = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"oneCell\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "oneCell",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.Placement.twoCell:member",
                  "docComment": "/**\n * The object is moved with the cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "twoCell = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"twoCell\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "twoCell",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.PresetCriteriaConditionalFormat:interface",
              "docComment": "/**\n * Represents the the preset criteria conditional format such as above average, below average, unique values, contains blank, nonblank, error, and noerror.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PresetCriteriaConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "PresetCriteriaConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PresetCriteriaConditionalFormat#format:member",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!Excel.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.PresetCriteriaConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.PresetCriteriaConditionalFormat#rule:member",
                  "docComment": "/**\n * The rule of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalPresetCriteriaRule",
                      "canonicalReference": "excel!Excel.ConditionalPresetCriteriaRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PrintComments:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintComments "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintComments",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintComments.endSheet:member",
                  "docComment": "/**\n * Comments will be printed as end notes at the end of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "endSheet = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"endSheet\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "endSheet",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintComments.inPlace:member",
                  "docComment": "/**\n * Comments will be printed where they were inserted in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inPlace = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"inPlace\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inPlace",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintComments.noComments:member",
                  "docComment": "/**\n * Comments will not be printed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noComments = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"noComments\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "noComments",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PrintErrorType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintErrorType "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintErrorType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintErrorType.asDisplayed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "asDisplayed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"asDisplayed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "asDisplayed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintErrorType.blank:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blank = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"blank\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blank",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintErrorType.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintErrorType.notAvailable:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "notAvailable = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"notAvailable\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "notAvailable",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PrintMarginUnit:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintMarginUnit "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintMarginUnit",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintMarginUnit.centimeters:member",
                  "docComment": "/**\n * Assign the page margins in centimeters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "centimeters = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"centimeters\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "centimeters",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintMarginUnit.inches:member",
                  "docComment": "/**\n * Assign the page margins in inches.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "inches = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"inches\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "inches",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintMarginUnit.points:member",
                  "docComment": "/**\n * Assign the page margins in points. A point is 1/72 of an inch.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "points = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"points\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "points",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.PrintOrder:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PrintOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "PrintOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintOrder.downThenOver:member",
                  "docComment": "/**\n * Process down the rows before processing across pages or page fields to the right.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "downThenOver = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"downThenOver\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "downThenOver",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.PrintOrder.overThenDown:member",
                  "docComment": "/**\n * Process across pages or page fields to the right before moving down the rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overThenDown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"overThenDown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overThenDown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ProtectionSelectionMode:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ProtectionSelectionMode "
                }
              ],
              "releaseTag": "Public",
              "name": "ProtectionSelectionMode",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ProtectionSelectionMode.none:member",
                  "docComment": "/**\n * Selection is not allowed for all cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ProtectionSelectionMode.normal:member",
                  "docComment": "/**\n * Selection is allowed for all cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"normal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "normal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ProtectionSelectionMode.unlocked:member",
                  "docComment": "/**\n * Selection is allowed only for cells that are not locked.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unlocked = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unlocked\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unlocked",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Range:interface",
              "docComment": "/**\n * Range represents a set of one or more contiguous cells such as a cell, a row, a column, block of cells, etc. To learn more about how ranges are used throughout the API, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges | Work with ranges using the Excel JavaScript API} and {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges-advanced | Work with ranges using the Excel JavaScript API (advanced)}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Range "
                }
              ],
              "releaseTag": "Public",
              "name": "Range",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#address:member",
                  "docComment": "/**\n * Specifies the range reference in A1-style. Address value will contain the Sheet reference (e.g., \"Sheet1!A1:B4\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly address: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "address",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#addressLocal:member",
                  "docComment": "/**\n * Specifies the range reference for the specified range in the language of the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly addressLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "addressLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#autoFill:member(1)",
                  "docComment": "/**\n * Fills range from the current range to the destination range using the specified AutoFill logic. The destination range can be null, or can extend the source either horizontally or vertically. Discontiguous ranges are not supported.\n *\n * For more information, read {@link https://support.office.com/article/video-use-autofill-and-flash-fill-2e79a709-c814-4b27-8bc2-c4dc84d49464 | Use AutoFill and Flash Fill}.\n *\n * @param destinationRange - The destination range to autofill. If the destination range is null, data is filled out based on the surrounding cells (which is the behavior when double-clicking the UI’s range fill handle).\n *\n * @param autoFillType - The type of autofill. Specifies how the destination range is to be filled, based on the contents of the current range. Default is \"FillDefault\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoFill(\n            destinationRange?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            autoFillType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AutoFillType",
                      "canonicalReference": "excel!Excel.AutoFillType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destinationRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "autoFillType",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 6
                      }
                    }
                  ],
                  "name": "autoFill"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#calculate:member(1)",
                  "docComment": "/**\n * Calculates a range of cells on a worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "calculate"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#cellCount:member",
                  "docComment": "/**\n * Specifies the number of cells in the range. This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly cellCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#clear:member(1)",
                  "docComment": "/**\n * Clear range values, format, fill, border, etc.\n *\n * @param applyTo - Optional. Determines the type of clear action. See Excel.ClearApplyTo for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(applyTo?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ClearApplyTo",
                      "canonicalReference": "excel!Excel.ClearApplyTo:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "applyTo",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#columnCount:member",
                  "docComment": "/**\n * Specifies the total number of columns in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly columnCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#columnHidden:member",
                  "docComment": "/**\n * Represents if all columns of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnHidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#columnIndex:member",
                  "docComment": "/**\n * Specifies the column number of the first cell in the range. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly columnIndex: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnIndex",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#conditionalFormats:member",
                  "docComment": "/**\n * The collection of ConditionalFormats that intersect the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly conditionalFormats: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatCollection",
                      "canonicalReference": "excel!Excel.ConditionalFormatCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "conditionalFormats",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#convertDataTypeToText:member(1)",
                  "docComment": "/**\n * Converts the range cells with datatypes into text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertDataTypeToText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "convertDataTypeToText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#convertToLinkedDataType:member(1)",
                  "docComment": "/**\n * Converts the range cells into linked datatype in the worksheet.\n *\n * @param serviceID - The Service ID which will be used to query the data.\n *\n * @param languageCulture - Language Culture to query the service for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToLinkedDataType(\n            serviceID: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            languageCulture: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "serviceID",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "languageCulture",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "convertToLinkedDataType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#copyFrom:member(1)",
                  "docComment": "/**\n * Copies cell data or formatting from the source range or RangeAreas to the current range. The destination range can be a different size than the source range or RangeAreas. The destination will be expanded automatically if it is smaller than the source.\n *\n * @param sourceRange - The source range or RangeAreas to copy from. When the source RangeAreas has multiple ranges, their form must be able to be created by removing full rows or columns from a rectangular range.\n *\n * @param copyType - The type of cell data or formatting to copy over. Default is \"All\".\n *\n * @param skipBlanks - True if to skip blank cells in the source range. Default is false.\n *\n * @param transpose - True if to transpose the cells in the destination range. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copyFrom(\n            sourceRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            copyType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeCopyType",
                      "canonicalReference": "excel!Excel.RangeCopyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            skipBlanks?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            transpose?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "copyType",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "skipBlanks",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "transpose",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "copyFrom"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#dataValidation:member",
                  "docComment": "/**\n * Returns a data validation object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataValidation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidation",
                      "canonicalReference": "excel!Excel.DataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataValidation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#delete:member(1)",
                  "docComment": "/**\n * Deletes the cells associated with the range.\n *\n * @param shift - Specifies which way to shift the cells. See Excel.DeleteShiftDirection for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(shift: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DeleteShiftDirection",
                      "canonicalReference": "excel!Excel.DeleteShiftDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shift",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#find:member(1)",
                  "docComment": "/**\n * Finds the given string based on the criteria specified. If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell.\n *\n * @param text - The string to find.\n *\n * @param criteria - Additional search criteria, including the search direction and whether the search needs to match the entire cell or be case sensitive.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "find(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SearchCriteria",
                      "canonicalReference": "excel!Excel.SearchCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "find"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#findOrNullObject:member(1)",
                  "docComment": "/**\n * Finds the given string based on the criteria specified. If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell. If there are no matches, this function will return a null object.\n *\n * @param text - The string to find.\n *\n * @param criteria - Additional search criteria, including the search direction and whether the search needs to match the entire cell or be case sensitive.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "findOrNullObject(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SearchCriteria",
                      "canonicalReference": "excel!Excel.SearchCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "findOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#flashFill:member(1)",
                  "docComment": "/**\n * Does FlashFill to current range.Flash Fill will automatically fills data when it senses a pattern, so the range must be single column range and have data around in order to find pattern.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "flashFill(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "flashFill"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#format:member",
                  "docComment": "/**\n * Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFormat",
                      "canonicalReference": "excel!Excel.RangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#formulas:member",
                  "docComment": "/**\n * Represents the formula in A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulas: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulas",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#formulasLocal:member",
                  "docComment": "/**\n * Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulasLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulasLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#formulasR1C1:member",
                  "docComment": "/**\n * Represents the formula in R1C1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulasR1C1: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulasR1C1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getAbsoluteResizedRange:member(1)",
                  "docComment": "/**\n * Gets a Range object with the same top-left cell as the current Range object, but with the specified numbers of rows and columns.\n *\n * @param numRows - The number of rows of the new range size.\n *\n * @param numColumns - The number of columns of the new range size.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAbsoluteResizedRange(numRows: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", numColumns: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "numRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "numColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getAbsoluteResizedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getBoundingRect:member(1)",
                  "docComment": "/**\n * Gets the smallest range object that encompasses the given ranges. For example, the GetBoundingRect of \"B2:C5\" and \"D10:E15\" is \"B2:E15\".\n *\n * @param anotherRange - The range object or address or range name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBoundingRect(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getBoundingRect"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getCell:member(1)",
                  "docComment": "/**\n * Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid. The returned cell is located relative to the top left cell of the range.\n *\n * @param row - Row number of the cell to be retrieved. Zero-indexed.\n *\n * @param column - Column number of the cell to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCell(row: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", column: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "row",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "column",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getColumn:member(1)",
                  "docComment": "/**\n * Gets a column contained in the range.\n *\n * @param column - Column number of the range to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumn(column: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "column",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getColumnsAfter:member(1)",
                  "docComment": "/**\n * Gets a certain number of columns to the right of the current Range object.\n *\n * @param count - Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnsAfter(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumnsAfter"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getColumnsBefore:member(1)",
                  "docComment": "/**\n * Gets a certain number of columns to the left of the current Range object.\n *\n * @param count - Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColumnsBefore(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getColumnsBefore"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getEntireColumn:member(1)",
                  "docComment": "/**\n * Gets an object that represents the entire column of the range (for example, if the current range represents cells \"B4:E11\", its `getEntireColumn` is a range that represents columns \"B:E\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireColumn(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getEntireRow:member(1)",
                  "docComment": "/**\n * Gets an object that represents the entire row of the range (for example, if the current range represents cells \"B4:E11\", its `GetEntireRow` is a range that represents rows \"4:11\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireRow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getImage:member(1)",
                  "docComment": "/**\n * Renders the range as a base64-encoded png image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getImage(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getIntersection:member(1)",
                  "docComment": "/**\n * Gets the range object that represents the rectangular intersection of the given ranges.\n *\n * @param anotherRange - The range object or range address that will be used to determine the intersection of ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntersection(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getIntersection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getIntersectionOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the range object that represents the rectangular intersection of the given ranges. If no intersection is found, will return a null object.\n *\n * @param anotherRange - The range object or range address that will be used to determine the intersection of ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntersectionOrNullObject(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "getIntersectionOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getLastCell:member(1)",
                  "docComment": "/**\n * Gets the last cell within the range. For example, the last cell of \"B2:D5\" is \"D5\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastCell(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getLastColumn:member(1)",
                  "docComment": "/**\n * Gets the last column within the range. For example, the last column of \"B2:D5\" is \"D2:D5\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastColumn(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getLastRow:member(1)",
                  "docComment": "/**\n * Gets the last row within the range. For example, the last row of \"B2:D5\" is \"B5:D5\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLastRow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLastRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getOffsetRange:member(1)",
                  "docComment": "/**\n * Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.\n *\n * @param rowOffset - The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.\n *\n * @param columnOffset - The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOffsetRange(rowOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", columnOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "columnOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getOffsetRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getPivotTables:member(1)",
                  "docComment": "/**\n * Gets a scoped collection of PivotTables that overlap with the range.\n *\n * @param fullyContained - If true, returns only PivotTables that are fully contained within the range bounds. The default value is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPivotTables(fullyContained?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableScopedCollection",
                      "canonicalReference": "excel!Excel.PivotTableScopedCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fullyContained",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPivotTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getResizedRange:member(1)",
                  "docComment": "/**\n * Gets a Range object similar to the current Range object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.\n *\n * @param deltaRows - The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\n *\n * @param deltaColumns - The number of columns by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getResizedRange(deltaRows: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaColumns: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "deltaRows",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "deltaColumns",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getResizedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getRow:member(1)",
                  "docComment": "/**\n * Gets a row contained in the range.\n *\n * @param row - Row number of the range to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRow(row: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "row",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getRowsAbove:member(1)",
                  "docComment": "/**\n * Gets a certain number of rows above the current Range object.\n *\n * @param count - Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowsAbove(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRowsAbove"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getRowsBelow:member(1)",
                  "docComment": "/**\n * Gets a certain number of rows below the current Range object.\n *\n * @param count - Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRowsBelow(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRowsBelow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getSpecialCells:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, comprising one or more rectangular ranges, that represents all the cells that match the specified type and value. If no special cells are found, an ItemNotFound error will be thrown.\n *\n * @param cellType - The type of cells to include.\n *\n * @param cellValueType - If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSpecialCells(\n            cellType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellType",
                      "canonicalReference": "excel!Excel.SpecialCellType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            cellValueType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellValueType",
                      "canonicalReference": "excel!Excel.SpecialCellValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cellValueType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getSpecialCells"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getSpecialCellsOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, comprising one or more ranges, that represents all the cells that match the specified type and value. If no special cells are found, a null object will be returned.\n *\n * @param cellType - The type of cells to include.\n *\n * @param cellValueType - If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSpecialCellsOrNullObject(\n            cellType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellType",
                      "canonicalReference": "excel!Excel.SpecialCellType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            cellValueType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellValueType",
                      "canonicalReference": "excel!Excel.SpecialCellValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cellValueType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getSpecialCellsOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getSurroundingRegion:member(1)",
                  "docComment": "/**\n * Returns a Range object that represents the surrounding region for the top-left cell in this range. A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSurroundingRegion(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSurroundingRegion"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getTables:member(1)",
                  "docComment": "/**\n * Gets a scoped collection of tables that overlap with the range.\n *\n * @param fullyContained - If true, returns only tables that are fully contained within the range bounds. The default value is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTables(fullyContained?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableScopedCollection",
                      "canonicalReference": "excel!Excel.TableScopedCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fullyContained",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getUsedRange:member(1)",
                  "docComment": "/**\n * Returns the used range of the given range object. If there are no used cells within the range, this function will throw an ItemNotFound error.\n *\n * @param valuesOnly - Considers only cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRange(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getUsedRangeOrNullObject:member(1)",
                  "docComment": "/**\n * Returns the used range of the given range object. If there are no used cells within the range, this function will return a null object.\n *\n * @param valuesOnly - Considers only cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRangeOrNullObject(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRangeOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#getVisibleView:member(1)",
                  "docComment": "/**\n * Represents the visible rows of the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getVisibleView(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeView",
                      "canonicalReference": "excel!Excel.RangeView:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getVisibleView"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#group:member(1)",
                  "docComment": "/**\n * Groups columns and rows for an outline.\n *\n * @param groupOption - Specifies how the range can be grouped by rows or columns. An `InvalidArgument` error is thrown when the group option differs from the range's `isEntireRow` or `isEntireColumn` property (i.e., `range.isEntireRow` is true and `groupOption` is \"ByColumns\" or `range.isEntireColumn` is true and `groupOption` is \"ByRows\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "group(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!Excel.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "group"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#height:member",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from top edge of the range to bottom edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#hidden:member",
                  "docComment": "/**\n * Represents if all cells of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly hidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#hideGroupDetails:member(1)",
                  "docComment": "/**\n * Hide details of the row or column group.\n *\n * @param groupOption - Specifies whether to hide details of grouped rows or grouped columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hideGroupDetails(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!Excel.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "hideGroupDetails"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#hyperlink:member",
                  "docComment": "/**\n * Represents the hyperlink for the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hyperlink: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeHyperlink",
                      "canonicalReference": "excel!Excel.RangeHyperlink:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hyperlink",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#insert:member(1)",
                  "docComment": "/**\n * Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.\n *\n * @param shift - Specifies which way to shift the cells. See Excel.InsertShiftDirection for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "insert(shift: "
                    },
                    {
                      "kind": "Reference",
                      "text": "InsertShiftDirection",
                      "canonicalReference": "excel!Excel.InsertShiftDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shift",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "insert"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#isEntireColumn:member",
                  "docComment": "/**\n * Represents if the current range is an entire column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isEntireColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isEntireColumn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#isEntireRow:member",
                  "docComment": "/**\n * Represents if the current range is an entire row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isEntireRow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isEntireRow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#left:member",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from left edge of the worksheet to left edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#linkedDataTypeState:member",
                  "docComment": "/**\n * Represents the data type state of each cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly linkedDataTypeState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "LinkedDataTypeState",
                      "canonicalReference": "excel!Excel.LinkedDataTypeState:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "linkedDataTypeState",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#merge:member(1)",
                  "docComment": "/**\n * Merge the range cells into one region in the worksheet.\n *\n * @param across - Optional. Set true to merge cells in each row of the specified range as separate merged cells. The default value is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "merge(across?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "across",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "merge"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#moveTo:member(1)",
                  "docComment": "/**\n * Moves cell values, formatting, and formulas from current range to the destination range, replacing the old information in those cells. The destination range will be expanded automatically if it is smaller than the current range. Any cells in the destination range that are outside of the original range's area are not changed.\n *\n * @param destinationRange - destinationRange Specifies the range to where the information in this range will be moved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "moveTo(destinationRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destinationRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "moveTo"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#numberFormat:member",
                  "docComment": "/**\n * Represents Excel's number format code for the given range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#numberFormatLocal:member",
                  "docComment": "/**\n * Represents Excel's number format code for the given range, based on the language settings of the user.​ Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property. Any returned text uses the locally-formatted strings based on the language specified in the system settings.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormatLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormatLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#removeDuplicates:member(1)",
                  "docComment": "/**\n * Removes duplicate values from the range specified by the columns.\n *\n * @param columns - The columns inside the range that may contain duplicates. At least one column needs to be specified. Zero-indexed.\n *\n * @param includesHeader - True if the input data contains header. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeDuplicates(\n            columns: "
                    },
                    {
                      "kind": "Content",
                      "text": "number[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            includesHeader: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RemoveDuplicatesResult",
                      "canonicalReference": "excel!Excel.RemoveDuplicatesResult:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "columns",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "includesHeader",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "removeDuplicates"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#replaceAll:member(1)",
                  "docComment": "/**\n * Finds and replaces the given string based on the criteria specified within the current range.\n *\n * @param text - String to find.\n *\n * @param replacement - String to replace the original with.\n *\n * @param criteria - Additional Replace Criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "replaceAll(\n            text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            replacement: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplaceCriteria",
                      "canonicalReference": "excel!Excel.ReplaceCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "replacement",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "replaceAll"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#rowCount:member",
                  "docComment": "/**\n * Returns the total number of rows in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rowCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rowCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#rowHidden:member",
                  "docComment": "/**\n * Represents if all rows of the current range are hidden.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rowHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rowHidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#rowIndex:member",
                  "docComment": "/**\n * Returns the row number of the first cell in the range. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rowIndex: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rowIndex",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#select:member(1)",
                  "docComment": "/**\n * Selects the specified range in the Excel UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "select(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "select"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#setDirty:member(1)",
                  "docComment": "/**\n * Set a range to be recalculated when the next recalculation occurs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDirty(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setDirty"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#showCard:member(1)",
                  "docComment": "/**\n * Displays the card for an active cell if it has rich value content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showCard(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "showCard"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#showGroupDetails:member(1)",
                  "docComment": "/**\n * Show details of the row or column group.\n *\n * @param groupOption - Specifies whether to show details of grouped rows or grouped columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showGroupDetails(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!Excel.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "showGroupDetails"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#sort:member",
                  "docComment": "/**\n * Represents the range sort of the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly sort: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeSort",
                      "canonicalReference": "excel!Excel.RangeSort:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sort",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#style:member",
                  "docComment": "/**\n * Represents the style of the current range. If the styles of the cells are inconsistent, null will be returned. For custom styles, the style name will be returned. For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#text:member",
                  "docComment": "/**\n * Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#top:member",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from top edge of the worksheet to top edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#ungroup:member(1)",
                  "docComment": "/**\n * Ungroups columns and rows for an outline.\n *\n * @param groupOption - Specifies how the range can be ungrouped by rows or columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ungroup(groupOption: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupOption",
                      "canonicalReference": "excel!Excel.GroupOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groupOption",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "ungroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Range#unmerge:member(1)",
                  "docComment": "/**\n * Unmerge the range cells into separate cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unmerge(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "unmerge"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#values:member",
                  "docComment": "/**\n * Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#valueTypes:member",
                  "docComment": "/**\n * Specifies the type of data in each cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly valueTypes: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!Excel.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "valueTypes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#width:member",
                  "docComment": "/**\n * Returns the distance in points, for 100% zoom, from left edge of the range to right edge of the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Range#worksheet:member",
                  "docComment": "/**\n * The worksheet containing the current range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeAreas:interface",
              "docComment": "/**\n * RangeAreas represents a collection of one or more rectangular ranges in the same worksheet. To learn how to use discontinguous ranges, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges | Work with multiple ranges simultaneously in Excel add-ins}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeAreas "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeAreas",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#address:member",
                  "docComment": "/**\n * Returns the RangeAreas reference in A1-style. Address value will contain the worksheet name for each rectangular block of cells (e.g., \"Sheet1!A1:B4, Sheet1!D1:D4\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly address: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "address",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#addressLocal:member",
                  "docComment": "/**\n * Returns the RangeAreas reference in the user locale.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly addressLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "addressLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#areaCount:member",
                  "docComment": "/**\n * Returns the number of rectangular ranges that comprise this RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly areaCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "areaCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#areas:member",
                  "docComment": "/**\n * Returns a collection of rectangular ranges that comprise this RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly areas: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeCollection",
                      "canonicalReference": "excel!Excel.RangeCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "areas",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#calculate:member(1)",
                  "docComment": "/**\n * Calculates all cells in the RangeAreas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "calculate"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#cellCount:member",
                  "docComment": "/**\n * Returns the number of cells in the RangeAreas object, summing up the cell counts of all of the individual rectangular ranges. Returns -1 if the cell count exceeds 2^31-1 (2,147,483,647).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly cellCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#clear:member(1)",
                  "docComment": "/**\n * Clears values, format, fill, border, etc on each of the areas that comprise this RangeAreas object.\n *\n * @param applyTo - Optional. Determines the type of clear action. See Excel.ClearApplyTo for details. Default is \"All\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(applyTo?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ClearApplyTo",
                      "canonicalReference": "excel!Excel.ClearApplyTo:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "applyTo",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#conditionalFormats:member",
                  "docComment": "/**\n * Returns a collection of ConditionalFormats that intersect with any cells in this RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly conditionalFormats: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalFormatCollection",
                      "canonicalReference": "excel!Excel.ConditionalFormatCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "conditionalFormats",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#convertDataTypeToText:member(1)",
                  "docComment": "/**\n * Converts all cells in the RangeAreas with datatypes into text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertDataTypeToText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "convertDataTypeToText"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#convertToLinkedDataType:member(1)",
                  "docComment": "/**\n * Converts all cells in the RangeAreas into linked datatype.\n *\n * @param serviceID - The Service ID which will be used to query the data.\n *\n * @param languageCulture - Language Culture to query the service for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToLinkedDataType(\n            serviceID: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            languageCulture: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "serviceID",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "languageCulture",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "convertToLinkedDataType"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#copyFrom:member(1)",
                  "docComment": "/**\n * Copies cell data or formatting from the source range or RangeAreas to the current RangeAreas. The destination rangeAreas can be a different size than the source range or RangeAreas. The destination will be expanded automatically if it is smaller than the source.\n *\n * @param sourceRange - The source range or RangeAreas to copy from. When the source RangeAreas has multiple ranges, their form must able to be created by removing full rows or columns from a rectangular range.\n *\n * @param copyType - The type of cell data or formatting to copy over. Default is \"All\".\n *\n * @param skipBlanks - True if to skip blank cells in the source range or RangeAreas. Default is false.\n *\n * @param transpose - True if to transpose the cells in the destination RangeAreas. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copyFrom(\n            sourceRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            copyType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeCopyType",
                      "canonicalReference": "excel!Excel.RangeCopyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            skipBlanks?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            transpose?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sourceRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "copyType",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "skipBlanks",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "transpose",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "copyFrom"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#dataValidation:member",
                  "docComment": "/**\n * Returns a dataValidation object for all ranges in the RangeAreas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataValidation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataValidation",
                      "canonicalReference": "excel!Excel.DataValidation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataValidation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#format:member",
                  "docComment": "/**\n * Returns a RangeFormat object, encapsulating the the font, fill, borders, alignment, and other properties for all ranges in the RangeAreas object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFormat",
                      "canonicalReference": "excel!Excel.RangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getEntireColumn:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents the entire columns of the RangeAreas (for example, if the current RangeAreas represents cells \"B4:E11, H2\", it returns a RangeAreas that represents columns \"B:E, H:H\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireColumn(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireColumn"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getEntireRow:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents the entire rows of the RangeAreas (for example, if the current RangeAreas represents cells \"B4:E11\", it returns a RangeAreas that represents rows \"4:11\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntireRow(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getEntireRow"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getIntersection:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas object that represents the intersection of the given ranges or RangeAreas. If no intersection is found, an ItemNotFound error will be thrown.\n *\n * @param anotherRange - The range, RangeAreas object or range address that will be used to determine the intersection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntersection(anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getIntersection"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getIntersectionOrNullObject:member(1)",
                  "docComment": "/**\n * Returns the RangeAreas object that represents the intersection of the given ranges or RangeAreas. If no intersection is found, a null object is returned.\n *\n * @param anotherRange - The range, RangeAreas, or address that will be used to determine the intersection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getIntersectionOrNullObject(\n            anotherRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "anotherRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getIntersectionOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getOffsetRangeAreas:member(1)",
                  "docComment": "/**\n * Returns an RangeAreas object that is shifted by the specific row and column offset. The dimension of the returned RangeAreas will match the original object. If the resulting RangeAreas is forced outside the bounds of the worksheet grid, an error will be thrown.\n *\n * @param rowOffset - The number of rows (positive, negative, or 0) by which the RangeAreas is to be offset. Positive values are offset downward, and negative values are offset upward.\n *\n * @param columnOffset - The number of columns (positive, negative, or 0) by which the RangeAreas is to be offset. Positive values are offset to the right, and negative values are offset to the left.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getOffsetRangeAreas(\n            rowOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            columnOffset: "
                    },
                    {
                      "kind": "Content",
                      "text": "number\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "columnOffset",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getOffsetRangeAreas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getSpecialCells:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents all the cells that match the specified type and value. Throws an error if no special cells are found that match the criteria.\n *\n * @param cellType - The type of cells to include.\n *\n * @param cellValueType - If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSpecialCells(\n            cellType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellType",
                      "canonicalReference": "excel!Excel.SpecialCellType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            cellValueType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellValueType",
                      "canonicalReference": "excel!Excel.SpecialCellValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cellValueType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getSpecialCells"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(1)",
                  "docComment": "/**\n * Returns a RangeAreas object that represents all the cells that match the specified type and value. Returns a null object if no special cells are found that match the criteria.\n *\n * @param cellType - The type of cells to include.\n *\n * @param cellValueType - If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSpecialCellsOrNullObject(\n            cellType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellType",
                      "canonicalReference": "excel!Excel.SpecialCellType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            cellValueType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpecialCellValueType",
                      "canonicalReference": "excel!Excel.SpecialCellValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "cellType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "cellValueType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "getSpecialCellsOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getTables:member(1)",
                  "docComment": "/**\n * Returns a scoped collection of tables that overlap with any range in this RangeAreas object.\n *\n * @param fullyContained - If true, returns only tables that are fully contained within the range bounds. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTables(fullyContained?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableScopedCollection",
                      "canonicalReference": "excel!Excel.TableScopedCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fullyContained",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getTables"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getUsedRangeAreas:member(1)",
                  "docComment": "/**\n * Returns the used RangeAreas that comprises all the used areas of individual rectangular ranges in the RangeAreas object. If there are no used cells within the RangeAreas, the ItemNotFound error will be thrown.\n *\n * @param valuesOnly - Whether to only consider cells with values as used cells. Default is false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRangeAreas(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRangeAreas"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#getUsedRangeAreasOrNullObject:member(1)",
                  "docComment": "/**\n * Returns the used RangeAreas that comprises all the used areas of individual rectangular ranges in the RangeAreas object. If there are no used cells within the RangeAreas, a null object will be returned.\n *\n * @param valuesOnly - Whether to only consider cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRangeAreasOrNullObject(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRangeAreasOrNullObject"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#isEntireColumn:member",
                  "docComment": "/**\n * Specifies if all the ranges on this RangeAreas object represent entire columns (e.g., \"A:C, Q:Z\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isEntireColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isEntireColumn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#isEntireRow:member",
                  "docComment": "/**\n * Specifies if all the ranges on this RangeAreas object represent entire rows (e.g., \"1:3, 5:7\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isEntireRow: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isEntireRow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeAreas#setDirty:member(1)",
                  "docComment": "/**\n * Sets the RangeAreas to be recalculated when the next recalculation occurs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDirty(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setDirty"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#style:member",
                  "docComment": "/**\n * Represents the style for all ranges in this RangeAreas object. If the styles of the cells are inconsistent, null will be returned. For custom styles, the style name will be returned. For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeAreas#worksheet:member",
                  "docComment": "/**\n * Returns the worksheet for the current RangeAreas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeBorder:interface",
              "docComment": "/**\n * Represents the border of an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeBorder "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeBorder",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorder#color:member",
                  "docComment": "/**\n * HTML color code representing the color of the border line, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeBorder#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorder#sideIndex:member",
                  "docComment": "/**\n * Constant value that indicates the specific side of the border. See Excel.BorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly sideIndex: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderIndex",
                      "canonicalReference": "excel!Excel.BorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sideIndex",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorder#style:member",
                  "docComment": "/**\n * One of the constants of line style specifying the line style for the border. See Excel.BorderLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderLineStyle",
                      "canonicalReference": "excel!Excel.BorderLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorder#tintAndShade:member",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Border, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the border doesn't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorder#weight:member",
                  "docComment": "/**\n * Specifies the weight of the border around a range. See Excel.BorderWeight for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderWeight",
                      "canonicalReference": "excel!Excel.BorderWeight:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeBorderCollection:interface",
              "docComment": "/**\n * Represents the border objects that make up the range border.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeBorderCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeBorderCollection",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorderCollection#count:member",
                  "docComment": "/**\n * Number of border objects in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeBorderCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a border object using its name.\n *\n * @param index - Index value of the border object to be retrieved. See Excel.BorderIndex for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(index: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BorderIndex",
                      "canonicalReference": "excel!Excel.BorderIndex:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorder",
                      "canonicalReference": "excel!Excel.RangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeBorderCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a border object using its index.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorder",
                      "canonicalReference": "excel!Excel.RangeBorder:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeBorderCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeBorderCollection#tintAndShade:member",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire border collections don't have uniform tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeCollection:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of ranges in the RangeCollection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Returns the range object based on its position in the RangeCollection.\n *\n * @param index - Index value of the range object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.RangeCopyType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum RangeCopyType "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeCopyType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeCopyType.all:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "all = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"all\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "all",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeCopyType.formats:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formats = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formats\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formats",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeCopyType.formulas:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulas = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formulas\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulas",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeCopyType.values:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"values\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeFill:interface",
              "docComment": "/**\n * Represents the background of a range object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeFill "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFill#clear:member(1)",
                  "docComment": "/**\n * Resets the range background.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFill#color:member",
                  "docComment": "/**\n * HTML color code representing the color of the background, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFill#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFill#pattern:member",
                  "docComment": "/**\n * The pattern of a range. See Excel.FillPattern for details. LinearGradient and RectangularGradient are not supported. A null value indicates that the entire range doesn't have uniform pattern setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FillPattern",
                      "canonicalReference": "excel!Excel.FillPattern:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFill#patternColor:member",
                  "docComment": "/**\n * The HTML color code representing the color of the range pattern, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFill#patternTintAndShade:member",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a pattern color for Range Fill, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. If the pattern tintAndShades are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "patternTintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "patternTintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFill#tintAndShade:member",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Fill, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. If the tintAndShades are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeFont:interface",
              "docComment": "/**\n * This object represents the font attributes (font name, font size, color, etc.) for an object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeFont "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeFont",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#bold:member",
                  "docComment": "/**\n * Represents the bold status of font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#color:member",
                  "docComment": "/**\n * HTML color code representation of the text color (e.g., #FF0000 represents Red).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#italic:member",
                  "docComment": "/**\n * Specifies the italic status of the font.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFont#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#name:member",
                  "docComment": "/**\n * Font name (e.g., \"Calibri\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#size:member",
                  "docComment": "/**\n * Font size.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#strikethrough:member",
                  "docComment": "/**\n * Specifies the strikethrough status of font. A null value indicates that the entire range doesn't have uniform Strikethrough setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strikethrough: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strikethrough",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#subscript:member",
                  "docComment": "/**\n * Specifies the Subscript status of font. Returns True if all the fonts of the range are Subscript. Returns False if all the fonts of the range are Superscript or normal (neither Superscript, nor Subscript). Returns Null otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subscript: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#superscript:member",
                  "docComment": "/**\n * Specifies the Superscript status of font. Returns True if all the fonts of the range are Superscript. Returns False if all the fonts of the range are Subscript or normal (neither Superscript, nor Subscript). Returns Null otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "superscript: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "superscript",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#tintAndShade:member",
                  "docComment": "/**\n * Specifies a double that lightens or darkens a color for Range Font, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color. A null value indicates that the entire range doesn't have uniform font tintAndShade setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tintAndShade: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tintAndShade",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFont#underline:member",
                  "docComment": "/**\n * Type of underline applied to the font. See Excel.RangeUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeUnderlineStyle",
                      "canonicalReference": "excel!Excel.RangeUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeFormat:interface",
              "docComment": "/**\n * A format object encapsulating the range's font, fill, borders, alignment, and other properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeFormat",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFormat#adjustIndent:member(1)",
                  "docComment": "/**\n * Adjusts the indentation of the range formatting. The indent value ranges from 0 to 250 and is measured in characters.\n *\n * @param amount - The number of character spaces by which the current indent is adjusted. This value should be between -250 and 250. **Note**: If the amount would raise the indent level above 250, the indent level stays with 250. Similarly, if the amount would lower the indent level below 0, the indent level stays 0.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "adjustIndent(amount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "amount",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "adjustIndent"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFormat#autofitColumns:member(1)",
                  "docComment": "/**\n * Changes the width of the columns of the current range to achieve the best fit, based on the current data in the columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autofitColumns(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "autofitColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFormat#autofitRows:member(1)",
                  "docComment": "/**\n * Changes the height of the rows of the current range to achieve the best fit, based on the current data in the columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autofitRows(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "autofitRows"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#autoIndent:member",
                  "docComment": "/**\n * Specifies if text is automatically indented when text alignment is set to equal distribution.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoIndent: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoIndent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#borders:member",
                  "docComment": "/**\n * Collection of border objects that apply to the overall range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly borders: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorderCollection",
                      "canonicalReference": "excel!Excel.RangeBorderCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#columnWidth:member",
                  "docComment": "/**\n * Specifies the width of all colums within the range. If the column widths are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columnWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#fill:member",
                  "docComment": "/**\n * Returns the fill object defined on the overall range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFill",
                      "canonicalReference": "excel!Excel.RangeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#font:member",
                  "docComment": "/**\n * Returns the font object defined on the overall range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFont",
                      "canonicalReference": "excel!Excel.RangeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#horizontalAlignment:member",
                  "docComment": "/**\n * Represents the horizontal alignment for the specified object. See Excel.HorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HorizontalAlignment",
                      "canonicalReference": "excel!Excel.HorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#indentLevel:member",
                  "docComment": "/**\n * An integer from 0 to 250 that indicates the indent level.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "indentLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "indentLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#protection:member",
                  "docComment": "/**\n * Returns the format protection object for a range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly protection: "
                    },
                    {
                      "kind": "Reference",
                      "text": "FormatProtection",
                      "canonicalReference": "excel!Excel.FormatProtection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "protection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#readingOrder:member",
                  "docComment": "/**\n * The reading order for the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readingOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadingOrder",
                      "canonicalReference": "excel!Excel.ReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readingOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#rowHeight:member",
                  "docComment": "/**\n * The height of all rows in the range. If the row heights are not uniform, null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rowHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rowHeight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#shrinkToFit:member",
                  "docComment": "/**\n * Specifies if text automatically shrinks to fit in the available column width.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "shrinkToFit: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shrinkToFit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#textOrientation:member",
                  "docComment": "/**\n * The text orientation of all the cells within the range. The text orientation should be an integer either from -90 to 90, or 180 for vertically-oriented text. If the orientation within a range are not uniform, then null will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#useStandardHeight:member",
                  "docComment": "/**\n * Determines if the row height of the Range object equals the standard height of the sheet. Returns True if the row height of the Range object equals the standard height of the sheet. Returns Null if the range contains more than one row and the rows aren't all the same height. Returns False otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "useStandardHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "useStandardHeight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#useStandardWidth:member",
                  "docComment": "/**\n * Specifies if the column width of the Range object equals the standard width of the sheet. Returns True if the column width of the Range object equals the standard width of the sheet. Returns Null if the range contains more than one column and the columns aren't all the same height. Returns False otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "useStandardWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "useStandardWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#verticalAlignment:member",
                  "docComment": "/**\n * Represents the vertical alignment for the specified object. See Excel.VerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "VerticalAlignment",
                      "canonicalReference": "excel!Excel.VerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeFormat#wrapText:member",
                  "docComment": "/**\n * Specifies if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wrapText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wrapText",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeHyperlink:interface",
              "docComment": "/**\n * Represents the necessary strings to get/set a hyperlink (XHL) object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeHyperlink "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeHyperlink",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeHyperlink#address:member",
                  "docComment": "/**\n * Represents the url target for the hyperlink.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "address?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "address",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeHyperlink#documentReference:member",
                  "docComment": "/**\n * Represents the document reference target for the hyperlink.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "documentReference?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "documentReference",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeHyperlink#screenTip:member",
                  "docComment": "/**\n * Represents the string displayed when hovering over the hyperlink.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "screenTip?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "screenTip",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeHyperlink#textToDisplay:member",
                  "docComment": "/**\n * Represents the string that is displayed in the top left most cell in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textToDisplay?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textToDisplay",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeReference:interface",
              "docComment": "/**\n * Represents a string reference of the form SheetName!A1:B5, or a global or local named range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeReference "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeReference",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeReference#address:member",
                  "docComment": "/**\n * The address of the range; for example 'SheetName!A1:B5'.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "address: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "address",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeSort:interface",
              "docComment": "/**\n * Manages sorting operations on Range objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeSort "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeSort",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeSort#apply:member(1)",
                  "docComment": "/**\n * Perform a sort operation.\n *\n * @param fields - The list of conditions to sort on.\n *\n * @param matchCase - Optional. Whether to have the casing impact string ordering.\n *\n * @param hasHeaders - Optional. Whether the range has a header.\n *\n * @param orientation - Optional. Whether the operation is sorting rows or columns.\n *\n * @param method - Optional. The ordering method used for Chinese characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(\n            fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortField",
                      "canonicalReference": "excel!Excel.SortField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            hasHeaders?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            orientation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortOrientation",
                      "canonicalReference": "excel!Excel.SortOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            method?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortMethod",
                      "canonicalReference": "excel!Excel.SortMethod:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fields",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "matchCase",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "hasHeaders",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 7
                      }
                    },
                    {
                      "parameterName": "orientation",
                      "parameterTypeTokenRange": {
                        "startIndex": 8,
                        "endIndex": 9
                      }
                    },
                    {
                      "parameterName": "method",
                      "parameterTypeTokenRange": {
                        "startIndex": 10,
                        "endIndex": 12
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeSort#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.RangeUnderlineStyle:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum RangeUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeUnderlineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"double\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeUnderlineStyle.doubleAccountant:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "doubleAccountant = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"doubleAccountant\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "doubleAccountant",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"single\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeUnderlineStyle.singleAccountant:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "singleAccountant = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"singleAccountant\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "singleAccountant",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.RangeValueType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum RangeValueType "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeValueType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.boolean:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "boolean = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"boolean\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "boolean",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"double\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.empty:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "empty = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"empty\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "empty",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.error:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "error = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"error\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "error",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.integer:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "integer = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"integer\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "integer",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.richValue:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "richValue = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"richValue\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "richValue",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.string:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "string = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"string\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "string",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.RangeValueType.unknown:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unknown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeView:interface",
              "docComment": "/**\n * RangeView represents a set of visible cells of the parent range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeView "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeView",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#cellAddresses:member",
                  "docComment": "/**\n * Represents the cell addresses of the RangeView.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly cellAddresses: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellAddresses",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#columnCount:member",
                  "docComment": "/**\n * The number of visible columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly columnCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columnCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#formulas:member",
                  "docComment": "/**\n * Represents the formula in A1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulas: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulas",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#formulasLocal:member",
                  "docComment": "/**\n * Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \"=SUM(A1, 1.5)\" formula would become \"=SUMME(A1; 1,5)\" in German.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulasLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulasLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#formulasR1C1:member",
                  "docComment": "/**\n * Represents the formula in R1C1-style notation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulasR1C1: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulasR1C1",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeView#getRange:member(1)",
                  "docComment": "/**\n * Gets the parent range associated with the current RangeView.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#index:member",
                  "docComment": "/**\n * Returns a value that represents the index of the RangeView.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeView#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#numberFormat:member",
                  "docComment": "/**\n * Represents Excel's number format code for the given cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#rowCount:member",
                  "docComment": "/**\n * The number of visible rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rowCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rowCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#rows:member",
                  "docComment": "/**\n * Represents a collection of range views associated with the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rows: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeViewCollection",
                      "canonicalReference": "excel!Excel.RangeViewCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#text:member",
                  "docComment": "/**\n * Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#values:member",
                  "docComment": "/**\n * Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RangeView#valueTypes:member",
                  "docComment": "/**\n * Represents the type of data of each cell.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly valueTypes: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeValueType",
                      "canonicalReference": "excel!Excel.RangeValueType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "valueTypes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RangeViewCollection:interface",
              "docComment": "/**\n * Represents a collection of RangeView objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RangeViewCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "RangeViewCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeViewCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of RangeView objects in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeViewCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a RangeView Row via its index. Zero-Indexed.\n *\n * @param index - Index of the visible row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeView",
                      "canonicalReference": "excel!Excel.RangeView:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RangeViewCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ReadingOrder:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ReadingOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "ReadingOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ReadingOrder.context:member",
                  "docComment": "/**\n * Reading order is determined by the language of the first character entered. If a right-to-left language character is entered first, reading order is right to left. If a left-to-right language character is entered first, reading order is left to right.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "context = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"context\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "context",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ReadingOrder.leftToRight:member",
                  "docComment": "/**\n * Left to right reading order\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftToRight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftToRight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftToRight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ReadingOrder.rightToLeft:member",
                  "docComment": "/**\n * Right to left reading order\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightToLeft = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightToLeft\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightToLeft",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RemoveDuplicatesResult:interface",
              "docComment": "/**\n * Represents the results from the removeDuplicates method on range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RemoveDuplicatesResult "
                }
              ],
              "releaseTag": "Public",
              "name": "RemoveDuplicatesResult",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RemoveDuplicatesResult#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RemoveDuplicatesResult#removed:member",
                  "docComment": "/**\n * Number of duplicated rows removed by the operation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly removed: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "removed",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member",
                  "docComment": "/**\n * Number of remaining unique rows present in the resulting range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly uniqueRemaining: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "uniqueRemaining",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ReplaceCriteria:interface",
              "docComment": "/**\n * Represents the replace criteria to be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ReplaceCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "ReplaceCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ReplaceCriteria#completeMatch:member",
                  "docComment": "/**\n * Specifies if the match needs to be complete or partial. A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`). Default is false (partial).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "completeMatch?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "completeMatch",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ReplaceCriteria#matchCase:member",
                  "docComment": "/**\n * Specifies if the match is case sensitive. Default is false (insensitive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RequestContext:interface",
              "docComment": "/**\n * The RequestContext object facilitates requests to the Excel workbook. The script and the Excel workbook run in separate processes. The request context is used to synchronize data and actions between the script and the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RequestContext "
                }
              ],
              "releaseTag": "Public",
              "name": "RequestContext",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RequestContext#sync:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sync(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Promise",
                      "canonicalReference": "!Promise:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<void>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "sync"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RequestContext#workbook:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly workbook: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Workbook",
                      "canonicalReference": "excel!Excel.Workbook:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "workbook",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RowColumnPivotHierarchy:interface",
              "docComment": "/**\n * Represents the Excel RowColumnPivotHierarchy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RowColumnPivotHierarchy "
                }
              ],
              "releaseTag": "Public",
              "name": "RowColumnPivotHierarchy",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchy#fields:member",
                  "docComment": "/**\n * Returns the PivotFields associated with the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotFieldCollection",
                      "canonicalReference": "excel!Excel.PivotFieldCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fields",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchy#id:member",
                  "docComment": "/**\n * Id of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchy#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchy#name:member",
                  "docComment": "/**\n * Name of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchy#position:member",
                  "docComment": "/**\n * Position of the RowColumnPivotHierarchy.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchy#setToDefault:member(1)",
                  "docComment": "/**\n * Reset the RowColumnPivotHierarchy back to its default values.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setToDefault(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "setToDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection:interface",
              "docComment": "/**\n * Represents a collection of RowColumnPivotHierarchy items associated with the PivotTable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RowColumnPivotHierarchyCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "RowColumnPivotHierarchyCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection#add:member(1)",
                  "docComment": "/**\n * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column, or filter axis, it will be removed from that location.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(pivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotHierarchy",
                      "canonicalReference": "excel!Excel.PivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!Excel.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of pivot hierarchies in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a RowColumnPivotHierarchy by its name or id.\n *\n * @param name - Name of the RowColumnPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!Excel.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a RowColumnPivotHierarchy by name. If the RowColumnPivotHierarchy does not exist, will return a null object.\n *\n * @param name - Name of the RowColumnPivotHierarchy to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!Excel.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.RowColumnPivotHierarchyCollection#remove:member(1)",
                  "docComment": "/**\n * Removes the PivotHierarchy from the current axis.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "remove(rowColumnPivotHierarchy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RowColumnPivotHierarchy",
                      "canonicalReference": "excel!Excel.RowColumnPivotHierarchy:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowColumnPivotHierarchy",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "remove"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Function",
              "canonicalReference": "excel!Excel.run:function(1)",
              "docComment": "/**\n * run function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export function run<T>(\n        batch: "
                },
                {
                  "kind": "Content",
                  "text": "(context: {\n            sync: () => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>;\n            workbook: "
                },
                {
                  "kind": "Reference",
                  "text": "Workbook",
                  "canonicalReference": "excel!Excel.Workbook:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>\n    "
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "batch",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "run"
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SearchCriteria:interface",
              "docComment": "/**\n * Represents the search criteria to be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SearchCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "SearchCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SearchCriteria#completeMatch:member",
                  "docComment": "/**\n * Specifies if the match needs to be complete or partial. A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`). Default is false (partial).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "completeMatch?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "completeMatch",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SearchCriteria#matchCase:member",
                  "docComment": "/**\n * Specifies if the match is case sensitive. Default is false (insensitive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SearchCriteria#searchDirection:member",
                  "docComment": "/**\n * Specifies the search direction. Default is forward. See Excel.SearchDirection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "searchDirection?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SearchDirection",
                      "canonicalReference": "excel!Excel.SearchDirection:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "searchDirection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SearchDirection:enum",
              "docComment": "/**\n * Specifies the search direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SearchDirection "
                }
              ],
              "releaseTag": "Public",
              "name": "SearchDirection",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SearchDirection.backwards:member",
                  "docComment": "/**\n * Search in reverse order.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "backwards = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"backwards\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "backwards",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SearchDirection.forward:member",
                  "docComment": "/**\n * Search in forward order.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "forward = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"forward\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "forward",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Setting:interface",
              "docComment": "/**\n * Setting represents a key-value pair of a setting persisted to the document (per file per add-in). These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in. Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Setting "
                }
              ],
              "releaseTag": "Public",
              "name": "Setting",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Setting#delete:member(1)",
                  "docComment": "/**\n * Deletes the setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Setting#key:member",
                  "docComment": "/**\n * The key that represents the id of the Setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "key",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Setting#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Setting#value:member",
                  "docComment": "/**\n * Represents the value stored for this setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SettingCollection:interface",
              "docComment": "/**\n * Represents a collection of key-value pair setting objects that are part of the workbook. The scope is limited to per file and add-in (task-pane or content) combination.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SettingCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "SettingCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SettingCollection#add:member(1)",
                  "docComment": "/**\n * Sets or adds the specified setting to the workbook.\n *\n * @param key - The Key of the new setting.\n *\n * @param value - The Value for the new setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            value: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | number | boolean | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Date",
                      "canonicalReference": "!Date:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<any> | any\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Setting",
                      "canonicalReference": "excel!Excel.Setting:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "value",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SettingCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of Settings in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SettingCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a Setting entry via the key.\n *\n * @param key - Key of the setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Setting",
                      "canonicalReference": "excel!Excel.Setting:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SettingCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a Setting entry via the key. If the Setting does not exist, will return a null object.\n *\n * @param key - The key of the setting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Setting",
                      "canonicalReference": "excel!Excel.Setting:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SettingCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Shape:interface",
              "docComment": "/**\n * Represents a generic shape object in the worksheet. A shape could be a geometric shape, a line, a group of shapes, etc. To learn more about the shape object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes | Work with shapes using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Shape "
                }
              ],
              "releaseTag": "Public",
              "name": "Shape",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#altTextDescription:member",
                  "docComment": "/**\n * Specifies the alternative description text for a Shape object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "altTextDescription: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "altTextDescription",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#altTextTitle:member",
                  "docComment": "/**\n * Specifies the alternative title text for a Shape object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "altTextTitle: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "altTextTitle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#connectionSiteCount:member",
                  "docComment": "/**\n * Returns the number of connection sites on this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly connectionSiteCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "connectionSiteCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#copyTo:member(1)",
                  "docComment": "/**\n * Copies and pastes a Shape object. The pasted shape is copied to the same pixel location as this shape.\n *\n * @param destinationSheet - The sheet to which the shape object will be pasted. The default value is the copied Shape's worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copyTo(destinationSheet?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destinationSheet",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "copyTo"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#delete:member(1)",
                  "docComment": "/**\n * Removes the shape from the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#fill:member",
                  "docComment": "/**\n * Returns the fill formatting of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFill",
                      "canonicalReference": "excel!Excel.ShapeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#geometricShape:member",
                  "docComment": "/**\n * Returns the geometric shape associated with the shape. An error will be thrown if the shape type is not \"GeometricShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly geometricShape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShape",
                      "canonicalReference": "excel!Excel.GeometricShape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "geometricShape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#geometricShapeType:member",
                  "docComment": "/**\n * Specifies the geometric shape type of this geometric shape. See Excel.GeometricShapeType for details. Returns null if the shape type is not \"GeometricShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "geometricShapeType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShapeType",
                      "canonicalReference": "excel!Excel.GeometricShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "geometricShapeType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#getAsImage:member(1)",
                  "docComment": "/**\n * Converts the shape to an image and returns the image as a base64-encoded string. The DPI is 96. The only supported formats are `Excel.PictureFormat.BMP`, `Excel.PictureFormat.PNG`, `Excel.PictureFormat.JPEG`, and `Excel.PictureFormat.GIF`.\n *\n * @param format - Specifies the format of the image.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAsImage(format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PictureFormat",
                      "canonicalReference": "excel!Excel.PictureFormat:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "format",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getAsImage"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#group:member",
                  "docComment": "/**\n * Returns the shape group associated with the shape. An error will be thrown if the shape type is not \"GroupShape\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly group: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeGroup",
                      "canonicalReference": "excel!Excel.ShapeGroup:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "group",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#height:member",
                  "docComment": "/**\n * Specifies the height, in points, of the shape. Throws an invalid argument exception when set with a negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#id:member",
                  "docComment": "/**\n * Specifies the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#image:member",
                  "docComment": "/**\n * Returns the image associated with the shape. An error will be thrown if the shape type is not \"Image\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly image: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Image",
                      "canonicalReference": "excel!Excel.Image:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "image",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#incrementLeft:member(1)",
                  "docComment": "/**\n * Moves the shape horizontally by the specified number of points.\n *\n * @param increment - The increment, in points, the shape will be horizontally moved. A positive value moves the shape to the right and a negative value moves it to the left. If the sheet is right-to-left oriented, this is reversed: positive values will move the shape to the left and negative values will move it to the right.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "incrementLeft(increment: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "increment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "incrementLeft"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#incrementRotation:member(1)",
                  "docComment": "/**\n * Rotates the shape clockwise around the z-axis by the specified number of degrees. Use the `rotation` property to set the absolute rotation of the shape.\n *\n * @param increment - How many degrees the shape will be rotated. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "incrementRotation(increment: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "increment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "incrementRotation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#incrementTop:member(1)",
                  "docComment": "/**\n * Moves the shape vertically by the specified number of points.\n *\n * @param increment - The increment, in points, the shape will be vertically moved. in points. A positive value moves the shape down and a negative value moves it up.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "incrementTop(increment: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "increment",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "incrementTop"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#left:member",
                  "docComment": "/**\n * The distance, in points, from the left side of the shape to the left side of the worksheet. Throws an invalid argument exception when set with a negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#level:member",
                  "docComment": "/**\n * Specifies the level of the specified shape. For example, a level of 0 means that the shape is not part of any groups, a level of 1 means the shape is part of a top-level group, and a level of 2 means the shape is part of a sub-group of the top level.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly level: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "level",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#line:member",
                  "docComment": "/**\n * Returns the line associated with the shape. An error will be thrown if the shape type is not \"Line\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly line: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Line",
                      "canonicalReference": "excel!Excel.Line:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#lineFormat:member",
                  "docComment": "/**\n * Returns the line formatting of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly lineFormat: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineFormat",
                      "canonicalReference": "excel!Excel.ShapeLineFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lineFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#lockAspectRatio:member",
                  "docComment": "/**\n * Specifies if the aspect ratio of this shape is locked.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lockAspectRatio: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "lockAspectRatio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#name:member",
                  "docComment": "/**\n * Specifies the name of the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#parentGroup:member",
                  "docComment": "/**\n * Specifies the parent group of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly parentGroup: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "parentGroup",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#placement:member",
                  "docComment": "/**\n * Represents how the object is attached to the cells below it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "placement: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Placement",
                      "canonicalReference": "excel!Excel.Placement:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "placement",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#rotation:member",
                  "docComment": "/**\n * Specifies the rotation, in degrees, of the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rotation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rotation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#scaleHeight:member(1)",
                  "docComment": "/**\n * Scales the height of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.\n *\n * @param scaleFactor - Specifies the ratio between the height of the shape after you resize it and the current or original height.\n *\n * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\n *\n * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its position.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleHeight(\n            scaleFactor: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleType",
                      "canonicalReference": "excel!Excel.ShapeScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleFrom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleFrom",
                      "canonicalReference": "excel!Excel.ShapeScaleFrom:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "scaleFactor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "scaleType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "scaleFrom",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "scaleHeight"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#scaleWidth:member(1)",
                  "docComment": "/**\n * Scales the width of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current width.\n *\n * @param scaleFactor - Specifies the ratio between the width of the shape after you resize it and the current or original width.\n *\n * @param scaleType - Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\n *\n * @param scaleFrom - Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its position.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleWidth(\n            scaleFactor: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleType",
                      "canonicalReference": "excel!Excel.ShapeScaleType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            scaleFrom?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeScaleFrom",
                      "canonicalReference": "excel!Excel.ShapeScaleFrom:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "scaleFactor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "scaleType",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "scaleFrom",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "scaleWidth"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Shape#setZOrder:member(1)",
                  "docComment": "/**\n * Moves the specified shape up or down the collection's z-order, which shifts it in front of or behind other shapes.\n *\n * @param position - Where to move the shape in the z-order stack relative to the other shapes. See Excel.ShapeZOrder for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setZOrder(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeZOrder",
                      "canonicalReference": "excel!Excel.ShapeZOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setZOrder"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#textFrame:member",
                  "docComment": "/**\n * Returns the text frame object of this shape. Read only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly textFrame: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextFrame",
                      "canonicalReference": "excel!Excel.TextFrame:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textFrame",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#top:member",
                  "docComment": "/**\n * The distance, in points, from the top edge of the shape to the top edge of the worksheet. Throws an invalid argument exception when set with a negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#type:member",
                  "docComment": "/**\n * Returns the type of this shape. See Excel.ShapeType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeType",
                      "canonicalReference": "excel!Excel.ShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#visible:member",
                  "docComment": "/**\n * Specifies if the shape is visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#width:member",
                  "docComment": "/**\n * Specifies the width, in points, of the shape. Throws an invalid argument exception when set with a negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Shape#zOrderPosition:member",
                  "docComment": "/**\n * Returns the position of the specified shape in the z-order, with 0 representing the bottom of the order stack.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly zOrderPosition: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "zOrderPosition",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeAutoSize:enum",
              "docComment": "/**\n * Determines the type of automatic sizing allowed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeAutoSize "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeAutoSize",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeAutoSize.autoSizeMixed:member",
                  "docComment": "/**\n * A combination of automatic sizing schemes are used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeMixed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"autoSizeMixed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeMixed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeAutoSize.autoSizeNone:member",
                  "docComment": "/**\n * No autosizing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeNone = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"autoSizeNone\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeNone",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeAutoSize.autoSizeShapeToFitText:member",
                  "docComment": "/**\n * The shape is adjusted to fit the text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeShapeToFitText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"autoSizeShapeToFitText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeShapeToFitText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeAutoSize.autoSizeTextToFitShape:member",
                  "docComment": "/**\n * The text is adjusted to fit the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeTextToFitShape = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"autoSizeTextToFitShape\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeTextToFitShape",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ShapeCollection:interface",
              "docComment": "/**\n * Represents a collection of all the shapes in the worksheet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#_GetItem:member(1)",
                  "docComment": "/**\n * Returns a shape identified by the shape id.\n *\n * @param shapeId - The identifier for the shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "_GetItem(shapeId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "shapeId",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "_GetItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#addGeometricShape:member(1)",
                  "docComment": "/**\n * Adds a geometric shape to the worksheet. Returns a Shape object that represents the new shape.\n *\n * @param geometricShapeType - Represents the type of the geometric shape. See Excel.GeometricShapeType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addGeometricShape(geometricShapeType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GeometricShapeType",
                      "canonicalReference": "excel!Excel.GeometricShapeType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "geometricShapeType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addGeometricShape"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#addGroup:member(1)",
                  "docComment": "/**\n * Groups a subset of shapes in this collection's worksheet. Returns a Shape object that represents the new group of shapes.\n *\n * @param values - An array of shape ID or shape objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addGroup(values: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "addGroup"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#addImage:member(1)",
                  "docComment": "/**\n * Creates an image from a base64-encoded string and adds it to the worksheet. Returns the Shape object that represents the new image.\n *\n * @param base64ImageString - A base64-encoded string representing an image in either JPEG or PNG format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addImage(base64ImageString: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "base64ImageString",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addImage"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#addLine:member(1)",
                  "docComment": "/**\n * Adds a line to worksheet. Returns a Shape object that represents the new line.\n *\n * @param startLeft - The distance, in points, from the start of the line to the left side of the worksheet.\n *\n * @param startTop - The distance, in points, from the start of the line to the top of the worksheet.\n *\n * @param endLeft - The distance, in points, from the end of the line to the left of the worksheet.\n *\n * @param endTop - The distance, in points, from the end of the line to the top of the worksheet.\n *\n * @param connectorType - Represents the connector type. See Excel.ConnectorType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addLine(\n            startLeft: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            startTop: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            endLeft: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            endTop: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            connectorType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConnectorType",
                      "canonicalReference": "excel!Excel.ConnectorType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "startLeft",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "startTop",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "endLeft",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "endTop",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    },
                    {
                      "parameterName": "connectorType",
                      "parameterTypeTokenRange": {
                        "startIndex": 9,
                        "endIndex": 11
                      }
                    }
                  ],
                  "name": "addLine"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#addTextBox:member(1)",
                  "docComment": "/**\n * Adds a text box to the worksheet with the provided text as the content. Returns a Shape object that represents the new text box.\n *\n * @param text - Represents the text that will be shown in the created text box.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTextBox(text?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "addTextBox"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of shapes in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a shape using its Name or ID.\n *\n * @param key - Name or ID of the shape to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a shape using its position in the collection.\n *\n * @param index - The zero-based index of the shape to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ShapeFill:interface",
              "docComment": "/**\n * Represents the fill formatting of a shape object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeFill "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFill",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeFill#clear:member(1)",
                  "docComment": "/**\n * Clears the fill formatting of this shape.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFill#foregroundColor:member",
                  "docComment": "/**\n * Represents the shape fill foreground color in HTML color format, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\")\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "foregroundColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "foregroundColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeFill#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeFill#setSolidColor:member(1)",
                  "docComment": "/**\n * Sets the fill formatting of the shape to a uniform color. This changes the fill type to \"Solid\".\n *\n * @param color - A string that represents the fill color in HTML color format, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSolidColor(color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "setSolidColor"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFill#transparency:member",
                  "docComment": "/**\n * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns null if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "transparency: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "transparency",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFill#type:member",
                  "docComment": "/**\n * Returns the fill type of the shape. See Excel.ShapeFillType for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFillType",
                      "canonicalReference": "excel!Excel.ShapeFillType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeFillType:enum",
              "docComment": "/**\n * Specifies a shape's fill type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeFillType "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFillType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFillType.gradient:member",
                  "docComment": "/**\n * Gradient fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gradient = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"gradient\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "gradient",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFillType.mixed:member",
                  "docComment": "/**\n * Mixed fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mixed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mixed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mixed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFillType.noFill:member",
                  "docComment": "/**\n * No fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noFill = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"noFill\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "noFill",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFillType.pattern:member",
                  "docComment": "/**\n * Pattern fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pattern = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pattern\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pattern",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFillType.pictureAndTexture:member",
                  "docComment": "/**\n * Picture and texture fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pictureAndTexture = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pictureAndTexture\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pictureAndTexture",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFillType.solid:member",
                  "docComment": "/**\n * Solid fill.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "solid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"solid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "solid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ShapeFont:interface",
              "docComment": "/**\n * Represents the font attributes, such as font name, font size, and color, for a shape's TextRange object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeFont "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFont",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFont#bold:member",
                  "docComment": "/**\n * Represents the bold status of font. Returns null the TextRange includes both bold and non-bold text fragments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bold: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bold",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFont#color:member",
                  "docComment": "/**\n * HTML color code representation of the text color (e.g., \"#FF0000\" represents red). Returns null if the TextRange includes text fragments with different colors.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFont#italic:member",
                  "docComment": "/**\n * Represents the italic status of font. Returns null if the TextRange includes both italic and non-italic text fragments.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "italic: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "italic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeFont#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFont#name:member",
                  "docComment": "/**\n * Represents font name (e.g., \"Calibri\"). If the text is Complex Script or East Asian language, this is the corresponding font name; otherwise it is the Latin font name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFont#size:member",
                  "docComment": "/**\n * Represents font size in points (e.g., 11). Returns null if the TextRange includes text fragments with different font sizes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "size: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "size",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeFont#underline:member",
                  "docComment": "/**\n * Type of underline applied to the font. Returns null if the TextRange includes text fragments with different underline styles. See Excel.ShapeFontUnderlineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "underline: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFontUnderlineStyle",
                      "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "underline",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle:enum",
              "docComment": "/**\n * The type of underline applied to a font.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeFontUnderlineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeFontUnderlineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dashHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashHeavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashHeavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashHeavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dashLong:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashLong = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashLong\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashLong",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dashLongHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashLongHeavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashLongHeavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashLongHeavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dotDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dotDash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dotDashHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDashHeavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dotDashHeavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDashHeavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dotDotDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDotDash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dotDotDash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDotDash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dotDotDashHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotDotDashHeavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dotDotDashHeavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotDotDashHeavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dotted:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dotted = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dotted\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dotted",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.dottedHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dottedHeavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dottedHeavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dottedHeavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.double:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "double = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"double\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "double",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.heavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "heavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"heavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "heavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.single:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"single\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.wavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.wavyDouble:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wavyDouble = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wavyDouble\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wavyDouble",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeFontUnderlineStyle.wavyHeavy:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wavyHeavy = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wavyHeavy\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wavyHeavy",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ShapeGroup:interface",
              "docComment": "/**\n * Represents a shape group inside a worksheet. To get the corresponding Shape object, use `ShapeGroup.shape`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeGroup "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeGroup",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeGroup#id:member",
                  "docComment": "/**\n * Specifies the shape identifier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeGroup#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeGroup#shape:member",
                  "docComment": "/**\n * Returns the Shape object associated with the group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Shape",
                      "canonicalReference": "excel!Excel.Shape:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeGroup#shapes:member",
                  "docComment": "/**\n * Returns the collection of Shape objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly shapes: "
                    },
                    {
                      "kind": "Reference",
                      "text": "GroupShapeCollection",
                      "canonicalReference": "excel!Excel.GroupShapeCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shapes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeGroup#ungroup:member(1)",
                  "docComment": "/**\n * Ungroups any grouped shapes in the specified shape group.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ungroup(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "ungroup"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeLineDashStyle:enum",
              "docComment": "/**\n * The dash style for a line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeLineDashStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeLineDashStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.dash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.dashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.dashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashDotDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dashDotDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.longDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "longDash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"longDash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "longDash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.longDashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "longDashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"longDashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "longDashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.longDashDotDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "longDashDotDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"longDashDotDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "longDashDotDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.roundDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "roundDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"roundDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "roundDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.solid:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "solid = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"solid\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "solid",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.squareDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "squareDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"squareDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "squareDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.systemDash:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "systemDash = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"systemDash\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "systemDash",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.systemDashDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "systemDashDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"systemDashDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "systemDashDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineDashStyle.systemDot:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "systemDot = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"systemDot\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "systemDot",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ShapeLineFormat:interface",
              "docComment": "/**\n * Represents the line formatting for the shape object. For images and geometric shapes, line formatting represents the border of the shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShapeLineFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeLineFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#color:member",
                  "docComment": "/**\n * Represents the line color in HTML color format, of the form #RRGGBB (e.g., \"FFA500\") or as a named HTML color (e.g., \"orange\").\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#dashStyle:member",
                  "docComment": "/**\n * Represents the line style of the shape. Returns null when the line is not visible or there are inconsistent dash styles. See Excel.ShapeLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dashStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineDashStyle",
                      "canonicalReference": "excel!Excel.ShapeLineDashStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dashStyle",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#style:member",
                  "docComment": "/**\n * Represents the line style of the shape. Returns null when the line is not visible or there are inconsistent styles. See Excel.ShapeLineStyle for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeLineStyle",
                      "canonicalReference": "excel!Excel.ShapeLineStyle:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#transparency:member",
                  "docComment": "/**\n * Represents the degree of transparency of the specified line as a value from 0.0 (opaque) through 1.0 (clear). Returns null when the shape has inconsistent transparencies.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "transparency: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "transparency",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#visible:member",
                  "docComment": "/**\n * Specifies if the line formatting of a shape element is visible. Returns null when the shape has inconsistent visibilities.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShapeLineFormat#weight:member",
                  "docComment": "/**\n * Represents the weight of the line, in points. Returns null when the line is not visible or there are inconsistent line weights.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeLineStyle:enum",
              "docComment": "/**\n * The style for a line.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeLineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeLineStyle",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineStyle.single:member",
                  "docComment": "/**\n * Single line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "single = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"single\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "single",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineStyle.thickBetweenThin:member",
                  "docComment": "/**\n * Thick line with a thin line on each side.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thickBetweenThin = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thickBetweenThin\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thickBetweenThin",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineStyle.thickThin:member",
                  "docComment": "/**\n * Thick line next to thin line. For horizontal lines, the thick line is above the thin line. For vertical lines, the thick line is to the left of the thin line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thickThin = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thickThin\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thickThin",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineStyle.thinThick:member",
                  "docComment": "/**\n * Thick line next to thin line. For horizontal lines, the thick line is below the thin line. For vertical lines, the thick line is to the right of the thin line.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thinThick = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thinThick\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thinThick",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeLineStyle.thinThin:member",
                  "docComment": "/**\n * Two thin lines.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thinThin = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thinThin\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thinThin",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeScaleFrom:enum",
              "docComment": "/**\n * Specifies which part of the shape retains its position when the shape is scaled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeScaleFrom "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeScaleFrom",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeScaleFrom.scaleFromBottomRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleFromBottomRight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"scaleFromBottomRight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleFromBottomRight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeScaleFrom.scaleFromMiddle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleFromMiddle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"scaleFromMiddle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleFromMiddle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeScaleFrom.scaleFromTopLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "scaleFromTopLeft = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"scaleFromTopLeft\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "scaleFromTopLeft",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeScaleType:enum",
              "docComment": "/**\n * Specifies whether the shape is scaled relative to its original or current size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeScaleType "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeScaleType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeScaleType.currentSize:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "currentSize = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"currentSize\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "currentSize",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeScaleType.originalSize:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "originalSize = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"originalSize\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "originalSize",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment:enum",
              "docComment": "/**\n * Specifies the horizontal alignment for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextHorizontalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextHorizontalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"distributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justify\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.justifyLow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justifyLow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justifyLow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justifyLow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.left:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"left\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.right:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "right = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"right\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "right",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment.thaiDistributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "thaiDistributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"thaiDistributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "thaiDistributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeTextHorizontalOverflow:enum",
              "docComment": "/**\n * Specifies the horizontal overflow for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextHorizontalOverflow "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextHorizontalOverflow",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalOverflow.clip:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clip = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"clip\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "clip",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextHorizontalOverflow.overflow:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overflow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"overflow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overflow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeTextOrientation:enum",
              "docComment": "/**\n * Specifies the orientation for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextOrientation "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextOrientation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.eastAsianVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "eastAsianVertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"eastAsianVertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "eastAsianVertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.horizontal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"horizontal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.mongolianVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mongolianVertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"mongolianVertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "mongolianVertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.vertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"vertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.vertical270:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "vertical270 = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"vertical270\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "vertical270",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.wordArtVertical:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wordArtVertical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wordArtVertical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wordArtVertical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextOrientation.wordArtVerticalRTL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wordArtVerticalRTL = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"wordArtVerticalRTL\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wordArtVerticalRTL",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeTextReadingOrder:enum",
              "docComment": "/**\n * Specifies the reading order for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextReadingOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextReadingOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextReadingOrder.leftToRight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftToRight = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"leftToRight\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftToRight",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextReadingOrder.rightToLeft:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightToLeft = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rightToLeft\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightToLeft",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment:enum",
              "docComment": "/**\n * Specifies the vertical alignment for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextVerticalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextVerticalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"distributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment.justified:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justified = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justified\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justified",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment.middle:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "middle = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"middle\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "middle",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeTextVerticalOverflow:enum",
              "docComment": "/**\n * Specifies the vertical overflow for the text frame in a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeTextVerticalOverflow "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeTextVerticalOverflow",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalOverflow.clip:member",
                  "docComment": "/**\n * Hide text that does not fit vertically within the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clip = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"clip\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "clip",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalOverflow.ellipsis:member",
                  "docComment": "/**\n * Hide text that does not fit vertically within the text frame, and add an ellipsis (...) at the end of the visible text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ellipsis = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ellipsis\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ellipsis",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeTextVerticalOverflow.overflow:member",
                  "docComment": "/**\n * Allow text to overflow the text frame vertically (can be from the top, bottom, or both depending on the text alignment).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overflow = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"overflow\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "overflow",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeType:enum",
              "docComment": "/**\n * Specifies the type of a shape.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeType "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeType.geometricShape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "geometricShape = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"geometricShape\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "geometricShape",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeType.group:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "group = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"group\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "group",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeType.image:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "image = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"image\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "image",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeType.line:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "line = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"line\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "line",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeType.unsupported:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unsupported = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unsupported\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unsupported",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShapeZOrder:enum",
              "docComment": "/**\n * Specifies where in the z-order a shape should be moved relative to other shapes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShapeZOrder "
                }
              ],
              "releaseTag": "Public",
              "name": "ShapeZOrder",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeZOrder.bringForward:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bringForward = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bringForward\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bringForward",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeZOrder.bringToFront:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bringToFront = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bringToFront\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bringToFront",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeZOrder.sendBackward:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sendBackward = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sendBackward\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sendBackward",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShapeZOrder.sendToBack:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sendToBack = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sendToBack\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sendToBack",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SheetVisibility:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SheetVisibility "
                }
              ],
              "releaseTag": "Public",
              "name": "SheetVisibility",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SheetVisibility.hidden:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hidden = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"hidden\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hidden",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SheetVisibility.veryHidden:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "veryHidden = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"veryHidden\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "veryHidden",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SheetVisibility.visible:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"visible\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.ShowAsCalculation:enum",
              "docComment": "/**\n * The ShowAs Calculation function for the Data Pivot Field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum ShowAsCalculation "
                }
              ],
              "releaseTag": "Public",
              "name": "ShowAsCalculation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.differenceFrom:member",
                  "docComment": "/**\n * Difference from the specified Base Field and Base Item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "differenceFrom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"differenceFrom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "differenceFrom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.index:member",
                  "docComment": "/**\n * Calculates the values as follows: ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "index = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"index\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.none:member",
                  "docComment": "/**\n * No calculation is applied.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentDifferenceFrom:member",
                  "docComment": "/**\n * Difference from the specified Base Field and Base Item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentDifferenceFrom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentDifferenceFrom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentDifferenceFrom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOf:member",
                  "docComment": "/**\n * Percent of the specified Base Field and Base Item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOf = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOf\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOf",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOfColumnTotal:member",
                  "docComment": "/**\n * Percent of the column total.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfColumnTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOfColumnTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfColumnTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOfGrandTotal:member",
                  "docComment": "/**\n * Percent of the grand total.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfGrandTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOfGrandTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfGrandTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOfParentColumnTotal:member",
                  "docComment": "/**\n * Percent of the column total for the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfParentColumnTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOfParentColumnTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfParentColumnTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOfParentRowTotal:member",
                  "docComment": "/**\n * Percent of the row total for the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfParentRowTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOfParentRowTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfParentRowTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOfParentTotal:member",
                  "docComment": "/**\n * Percent of the grand total for the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfParentTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOfParentTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfParentTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentOfRowTotal:member",
                  "docComment": "/**\n * Percent of the row total.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentOfRowTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentOfRowTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentOfRowTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.percentRunningTotal:member",
                  "docComment": "/**\n * Percent Running Total of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "percentRunningTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"percentRunningTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "percentRunningTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.rankAscending:member",
                  "docComment": "/**\n * Ascending Rank of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rankAscending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rankAscending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rankAscending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.rankDecending:member",
                  "docComment": "/**\n * Descending Rank of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rankDecending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rankDecending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rankDecending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.runningTotal:member",
                  "docComment": "/**\n * Running Total of the specified Base Field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "runningTotal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"runningTotal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "runningTotal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.ShowAsCalculation.unknown:member",
                  "docComment": "/**\n * Calculation is unknown or unsupported.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unknown = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"unknown\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "unknown",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.ShowAsRule:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ShowAsRule "
                }
              ],
              "releaseTag": "Public",
              "name": "ShowAsRule",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShowAsRule#baseField:member",
                  "docComment": "/**\n * The base PivotField to base the ShowAs calculation, if applicable based on the ShowAsCalculation type, else null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "baseField?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!Excel.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "baseField",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShowAsRule#baseItem:member",
                  "docComment": "/**\n * The base Item to base the ShowAs calculation on, if applicable based on the ShowAsCalculation type, else null.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "baseItem?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotItem",
                      "canonicalReference": "excel!Excel.PivotItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "baseItem",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.ShowAsRule#calculation:member",
                  "docComment": "/**\n * The ShowAs Calculation to use for the Data PivotField. See Excel.ShowAsCalculation for Details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShowAsCalculation",
                      "canonicalReference": "excel!Excel.ShowAsCalculation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Slicer:interface",
              "docComment": "/**\n * Represents a slicer object in the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Slicer "
                }
              ],
              "releaseTag": "Public",
              "name": "Slicer",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#caption:member",
                  "docComment": "/**\n * Represents the caption of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "caption: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "caption",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Slicer#clearFilters:member(1)",
                  "docComment": "/**\n * Clears all the filters currently applied on the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearFilters(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearFilters"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Slicer#delete:member(1)",
                  "docComment": "/**\n * Deletes the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Slicer#getSelectedItems:member(1)",
                  "docComment": "/**\n * Returns an array of selected items' keys.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedItems(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedItems"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#height:member",
                  "docComment": "/**\n * Represents the height, in points, of the slicer. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "height: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "height",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#id:member",
                  "docComment": "/**\n * Represents the unique id of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#isFilterCleared:member",
                  "docComment": "/**\n * True if all filters currently applied on the slicer are cleared.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly isFilterCleared: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isFilterCleared",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#left:member",
                  "docComment": "/**\n * Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "left: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "left",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Slicer#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#name:member",
                  "docComment": "/**\n * Represents the name of slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Slicer#selectItems:member(1)",
                  "docComment": "/**\n * Selects slicer items based on their keys. The previous selections are cleared. All items will be selected by default if the array is empty.\n *\n * @param items - Optional. The specified slicer item names to be selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "selectItems(items?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "items",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "selectItems"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#slicerItems:member",
                  "docComment": "/**\n * Represents the collection of SlicerItems that are part of the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly slicerItems: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerItemCollection",
                      "canonicalReference": "excel!Excel.SlicerItemCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "slicerItems",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#sortBy:member",
                  "docComment": "/**\n * Represents the sort order of the items in the slicer. Possible values are: \"DataSourceOrder\", \"Ascending\", \"Descending\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortBy: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerSortType",
                      "canonicalReference": "excel!Excel.SlicerSortType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sortBy",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#style:member",
                  "docComment": "/**\n * Constant value that represents the Slicer style. Possible values are: \"SlicerStyleLight1\" through \"SlicerStyleLight6\", \"TableStyleOther1\" through \"TableStyleOther2\", \"SlicerStyleDark1\" through \"SlicerStyleDark6\". A custom user-defined style present in the workbook can also be specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#top:member",
                  "docComment": "/**\n * Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#width:member",
                  "docComment": "/**\n * Represents the width, in points, of the slicer. Throws an \"The argument is invalid or missing or has an incorrect format.\" exception when set with negative value or zero as input.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "width: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "width",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Slicer#worksheet:member",
                  "docComment": "/**\n * Represents the worksheet containing the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SlicerCollection:interface",
              "docComment": "/**\n * Represents a collection of all the slicer objects on the workbook or a worksheet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new slicer to the workbook.\n *\n * @param slicerSource - The data source that the new slicer will be based on. It can be a PivotTable object, a Table object or a string. When a PivotTable object is passed, the data source is the source of the PivotTable object. When a Table object is passed, the data source is the Table object. When a string is passed, it is interpreted as the name/id of a PivotTable/Table.\n *\n * @param sourceField - The field in the data source to filter by. It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.\n *\n * @param slicerDestination - Optional. The worksheet where the new slicer will be created in. It can be a Worksheet object or the name/id of a worksheet. This parameter can be omitted if the slicer collection is retrieved from worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            slicerSource: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTable",
                      "canonicalReference": "excel!Excel.PivotTable:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            sourceField: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotField",
                      "canonicalReference": "excel!Excel.PivotField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | number | "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!Excel.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            slicerDestination?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!Excel.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "slicerSource",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "sourceField",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 10
                      }
                    },
                    {
                      "parameterName": "slicerDestination",
                      "parameterTypeTokenRange": {
                        "startIndex": 11,
                        "endIndex": 14
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of slicers in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a slicer object using its name or id.\n *\n * @param key - The name or id of the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!Excel.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a slicer based on its position in the collection.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!Excel.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a slicer using its name or id. If the slicer does not exist, will return a null object.\n *\n * @param key - Name or Id of the slicer to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!Excel.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SlicerItem:interface",
              "docComment": "/**\n * Represents a slicer item in a slicer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerItem "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerItem",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SlicerItem#hasData:member",
                  "docComment": "/**\n * True if the slicer item has data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly hasData: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hasData",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SlicerItem#isSelected:member",
                  "docComment": "/**\n * True if the slicer item is selected. Setting this value will not clear other SlicerItems' selected state. By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isSelected: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isSelected",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SlicerItem#key:member",
                  "docComment": "/**\n * Represents the unique value representing the slicer item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "key",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerItem#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SlicerItem#name:member",
                  "docComment": "/**\n * Represents the title displayed in the UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SlicerItemCollection:interface",
              "docComment": "/**\n * Represents a collection of all the slicer item objects on the slicer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerItemCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerItemCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerItemCollection#getCount:member(1)",
                  "docComment": "/**\n * Returns the number of slicer items in the slicer.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerItemCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a slicer item object using its key or name.\n *\n * @param key - The key or name of the slicer item.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerItem",
                      "canonicalReference": "excel!Excel.SlicerItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerItemCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a slicer item based on its position in the collection.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerItem",
                      "canonicalReference": "excel!Excel.SlicerItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerItemCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a slicer item using its key or name. If the slicer item does not exist, will return a null object.\n *\n * @param key - Key or name of the slicer to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerItem",
                      "canonicalReference": "excel!Excel.SlicerItem:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerItemCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SlicerSortType:enum",
              "docComment": "/**\n * Specifies the slicer sort behavior for Slicer.sortBy API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SlicerSortType "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerSortType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SlicerSortType.ascending:member",
                  "docComment": "/**\n * Sort slicer items in ascending order by item captions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ascending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ascending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ascending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SlicerSortType.dataSourceOrder:member",
                  "docComment": "/**\n * Sort slicer items in the order provided by the data source.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataSourceOrder = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dataSourceOrder\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataSourceOrder",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SlicerSortType.descending:member",
                  "docComment": "/**\n * Sort slicer items in descending order by item captions.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "descending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"descending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "descending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SlicerStyle:interface",
              "docComment": "/**\n * Represents a Slicer Style, which defines style elements by region of the slicer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the SlicerStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this SlicerStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!Excel.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyle#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SlicerStyle#name:member",
                  "docComment": "/**\n * Gets the name of the SlicerStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SlicerStyle#readOnly:member",
                  "docComment": "/**\n * Specifies if this SlicerStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly readOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SlicerStyleCollection:interface",
              "docComment": "/**\n * Represents a collection of SlicerStyle objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SlicerStyleCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "SlicerStyleCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#add:member(1)",
                  "docComment": "/**\n * Creates a blank SlicerStyle with the specified name.\n *\n * @param name - The unique name for the new SlicerStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!Excel.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of slicer styles in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#getDefault:member(1)",
                  "docComment": "/**\n * Gets the default SlicerStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefault(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!Excel.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefault"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a SlicerStyle by name.\n *\n * @param name - Name of the SlicerStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!Excel.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a SlicerStyle by name. If the SlicerStyle does not exist, will return a null object.\n *\n * @param name - Name of the SlicerStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!Excel.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.SlicerStyleCollection#setDefault:member(1)",
                  "docComment": "/**\n * Sets the default SlicerStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The SlicerStyle object or name of the SlicerStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefault(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyle",
                      "canonicalReference": "excel!Excel.SlicerStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SortBy:enum",
              "docComment": "/**\n * Represents the sort direction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortBy "
                }
              ],
              "releaseTag": "Public",
              "name": "SortBy",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortBy.ascending:member",
                  "docComment": "/**\n * Ascending sort. Smallest to largest or A to Z.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ascending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ascending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ascending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortBy.descending:member",
                  "docComment": "/**\n * Descending sort. Largest to smallest or Z to A.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "descending = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"descending\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "descending",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SortDataOption:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortDataOption "
                }
              ],
              "releaseTag": "Public",
              "name": "SortDataOption",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortDataOption.normal:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "normal = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"normal\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "normal",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortDataOption.textAsNumber:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textAsNumber = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"textAsNumber\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textAsNumber",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.SortField:interface",
              "docComment": "/**\n * Represents a condition in a sorting operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface SortField "
                }
              ],
              "releaseTag": "Public",
              "name": "SortField",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#ascending:member",
                  "docComment": "/**\n * Specifies if the sorting is done in an ascending fashion.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ascending?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ascending",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#color:member",
                  "docComment": "/**\n * Specifies the color that is the target of the condition if the sorting is on font or cell color.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#dataOption:member",
                  "docComment": "/**\n * Represents additional sorting options for this field.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataOption?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortDataOption",
                      "canonicalReference": "excel!Excel.SortDataOption:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataOption",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#icon:member",
                  "docComment": "/**\n * Specifies the icon that is the target of the condition if the sorting is on the cell's icon.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Icon",
                      "canonicalReference": "excel!Excel.Icon:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#key:member",
                  "docComment": "/**\n * Specifies the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "key: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "key",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#sortOn:member",
                  "docComment": "/**\n * Specifies the type of sorting of this condition.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sortOn?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortOn",
                      "canonicalReference": "excel!Excel.SortOn:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sortOn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.SortField#subField:member",
                  "docComment": "/**\n * Specifies the subfield that is the target property name of a rich value to sort on.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "subField?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "subField",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SortMethod:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortMethod "
                }
              ],
              "releaseTag": "Public",
              "name": "SortMethod",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortMethod.pinYin:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pinYin = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"pinYin\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pinYin",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortMethod.strokeCount:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "strokeCount = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"strokeCount\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "strokeCount",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SortOn:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortOn "
                }
              ],
              "releaseTag": "Public",
              "name": "SortOn",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortOn.cellColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cellColor = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cellColor\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "cellColor",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortOn.fontColor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "fontColor = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fontColor\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fontColor",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortOn.icon:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "icon = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"icon\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "icon",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortOn.value:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"value\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "value",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SortOrientation:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SortOrientation "
                }
              ],
              "releaseTag": "Public",
              "name": "SortOrientation",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortOrientation.columns:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "columns = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"columns\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SortOrientation.rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"rows\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SpecialCellType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SpecialCellType "
                }
              ],
              "releaseTag": "Public",
              "name": "SpecialCellType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.blanks:member",
                  "docComment": "/**\n * Cells with no content.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blanks = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"blanks\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "blanks",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.conditionalFormats:member",
                  "docComment": "/**\n * All cells with conditional formats\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "conditionalFormats = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"conditionalFormats\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "conditionalFormats",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.constants:member",
                  "docComment": "/**\n * Cells containing constants.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constants = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"constants\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "constants",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.dataValidations:member",
                  "docComment": "/**\n * Cells having validation criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dataValidations = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dataValidations\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataValidations",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.formulas:member",
                  "docComment": "/**\n * Cells containing formulas.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulas = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"formulas\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulas",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.sameConditionalFormat:member",
                  "docComment": "/**\n * Cells having the same conditional format as the first cell in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sameConditionalFormat = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sameConditionalFormat\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sameConditionalFormat",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.sameDataValidation:member",
                  "docComment": "/**\n * Cells having the same data validation criteria as the first cell in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sameDataValidation = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"sameDataValidation\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sameDataValidation",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellType.visible:member",
                  "docComment": "/**\n * Cells that are visible.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visible = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"visible\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visible",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SpecialCellValueType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SpecialCellValueType "
                }
              ],
              "releaseTag": "Public",
              "name": "SpecialCellValueType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.all:member",
                  "docComment": "/**\n * Cells that have errors, true/false, numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "all = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"all\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "all",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errors:member",
                  "docComment": "/**\n * Cells that have errors.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errors = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errors\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errors",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errorsLogical:member",
                  "docComment": "/**\n * Cells that have errors, or a true/false value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsLogical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errorsLogical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsLogical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errorsLogicalNumber:member",
                  "docComment": "/**\n * Cells that have errors, true/false, or a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsLogicalNumber = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errorsLogicalNumber\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsLogicalNumber",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errorsLogicalText:member",
                  "docComment": "/**\n * Cells that have errors, true/false, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsLogicalText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errorsLogicalText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsLogicalText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errorsNumbers:member",
                  "docComment": "/**\n * Cells that have errors, or a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsNumbers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errorsNumbers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsNumbers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errorsNumberText:member",
                  "docComment": "/**\n * Cells that have errors, numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsNumberText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errorsNumberText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsNumberText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.errorsText:member",
                  "docComment": "/**\n * Cells that have errors, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "errorsText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"errorsText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "errorsText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.logical:member",
                  "docComment": "/**\n * Cells that have a true/false value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logical = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"logical\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logical",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.logicalNumbers:member",
                  "docComment": "/**\n * Cells that have a true/false, or a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logicalNumbers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"logicalNumbers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logicalNumbers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.logicalNumbersText:member",
                  "docComment": "/**\n * Cells that have a true/false, numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logicalNumbersText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"logicalNumbersText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logicalNumbersText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.logicalText:member",
                  "docComment": "/**\n * Cells that have a true/false, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logicalText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"logicalText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "logicalText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.numbers:member",
                  "docComment": "/**\n * Cells that have a numeric value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numbers = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"numbers\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numbers",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.numbersText:member",
                  "docComment": "/**\n * Cells that have a numeric, or a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numbersText = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"numbersText\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numbersText",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SpecialCellValueType.text:member",
                  "docComment": "/**\n * Cells that have a string value.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"text\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Style:interface",
              "docComment": "/**\n * An object encapsulating a style's format and other properties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Style "
                }
              ],
              "releaseTag": "Public",
              "name": "Style",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#autoIndent:member",
                  "docComment": "/**\n * Specifies if text is automatically indented when the text alignment in a cell is set to equal distribution.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoIndent: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoIndent",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#borders:member",
                  "docComment": "/**\n * A Border collection of four Border objects that represent the style of the four borders.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly borders: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeBorderCollection",
                      "canonicalReference": "excel!Excel.RangeBorderCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "borders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#builtIn:member",
                  "docComment": "/**\n * Specifies if the style is a built-in style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly builtIn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "builtIn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Style#delete:member(1)",
                  "docComment": "/**\n * Deletes this style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#fill:member",
                  "docComment": "/**\n * The Fill of the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fill: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFill",
                      "canonicalReference": "excel!Excel.RangeFill:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fill",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#font:member",
                  "docComment": "/**\n * A Font object that represents the font of the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeFont",
                      "canonicalReference": "excel!Excel.RangeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#formulaHidden:member",
                  "docComment": "/**\n * Specifies if the formula will be hidden when the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "formulaHidden: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "formulaHidden",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#horizontalAlignment:member",
                  "docComment": "/**\n * Represents the horizontal alignment for the style. See Excel.HorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "HorizontalAlignment",
                      "canonicalReference": "excel!Excel.HorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#includeAlignment:member",
                  "docComment": "/**\n * Specifies if the style includes the AutoIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel, and TextOrientation properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "includeAlignment: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "includeAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#includeBorder:member",
                  "docComment": "/**\n * Specifies if the style includes the Color, ColorIndex, LineStyle, and Weight border properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "includeBorder: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "includeBorder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#includeFont:member",
                  "docComment": "/**\n * Specifies if the style includes the Background, Bold, Color, ColorIndex, FontStyle, Italic, Name, Size, Strikethrough, Subscript, Superscript, and Underline font properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "includeFont: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "includeFont",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#includeNumber:member",
                  "docComment": "/**\n * Specifies if the style includes the NumberFormat property.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "includeNumber: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "includeNumber",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#includePatterns:member",
                  "docComment": "/**\n * Specifies if the style includes the Color, ColorIndex, InvertIfNegative, Pattern, PatternColor, and PatternColorIndex interior properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "includePatterns: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "includePatterns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#includeProtection:member",
                  "docComment": "/**\n * Specifies if the style includes the FormulaHidden and Locked protection properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "includeProtection: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "includeProtection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#indentLevel:member",
                  "docComment": "/**\n * An integer from 0 to 250 that indicates the indent level for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "indentLevel: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "indentLevel",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Style#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#locked:member",
                  "docComment": "/**\n * Specifies if the object is locked when the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "locked: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "locked",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#name:member",
                  "docComment": "/**\n * The name of the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#numberFormat:member",
                  "docComment": "/**\n * The format code of the number format for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormat: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormat",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#numberFormatLocal:member",
                  "docComment": "/**\n * The localized format code of the number format for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "numberFormatLocal: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "numberFormatLocal",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#readingOrder:member",
                  "docComment": "/**\n * The reading order for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readingOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadingOrder",
                      "canonicalReference": "excel!Excel.ReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readingOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#shrinkToFit:member",
                  "docComment": "/**\n * Specifies if text automatically shrinks to fit in the available column width.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "shrinkToFit: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shrinkToFit",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#textOrientation:member",
                  "docComment": "/**\n * The text orientation for the style.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textOrientation: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textOrientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#verticalAlignment:member",
                  "docComment": "/**\n * Specifies the vertical alignment for the style. See Excel.VerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "VerticalAlignment",
                      "canonicalReference": "excel!Excel.VerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Style#wrapText:member",
                  "docComment": "/**\n * Specifies if Excel wraps the text in the object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wrapText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "wrapText",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.StyleCollection:interface",
              "docComment": "/**\n * Represents a collection of all the styles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface StyleCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "StyleCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.StyleCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new style to the collection.\n *\n * @param name - Name of the style to be added.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.StyleCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of styles in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.StyleCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a style by name.\n *\n * @param name - Name of the style to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Style",
                      "canonicalReference": "excel!Excel.Style:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.StyleCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a style based on its position in the collection.\n *\n * @param index - Index value of the style object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Style",
                      "canonicalReference": "excel!Excel.Style:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.StyleCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.SubtotalLocationType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum SubtotalLocationType "
                }
              ],
              "releaseTag": "Public",
              "name": "SubtotalLocationType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SubtotalLocationType.atBottom:member",
                  "docComment": "/**\n * Subtotals are at the bottom.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "atBottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"atBottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "atBottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SubtotalLocationType.atTop:member",
                  "docComment": "/**\n * Subtotals are at the top.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "atTop = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"atTop\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "atTop",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.SubtotalLocationType.off:member",
                  "docComment": "/**\n * Subtotals are off.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "off = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"off\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "off",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Subtotals:interface",
              "docComment": "/**\n * Subtotals for the Pivot Field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Subtotals "
                }
              ],
              "releaseTag": "Public",
              "name": "Subtotals",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#automatic:member",
                  "docComment": "/**\n * If Automatic is set to true, then all other values will be ignored when setting the Subtotals.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "automatic?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "automatic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#average:member",
                  "docComment": "/**\n * Average\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "average?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "average",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#count:member",
                  "docComment": "/**\n * Count\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#countNumbers:member",
                  "docComment": "/**\n * CountNumbers\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "countNumbers?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "countNumbers",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#max:member",
                  "docComment": "/**\n * Max\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "max?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "max",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#min:member",
                  "docComment": "/**\n * Min\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "min?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "min",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#product:member",
                  "docComment": "/**\n * Product\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "product?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "product",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#standardDeviation:member",
                  "docComment": "/**\n * StandardDeviation\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviation?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#standardDeviationP:member",
                  "docComment": "/**\n * StandardDeviationP\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardDeviationP?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardDeviationP",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#sum:member",
                  "docComment": "/**\n * Sum\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sum?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sum",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#variance:member",
                  "docComment": "/**\n * Variance\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "variance?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "variance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Subtotals#varianceP:member",
                  "docComment": "/**\n * VarianceP\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "varianceP?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "varianceP",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Table:interface",
              "docComment": "/**\n * Represents an Excel table. To learn more about the table object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables | Work with tables using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Table "
                }
              ],
              "releaseTag": "Public",
              "name": "Table",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#autoFilter:member",
                  "docComment": "/**\n * Represents the AutoFilter object of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly autoFilter: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AutoFilter",
                      "canonicalReference": "excel!Excel.AutoFilter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoFilter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#clearFilters:member(1)",
                  "docComment": "/**\n * Clears all the filters currently applied on the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clearFilters(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clearFilters"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#columns:member",
                  "docComment": "/**\n * Represents a collection of all the columns in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly columns: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumnCollection",
                      "canonicalReference": "excel!Excel.TableColumnCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "columns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#convertToRange:member(1)",
                  "docComment": "/**\n * Converts the table into a normal range of cells. All data is preserved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "convertToRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "convertToRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#delete:member(1)",
                  "docComment": "/**\n * Deletes the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#getDataBodyRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the data body of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataBodyRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataBodyRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#getHeaderRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with header row of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeaderRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeaderRowRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#getRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the entire table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#getTotalRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with totals row of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTotalRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTotalRowRange"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#highlightFirstColumn:member",
                  "docComment": "/**\n * Specifies if the first column contains special formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "highlightFirstColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "highlightFirstColumn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#highlightLastColumn:member",
                  "docComment": "/**\n * Specifies if the last column contains special formatting.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "highlightLastColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "highlightLastColumn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#id:member",
                  "docComment": "/**\n * Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#legacyId:member",
                  "docComment": "/**\n * Returns a numeric id.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly legacyId: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "legacyId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#name:member",
                  "docComment": "/**\n * Name of the table.\n *\n * The set name of the table must follow the guidelines specified in the {@link https://support.office.com/article/Rename-an-Excel-table-FBF49A4F-82A3-43EB-8BA2-44D21233B114 | Rename an Excel table} article.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Table#reapplyFilters:member(1)",
                  "docComment": "/**\n * Reapplies all the filters currently on the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reapplyFilters(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "reapplyFilters"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#rows:member",
                  "docComment": "/**\n * Represents a collection of all the rows in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly rows: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableRowCollection",
                      "canonicalReference": "excel!Excel.TableRowCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#showBandedColumns:member",
                  "docComment": "/**\n * Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showBandedColumns: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showBandedColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#showBandedRows:member",
                  "docComment": "/**\n * Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showBandedRows: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showBandedRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#showFilterButton:member",
                  "docComment": "/**\n * Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showFilterButton: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showFilterButton",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#showHeaders:member",
                  "docComment": "/**\n * Specifies if the header row is visible. This value can be set to show or remove the header row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showHeaders: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showHeaders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#showTotals:member",
                  "docComment": "/**\n * Specifies if the total row is visible. This value can be set to show or remove the total row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showTotals: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showTotals",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#sort:member",
                  "docComment": "/**\n * Represents the sorting for the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly sort: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableSort",
                      "canonicalReference": "excel!Excel.TableSort:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "sort",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#style:member",
                  "docComment": "/**\n * Constant value that represents the Table style. Possible values are: \"TableStyleLight1\" through \"TableStyleLight21\", \"TableStyleMedium1\" through \"TableStyleMedium28\", \"TableStyleDark1\" through \"TableStyleDark11\". A custom user-defined style present in the workbook can also be specified.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "style: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "style",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Table#worksheet:member",
                  "docComment": "/**\n * The worksheet containing the current table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheet: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheet",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableCollection:interface",
              "docComment": "/**\n * Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "TableCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableCollection#add:member(1)",
                  "docComment": "/**\n * Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.\n *\n * @param address - A Range object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used.\n *\n * @param hasHeaders - Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(address: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": ", hasHeaders: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "hasHeaders",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableCollection#count:member",
                  "docComment": "/**\n * Returns the number of tables in the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of tables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a table by Name or ID.\n *\n * @param key - Name or ID of the table to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a table based on its position in the collection.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a table by Name or ID. If the table does not exist, will return a null object.\n *\n * @param key - Name or ID of the table to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableColumn:interface",
              "docComment": "/**\n * Represents a column in a table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableColumn "
                }
              ],
              "releaseTag": "Public",
              "name": "TableColumn",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumn#delete:member(1)",
                  "docComment": "/**\n * Deletes the column from the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableColumn#filter:member",
                  "docComment": "/**\n * Retrieve the filter applied to the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly filter: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Filter",
                      "canonicalReference": "excel!Excel.Filter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "filter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumn#getDataBodyRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the data body of the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDataBodyRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDataBodyRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumn#getHeaderRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the header row of the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getHeaderRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getHeaderRowRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumn#getRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the entire column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumn#getTotalRowRange:member(1)",
                  "docComment": "/**\n * Gets the range object associated with the totals row of the column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTotalRowRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getTotalRowRange"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableColumn#id:member",
                  "docComment": "/**\n * Returns a unique key that identifies the column within the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableColumn#index:member",
                  "docComment": "/**\n * Returns the index number of the column within the columns collection of the table. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "index",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumn#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableColumn#name:member",
                  "docComment": "/**\n * Specifies the name of the table column.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableColumn#values:member",
                  "docComment": "/**\n * Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableColumnCollection:interface",
              "docComment": "/**\n * Represents a collection of all the columns that are part of the table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableColumnCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "TableColumnCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new column to the table.\n *\n * @param index - Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.\n *\n * @param values - Optional. A 2-dimensional array of unformatted values of the table column.\n *\n * @param name - Optional. Specifies the name of the new column. If null, the default name will be used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            values?:\n                "
                    },
                    {
                      "kind": "Content",
                      "text": "| "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<boolean | string | number>>\n                | boolean\n                | string\n                | number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!Excel.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    },
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 9,
                        "endIndex": 10
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#count:member",
                  "docComment": "/**\n * Returns the number of columns in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of columns in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a column object by Name or ID.\n *\n * @param key - Column Name or ID.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "number | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!Excel.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a column based on its position in the collection.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!Excel.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a column object by Name or ID. If the column does not exist, will return a null object.\n *\n * @param key - Column Name or ID.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "number | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableColumn",
                      "canonicalReference": "excel!Excel.TableColumn:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableColumnCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableRow:interface",
              "docComment": "/**\n * Represents a row in a table.\n *\n * Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableRow "
                }
              ],
              "releaseTag": "Public",
              "name": "TableRow",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRow#delete:member(1)",
                  "docComment": "/**\n * Deletes the row from the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRow#getRange:member(1)",
                  "docComment": "/**\n * Returns the range object associated with the entire row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRow#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableRow#values:member",
                  "docComment": "/**\n * Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values: "
                    },
                    {
                      "kind": "Content",
                      "text": "any[][]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableRowCollection:interface",
              "docComment": "/**\n * Represents a collection of all the rows that are part of the table.\n *\n * Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableRowCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "TableRowCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRowCollection#add:member(1)",
                  "docComment": "/**\n * Adds one or more rows to the table. The return object will be the top of the newly added row(s).\n *\n * Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.\n *\n * @param index - Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.\n *\n * @param values - Optional. A 2-dimensional array of unformatted values of the table row.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(\n            index?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            values?:\n                "
                    },
                    {
                      "kind": "Content",
                      "text": "| "
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Array",
                      "canonicalReference": "!Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<boolean | string | number>>\n                | boolean\n                | string\n                | number\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableRow",
                      "canonicalReference": "excel!Excel.TableRow:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "values",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableRowCollection#count:member",
                  "docComment": "/**\n * Returns the number of rows in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly count: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "count",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRowCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of rows in the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRowCollection#getItemAt:member(1)",
                  "docComment": "/**\n * Gets a row based on its position in the collection.\n *\n * Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.\n *\n * @param index - Index value of the object to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemAt(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableRow",
                      "canonicalReference": "excel!Excel.TableRow:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableRowCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableScopedCollection:interface",
              "docComment": "/**\n * Represents a scoped collection of tables. For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableScopedCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "TableScopedCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableScopedCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of tables in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableScopedCollection#getFirst:member(1)",
                  "docComment": "/**\n * Gets the first table in the collection. The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirst(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getFirst"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableScopedCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a table by Name or ID.\n *\n * @param key - Name or ID of the table to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Table",
                      "canonicalReference": "excel!Excel.Table:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableScopedCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableSort:interface",
              "docComment": "/**\n * Manages sorting operations on Table objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableSort "
                }
              ],
              "releaseTag": "Public",
              "name": "TableSort",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableSort#apply:member(1)",
                  "docComment": "/**\n * Perform a sort operation.\n *\n * @param fields - The list of conditions to sort on.\n *\n * @param matchCase - Optional. Whether to have the casing impact string ordering.\n *\n * @param method - Optional. The ordering method used for Chinese characters.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "apply(\n            fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortField",
                      "canonicalReference": "excel!Excel.SortField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            method?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortMethod",
                      "canonicalReference": "excel!Excel.SortMethod:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "fields",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "parameterName": "matchCase",
                      "parameterTypeTokenRange": {
                        "startIndex": 4,
                        "endIndex": 5
                      }
                    },
                    {
                      "parameterName": "method",
                      "parameterTypeTokenRange": {
                        "startIndex": 6,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "apply"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableSort#clear:member(1)",
                  "docComment": "/**\n * Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "clear(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "clear"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableSort#fields:member",
                  "docComment": "/**\n * Specifies the current conditions used to last sort the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly fields: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortField",
                      "canonicalReference": "excel!Excel.SortField:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "fields",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableSort#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableSort#matchCase:member",
                  "docComment": "/**\n * Specifies if the casing impacts the last sort of the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly matchCase: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableSort#method:member",
                  "docComment": "/**\n * Represents Chinese character ordering method last used to sort the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly method: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SortMethod",
                      "canonicalReference": "excel!Excel.SortMethod:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "method",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableSort#reapply:member(1)",
                  "docComment": "/**\n * Reapplies the current sorting parameters to the table.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "reapply(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "reapply"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableStyle:interface",
              "docComment": "/**\n * Represents a TableStyle, which defines the style elements by region of the Table.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "TableStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this TableStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!Excel.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyle#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableStyle#name:member",
                  "docComment": "/**\n * Gets the name of the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TableStyle#readOnly:member",
                  "docComment": "/**\n * Specifies if this TableStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly readOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TableStyleCollection:interface",
              "docComment": "/**\n * Represents a collection of TableStyles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TableStyleCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "TableStyleCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#add:member(1)",
                  "docComment": "/**\n * Creates a blank TableStyle with the specified name.\n *\n * @param name - The unique name for the new TableStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!Excel.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of table styles in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#getDefault:member(1)",
                  "docComment": "/**\n * Gets the default TableStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefault(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!Excel.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefault"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a TableStyle by name.\n *\n * @param name - Name of the TableStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!Excel.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a TableStyle by name. If the TableStyle does not exist, will return a null object.\n *\n * @param name - Name of the TableStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!Excel.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TableStyleCollection#setDefault:member(1)",
                  "docComment": "/**\n * Sets the default TableStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The TableStyle object or name of the TableStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefault(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyle",
                      "canonicalReference": "excel!Excel.TableStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TextConditionalFormat:interface",
              "docComment": "/**\n * Represents a specific text conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TextConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "TextConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextConditionalFormat#format:member",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!Excel.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TextConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextConditionalFormat#rule:member",
                  "docComment": "/**\n * The rule of the conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTextComparisonRule",
                      "canonicalReference": "excel!Excel.ConditionalTextComparisonRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TextFrame:interface",
              "docComment": "/**\n * Represents the text frame of a shape object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TextFrame "
                }
              ],
              "releaseTag": "Public",
              "name": "TextFrame",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#autoSizeSetting:member",
                  "docComment": "/**\n * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "autoSizeSetting: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeAutoSize",
                      "canonicalReference": "excel!Excel.ShapeAutoSize:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSizeSetting",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#bottomMargin:member",
                  "docComment": "/**\n * Represents the bottom margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottomMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottomMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TextFrame#deleteText:member(1)",
                  "docComment": "/**\n * Deletes all the text in the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "deleteText(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "deleteText"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#hasText:member",
                  "docComment": "/**\n * Specifies if the text frame contains text.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly hasText: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "hasText",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#horizontalAlignment:member",
                  "docComment": "/**\n * Represents the horizontal alignment of the text frame. See Excel.ShapeTextHorizontalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextHorizontalAlignment",
                      "canonicalReference": "excel!Excel.ShapeTextHorizontalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#horizontalOverflow:member",
                  "docComment": "/**\n * Represents the horizontal overflow behavior of the text frame. See Excel.ShapeTextHorizontalOverflow for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "horizontalOverflow: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextHorizontalOverflow",
                      "canonicalReference": "excel!Excel.ShapeTextHorizontalOverflow:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalOverflow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#leftMargin:member",
                  "docComment": "/**\n * Represents the left margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leftMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "leftMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TextFrame#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#orientation:member",
                  "docComment": "/**\n * Represents the angle to which the text is oriented for the text frame. See Excel.ShapeTextOrientation for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "orientation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextOrientation",
                      "canonicalReference": "excel!Excel.ShapeTextOrientation:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "orientation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#readingOrder:member",
                  "docComment": "/**\n * Represents the reading order of the text frame, either left-to-right or right-to-left. See Excel.ShapeTextReadingOrder for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readingOrder: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextReadingOrder",
                      "canonicalReference": "excel!Excel.ShapeTextReadingOrder:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readingOrder",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#rightMargin:member",
                  "docComment": "/**\n * Represents the right margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rightMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rightMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#textRange:member",
                  "docComment": "/**\n * Represents the text that is attached to a shape in the text frame, and properties and methods for manipulating the text. See Excel.TextRange for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly textRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextRange",
                      "canonicalReference": "excel!Excel.TextRange:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "textRange",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#topMargin:member",
                  "docComment": "/**\n * Represents the top margin, in points, of the text frame.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "topMargin: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "topMargin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#verticalAlignment:member",
                  "docComment": "/**\n * Represents the vertical alignment of the text frame. See Excel.ShapeTextVerticalAlignment for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalAlignment: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextVerticalAlignment",
                      "canonicalReference": "excel!Excel.ShapeTextVerticalAlignment:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalAlignment",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextFrame#verticalOverflow:member",
                  "docComment": "/**\n * Represents the vertical overflow behavior of the text frame. See Excel.ShapeTextVerticalOverflow for details.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "verticalOverflow: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeTextVerticalOverflow",
                      "canonicalReference": "excel!Excel.ShapeTextVerticalOverflow:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalOverflow",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TextRange:interface",
              "docComment": "/**\n * Contains the text that is attached to a shape, in addition to properties and methods for manipulating the text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TextRange "
                }
              ],
              "releaseTag": "Public",
              "name": "TextRange",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextRange#font:member",
                  "docComment": "/**\n * Returns a ShapeFont object that represents the font attributes for the text range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly font: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeFont",
                      "canonicalReference": "excel!Excel.ShapeFont:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "font",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TextRange#getSubstring:member(1)",
                  "docComment": "/**\n * Returns a TextRange object for the substring in the given range.\n *\n * @param start - The zero-based index of the first character to get from the text range.\n *\n * @param length - Optional. The number of characters to be returned in the new text range. If length is omitted, all the characters from start to the end of the text range's last paragraph will be returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSubstring(start: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", length?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TextRange",
                      "canonicalReference": "excel!Excel.TextRange:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "start",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "length",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getSubstring"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TextRange#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TextRange#text:member",
                  "docComment": "/**\n * Represents the plain text content of the text range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "text",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TimelineStyle:interface",
              "docComment": "/**\n * Represents a Timeline style, which defines style elements by region in the Timeline.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TimelineStyle "
                }
              ],
              "releaseTag": "Public",
              "name": "TimelineStyle",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyle#delete:member(1)",
                  "docComment": "/**\n * Deletes the TableStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyle#duplicate:member(1)",
                  "docComment": "/**\n * Creates a duplicate of this TimelineStyle with copies of all the style elements.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duplicate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!Excel.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "duplicate"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyle#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TimelineStyle#name:member",
                  "docComment": "/**\n * Gets the name of the TimelineStyle.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TimelineStyle#readOnly:member",
                  "docComment": "/**\n * Specifies if this TimelineStyle object is read-only.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly readOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TimelineStyleCollection:interface",
              "docComment": "/**\n * Represents a collection of TimelineStyles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TimelineStyleCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "TimelineStyleCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#add:member(1)",
                  "docComment": "/**\n * Creates a blank TimelineStyle with the specified name.\n *\n * @param name - The unique name for the new TimelineStyle. Will throw an invalid argument exception if the name is already in use.\n *\n * @param makeUniqueName - Optional, defaults to false. If true, will append numbers to the name in order to make it unique, if needed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", makeUniqueName?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!Excel.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "makeUniqueName",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of timeline styles in the collection.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#getDefault:member(1)",
                  "docComment": "/**\n * Gets the default TimelineStyle for the parent object's scope.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDefault(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!Excel.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getDefault"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a TimelineStyle by name.\n *\n * @param name - Name of the TimelineStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!Excel.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a TimelineStyle by name. If the TimelineStyle does not exist, will return a null object.\n *\n * @param name - Name of the TimelineStyle to be retrieved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!Excel.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TimelineStyleCollection#setDefault:member(1)",
                  "docComment": "/**\n * Sets the default TimelineStyle for use in the parent object's scope.\n *\n * @param newDefaultStyle - The TimelineStyle object or name of the TimelineStyle object that should be the new default.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDefault(newDefaultStyle: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyle",
                      "canonicalReference": "excel!Excel.TimelineStyle:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "newDefaultStyle",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "setDefault"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.TopBottomConditionalFormat:interface",
              "docComment": "/**\n * Represents a Top/Bottom conditional format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface TopBottomConditionalFormat "
                }
              ],
              "releaseTag": "Public",
              "name": "TopBottomConditionalFormat",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TopBottomConditionalFormat#format:member",
                  "docComment": "/**\n * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly format: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalRangeFormat",
                      "canonicalReference": "excel!Excel.ConditionalRangeFormat:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "format",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.TopBottomConditionalFormat#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.TopBottomConditionalFormat#rule:member",
                  "docComment": "/**\n * The criteria of the Top/Bottom conditional format.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rule: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ConditionalTopBottomRule",
                      "canonicalReference": "excel!Excel.ConditionalTopBottomRule:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "rule",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.VerticalAlignment:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum VerticalAlignment "
                }
              ],
              "releaseTag": "Public",
              "name": "VerticalAlignment",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.VerticalAlignment.bottom:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bottom = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"bottom\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bottom",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.VerticalAlignment.center:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "center = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"center\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "center",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.VerticalAlignment.distributed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distributed = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"distributed\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "distributed",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.VerticalAlignment.justify:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "justify = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"justify\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "justify",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.VerticalAlignment.top:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "top = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"top\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "top",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Workbook:interface",
              "docComment": "/**\n * Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc. To learn more about the workbook object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks | Work with workbooks using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Workbook "
                }
              ],
              "releaseTag": "Public",
              "name": "Workbook",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#application:member",
                  "docComment": "/**\n * Represents the Excel application instance that contains this workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly application: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Application",
                      "canonicalReference": "excel!Excel.Application:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "application",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#autoSave:member",
                  "docComment": "/**\n * Specifies if the workbook is in autosave mode.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly autoSave: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoSave",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#bindings:member",
                  "docComment": "/**\n * Represents a collection of bindings that are part of the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly bindings: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BindingCollection",
                      "canonicalReference": "excel!Excel.BindingCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "bindings",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#calculationEngineVersion:member",
                  "docComment": "/**\n * Returns a number about the version of Excel Calculation Engine.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly calculationEngineVersion: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "calculationEngineVersion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#chartDataPointTrack:member",
                  "docComment": "/**\n * True if all charts in the workbook are tracking the actual data points to which they are attached. False if the charts track the index of the data points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chartDataPointTrack: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "chartDataPointTrack",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#comments:member",
                  "docComment": "/**\n * Represents a collection of Comments associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly comments: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentCollection",
                      "canonicalReference": "excel!Excel.CommentCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "comments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#customXmlParts:member",
                  "docComment": "/**\n * Represents the collection of custom XML parts contained by this workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly customXmlParts: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CustomXmlPartCollection",
                      "canonicalReference": "excel!Excel.CustomXmlPartCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "customXmlParts",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#dataConnections:member",
                  "docComment": "/**\n * Represents all data connections in the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly dataConnections: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DataConnectionCollection",
                      "canonicalReference": "excel!Excel.DataConnectionCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "dataConnections",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getActiveCell:member(1)",
                  "docComment": "/**\n * Gets the currently active cell from the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveCell(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getActiveChart:member(1)",
                  "docComment": "/**\n * Gets the currently active chart in the workbook. If there is no active chart, an `ItemNotFound` exception is thrown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveChart(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!Excel.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveChart"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getActiveChartOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the currently active chart in the workbook. If there is no active chart, a null object is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveChartOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chart",
                      "canonicalReference": "excel!Excel.Chart:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveChartOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getActiveSlicer:member(1)",
                  "docComment": "/**\n * Gets the currently active slicer in the workbook. If there is no active slicer, an `ItemNotFound` exception is thrown.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveSlicer(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!Excel.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveSlicer"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the currently active slicer in the workbook. If there is no active slicer, a null object is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveSlicerOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Slicer",
                      "canonicalReference": "excel!Excel.Slicer:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveSlicerOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getSelectedRange:member(1)",
                  "docComment": "/**\n * Gets the currently selected single range from the workbook. If there are multiple ranges selected, this method will throw an error.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedRange(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#getSelectedRanges:member(1)",
                  "docComment": "/**\n * Gets the currently selected one or more ranges from the workbook. Unlike getSelectedRange(), this method returns a RangeAreas object that represents all the selected ranges.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSelectedRanges(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getSelectedRanges"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#isDirty:member",
                  "docComment": "/**\n * Specifies if changes have been made since the workbook was last saved. You can set this property to true if you want to close a modified workbook without either saving it or being prompted to save it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isDirty: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "isDirty",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Workbook#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#name:member",
                  "docComment": "/**\n * Gets the workbook name.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#names:member",
                  "docComment": "/**\n * Represents a collection of workbook scoped named items (named ranges and constants).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly names: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemCollection",
                      "canonicalReference": "excel!Excel.NamedItemCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "names",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#pivotTables:member",
                  "docComment": "/**\n * Represents a collection of PivotTables associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly pivotTables: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableCollection",
                      "canonicalReference": "excel!Excel.PivotTableCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pivotTables",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#pivotTableStyles:member",
                  "docComment": "/**\n * Represents a collection of PivotTableStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly pivotTableStyles: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableStyleCollection",
                      "canonicalReference": "excel!Excel.PivotTableStyleCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pivotTableStyles",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#previouslySaved:member",
                  "docComment": "/**\n * Specifies if the workbook has ever been saved locally or online.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly previouslySaved: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "previouslySaved",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#properties:member",
                  "docComment": "/**\n * Gets the workbook properties.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly properties: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DocumentProperties",
                      "canonicalReference": "excel!Excel.DocumentProperties:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "properties",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#protection:member",
                  "docComment": "/**\n * Returns the protection object for a workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly protection: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorkbookProtection",
                      "canonicalReference": "excel!Excel.WorkbookProtection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "protection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#readOnly:member",
                  "docComment": "/**\n * True if the workbook is open in Read-only mode.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly readOnly: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "readOnly",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#slicers:member",
                  "docComment": "/**\n * Represents a collection of Slicers associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly slicers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerCollection",
                      "canonicalReference": "excel!Excel.SlicerCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "slicers",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#slicerStyles:member",
                  "docComment": "/**\n * Represents a collection of SlicerStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly slicerStyles: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerStyleCollection",
                      "canonicalReference": "excel!Excel.SlicerStyleCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "slicerStyles",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#styles:member",
                  "docComment": "/**\n * Represents a collection of styles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly styles: "
                    },
                    {
                      "kind": "Reference",
                      "text": "StyleCollection",
                      "canonicalReference": "excel!Excel.StyleCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "styles",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#tables:member",
                  "docComment": "/**\n * Represents a collection of tables associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly tables: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableCollection",
                      "canonicalReference": "excel!Excel.TableCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tables",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#tableStyles:member",
                  "docComment": "/**\n * Represents a collection of TableStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly tableStyles: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableStyleCollection",
                      "canonicalReference": "excel!Excel.TableStyleCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tableStyles",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#timelineStyles:member",
                  "docComment": "/**\n * Represents a collection of TimelineStyles associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly timelineStyles: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TimelineStyleCollection",
                      "canonicalReference": "excel!Excel.TimelineStyleCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "timelineStyles",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#usePrecisionAsDisplayed:member",
                  "docComment": "/**\n * True if calculations in this workbook will be done using only the precision of the numbers as they're displayed. Data will permanently lose accuracy when switching this property from false to true.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "usePrecisionAsDisplayed: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "usePrecisionAsDisplayed",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Workbook#worksheets:member",
                  "docComment": "/**\n * Represents a collection of worksheets associated with the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly worksheets: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetCollection",
                      "canonicalReference": "excel!Excel.WorksheetCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "worksheets",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.WorkbookProtection:interface",
              "docComment": "/**\n * Represents the protection of a workbook object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorkbookProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "WorkbookProtection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorkbookProtection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorkbookProtection#protect:member(1)",
                  "docComment": "/**\n * Protects a workbook. Fails if the workbook has been protected.\n *\n * @param password - workbook protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "protect(password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "protect"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorkbookProtection#protected:member",
                  "docComment": "/**\n * Specifies if the workbook is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly protected: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "protected",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorkbookProtection#unprotect:member(1)",
                  "docComment": "/**\n * Unprotects a workbook.\n *\n * @param password - workbook protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unprotect(password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "unprotect"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.Worksheet:interface",
              "docComment": "/**\n * An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc. To learn more about the worksheet object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets | Work with worksheets using the Excel JavaScript API}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Worksheet "
                }
              ],
              "releaseTag": "Public",
              "name": "Worksheet",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#activate:member(1)",
                  "docComment": "/**\n * Activate the worksheet in the Excel UI.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "activate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "activate"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#autoFilter:member",
                  "docComment": "/**\n * Represents the AutoFilter object of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly autoFilter: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AutoFilter",
                      "canonicalReference": "excel!Excel.AutoFilter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "autoFilter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#calculate:member(1)",
                  "docComment": "/**\n * Calculates all cells on a worksheet.\n *\n * @param markAllDirty - True, to mark all as dirty.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "calculate(markAllDirty: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "markAllDirty",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "calculate"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#charts:member",
                  "docComment": "/**\n * Returns a collection of charts that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly charts: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChartCollection",
                      "canonicalReference": "excel!Excel.ChartCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "charts",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#comments:member",
                  "docComment": "/**\n * Returns a collection of all the Comments objects on the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly comments: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommentCollection",
                      "canonicalReference": "excel!Excel.CommentCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "comments",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#copy:member(1)",
                  "docComment": "/**\n * Copies a worksheet and places it at the specified position.\n *\n * @param positionType - The location in the workbook to place the newly created worksheet. The default value is \"None\", which inserts the worksheet at the beginning of the worksheet.\n *\n * @param relativeTo - The existing worksheet which determines the newly created worksheet's position. This is only needed if `positionType` is \"Before\" or \"After\".\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "copy(\n            positionType?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetPositionType",
                      "canonicalReference": "excel!Excel.WorksheetPositionType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            relativeTo?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "positionType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "relativeTo",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "copy"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#delete:member(1)",
                  "docComment": "/**\n * Deletes the worksheet from the workbook. Note that if the worksheet's visibility is set to \"VeryHidden\", the delete operation will fail with an `InvalidOperation` exception. You should first change its visibility to hidden or visible before deleting it.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "delete(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "delete"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#enableCalculation:member",
                  "docComment": "/**\n * Determines if Excel should recalculate the worksheet when necessary. True if Excel recalculates the worksheet when necessary. False if Excel doesn't recalculate the sheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enableCalculation: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "enableCalculation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#findAll:member(1)",
                  "docComment": "/**\n * Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.\n *\n * @param text - The string to find.\n *\n * @param criteria - Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "findAll(text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetSearchCriteria",
                      "canonicalReference": "excel!Excel.WorksheetSearchCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "findAll"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#findAllOrNullObject:member(1)",
                  "docComment": "/**\n * Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.\n *\n * @param text - The string to find.\n *\n * @param criteria - Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "findAllOrNullObject(\n            text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetSearchCriteria",
                      "canonicalReference": "excel!Excel.WorksheetSearchCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      }
                    }
                  ],
                  "name": "findAllOrNullObject"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#freezePanes:member",
                  "docComment": "/**\n * Gets an object that can be used to manipulate frozen panes on the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly freezePanes: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetFreezePanes",
                      "canonicalReference": "excel!Excel.WorksheetFreezePanes:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "freezePanes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getCell:member(1)",
                  "docComment": "/**\n * Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.\n *\n * @param row - The row number of the cell to be retrieved. Zero-indexed.\n *\n * @param column - the column number of the cell to be retrieved. Zero-indexed.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCell(row: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", column: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "row",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "column",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "getCell"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getNext:member(1)",
                  "docComment": "/**\n * Gets the worksheet that follows this one. If there are no worksheets following this one, this method will throw an error.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNext(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getNext"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getNextOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the worksheet that follows this one. If there are no worksheets following this one, this method will return a null object.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNextOrNullObject(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getNextOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getPrevious:member(1)",
                  "docComment": "/**\n * Gets the worksheet that precedes this one. If there are no previous worksheets, this method will throw an error.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrevious(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPrevious"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getPreviousOrNullObject:member(1)",
                  "docComment": "/**\n * Gets the worksheet that precedes this one. If there are no previous worksheets, this method will return a null objet.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPreviousOrNullObject(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getPreviousOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getRange:member(1)",
                  "docComment": "/**\n * Gets the range object, representing a single rectangular block of cells, specified by the address or name.\n *\n * @param address - Optional. The string representing the address or name of the range. For example, \"A1:B2\". If not specified, the entire worksheet range is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRange(address?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getRangeByIndexes:member(1)",
                  "docComment": "/**\n * Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.\n *\n * @param startRow - Start row (zero-indexed).\n *\n * @param startColumn - Start column (zero-indexed).\n *\n * @param rowCount - Number of rows to include in the range.\n *\n * @param columnCount - Number of columns to include in the range.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRangeByIndexes(\n            startRow: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            startColumn: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            rowCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            columnCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "startRow",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "startColumn",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "rowCount",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      }
                    },
                    {
                      "parameterName": "columnCount",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      }
                    }
                  ],
                  "name": "getRangeByIndexes"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getRanges:member(1)",
                  "docComment": "/**\n * Gets the RangeAreas object, representing one or more blocks of rectangular ranges, specified by the address or name.\n *\n * @param address - Optional. A string containing the comma-separated addresses or names of the individual ranges. For example, \"A1:B2, A5:B5\". If not specified, an RangeArea object for the entire worksheet is returned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRanges(address?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RangeAreas",
                      "canonicalReference": "excel!Excel.RangeAreas:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "address",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getRanges"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getUsedRange:member(1)",
                  "docComment": "/**\n * The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).\n *\n * @param valuesOnly - Optional. If true, considers only cells with values as used cells (ignoring formatting).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRange(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRange"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#getUsedRangeOrNullObject:member(1)",
                  "docComment": "/**\n * The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.\n *\n * @param valuesOnly - Optional. Considers only cells with values as used cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getUsedRangeOrNullObject(valuesOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "valuesOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getUsedRangeOrNullObject"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#horizontalPageBreaks:member",
                  "docComment": "/**\n * Gets the horizontal page break collection for the worksheet. This collection only contains manual page breaks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly horizontalPageBreaks: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreakCollection",
                      "canonicalReference": "excel!Excel.PageBreakCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "horizontalPageBreaks",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#id:member",
                  "docComment": "/**\n * Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#name:member",
                  "docComment": "/**\n * The display name of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#names:member",
                  "docComment": "/**\n * Collection of names scoped to the current worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly names: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NamedItemCollection",
                      "canonicalReference": "excel!Excel.NamedItemCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "names",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#pageLayout:member",
                  "docComment": "/**\n * Gets the PageLayout object of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly pageLayout: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageLayout",
                      "canonicalReference": "excel!Excel.PageLayout:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pageLayout",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#pivotTables:member",
                  "docComment": "/**\n * Collection of PivotTables that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly pivotTables: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PivotTableCollection",
                      "canonicalReference": "excel!Excel.PivotTableCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "pivotTables",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#position:member",
                  "docComment": "/**\n * The zero-based position of the worksheet within the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#protection:member",
                  "docComment": "/**\n * Returns sheet protection object for a worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly protection: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetProtection",
                      "canonicalReference": "excel!Excel.WorksheetProtection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "protection",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#replaceAll:member(1)",
                  "docComment": "/**\n * Finds and replaces the given string based on the criteria specified within the current worksheet.\n *\n * @param text - String to find.\n *\n * @param replacement - String to replace the original with.\n *\n * @param criteria - Additional Replace Criteria.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "replaceAll(\n            text: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            replacement: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ",\n            criteria: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReplaceCriteria",
                      "canonicalReference": "excel!Excel.ReplaceCriteria:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "\n        "
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "text",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "replacement",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    },
                    {
                      "parameterName": "criteria",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 7
                      }
                    }
                  ],
                  "name": "replaceAll"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#shapes:member",
                  "docComment": "/**\n * Returns the collection of all the Shape objects on the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly shapes: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ShapeCollection",
                      "canonicalReference": "excel!Excel.ShapeCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "shapes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#showGridlines:member",
                  "docComment": "/**\n * Specifies if gridlines are visible to the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showGridlines: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showGridlines",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#showHeadings:member",
                  "docComment": "/**\n * Specifies if headings are visible to the user.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showHeadings: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "showHeadings",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.Worksheet#showOutlineLevels:member(1)",
                  "docComment": "/**\n * Shows row or column groups by their outline levels. Outlines group and summarize a list of data in the worksheet. The `rowLevels` and `columnLevels` parameters specify how many levels of the outline will be displayed. The acceptable argument range is between 0 and 8. A value of 0 does not change the current display. A value greater than the current number of levels displays all the levels.\n *\n * @param rowLevels - The number of row levels of an outline to display.\n *\n * @param columnLevels - The number of column levels of an outline to display.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "showOutlineLevels(rowLevels: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", columnLevels: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rowLevels",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "columnLevels",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "showOutlineLevels"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#slicers:member",
                  "docComment": "/**\n * Returns a collection of slicers that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly slicers: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SlicerCollection",
                      "canonicalReference": "excel!Excel.SlicerCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "slicers",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#standardHeight:member",
                  "docComment": "/**\n * Returns the standard (default) height of all the rows in the worksheet, in points.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly standardHeight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardHeight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#standardWidth:member",
                  "docComment": "/**\n * Specifies the standard (default) width of all the columns in the worksheet. One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "standardWidth: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "standardWidth",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#tabColor:member",
                  "docComment": "/**\n * The tab color of the worksheet. When retrieving the tab color, if the worksheet is invisible, the value will be null. If the worksheet is visible but the tab color is set to auto, an empty string will be returned. Otherwise, the property will be set to a color, in the form \"#123456\" When setting the color, use an empty-string to set an \"auto\" color, or a real color otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tabColor: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tabColor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#tables:member",
                  "docComment": "/**\n * Collection of tables that are part of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly tables: "
                    },
                    {
                      "kind": "Reference",
                      "text": "TableCollection",
                      "canonicalReference": "excel!Excel.TableCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "tables",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#verticalPageBreaks:member",
                  "docComment": "/**\n * Gets the vertical page break collection for the worksheet. This collection only contains manual page breaks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly verticalPageBreaks: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PageBreakCollection",
                      "canonicalReference": "excel!Excel.PageBreakCollection:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "verticalPageBreaks",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.Worksheet#visibility:member",
                  "docComment": "/**\n * The Visibility of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "visibility: "
                    },
                    {
                      "kind": "Reference",
                      "text": "SheetVisibility",
                      "canonicalReference": "excel!Excel.SheetVisibility:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "visibility",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.WorksheetCollection:interface",
              "docComment": "/**\n * Represents a collection of worksheet objects that are part of the workbook.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetCollection "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetCollection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#add:member(1)",
                  "docComment": "/**\n * Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call \".activate() on it.\n *\n * @param name - Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "add(name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "name",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "add"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)",
                  "docComment": "/**\n * Gets the currently active worksheet in the workbook.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getActiveWorksheet(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getActiveWorksheet"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#getCount:member(1)",
                  "docComment": "/**\n * Gets the number of worksheets in the collection.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCount(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getCount"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#getFirst:member(1)",
                  "docComment": "/**\n * Gets the first worksheet in the collection.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFirst(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getFirst"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#getItem:member(1)",
                  "docComment": "/**\n * Gets a worksheet object using its Name or ID.\n *\n * @param key - The Name or ID of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItem(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItem"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a worksheet object using its Name or ID. If the worksheet does not exist, will return a null object.\n *\n * @param key - The Name or ID of the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getItemOrNullObject(key: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "key",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getItemOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#getLast:member(1)",
                  "docComment": "/**\n * Gets the last worksheet in the collection.\n *\n * @param visibleOnly - Optional. If true, considers only visible worksheets, skipping over any hidden ones.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLast(visibleOnly?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Worksheet",
                      "canonicalReference": "excel!Excel.Worksheet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "visibleOnly",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "getLast"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetCollection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.WorksheetFreezePanes:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetFreezePanes "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetFreezePanes",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#freezeAt:member(1)",
                  "docComment": "/**\n * Sets the frozen cells in the active worksheet view. The range provided corresponds to cells that will be frozen in the top- and left-most pane.\n *\n * @param frozenRange - A range that represents the cells to be frozen, or null to remove all frozen panes.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "freezeAt(frozenRange: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "frozenRange",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "name": "freezeAt"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)",
                  "docComment": "/**\n * Freeze the first column(s) of the worksheet in place.\n *\n * @param count - Optional number of columns to freeze, or zero to unfreeze all columns\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "freezeColumns(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "freezeColumns"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#freezeRows:member(1)",
                  "docComment": "/**\n * Freeze the top row(s) of the worksheet in place.\n *\n * @param count - Optional number of rows to freeze, or zero to unfreeze all rows\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "freezeRows(count?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "count",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "freezeRows"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#getLocation:member(1)",
                  "docComment": "/**\n * Gets a range that describes the frozen cells in the active worksheet view. The frozen range is corresponds to cells that are frozen in the top- and left-most pane.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocation"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)",
                  "docComment": "/**\n * Gets a range that describes the frozen cells in the active worksheet view. The frozen range is corresponds to cells that are frozen in the top- and left-most pane. If there is no frozen pane, returns a null object.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocationOrNullObject(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Range",
                      "canonicalReference": "excel!Excel.Range:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "getLocationOrNullObject"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetFreezePanes#unfreeze:member(1)",
                  "docComment": "/**\n * Removes all frozen panes in the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unfreeze(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [],
                  "name": "unfreeze"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "excel!Excel.WorksheetPositionType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum WorksheetPositionType "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetPositionType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.WorksheetPositionType.after:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "after = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"after\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "after",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.WorksheetPositionType.before:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "before = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"before\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "before",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.WorksheetPositionType.beginning:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "beginning = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"beginning\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "beginning",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.WorksheetPositionType.end:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "end = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"end\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "end",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "excel!Excel.WorksheetPositionType.none:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "none = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"none\""
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "none",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.WorksheetProtection:interface",
              "docComment": "/**\n * Represents the protection of a sheet object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetProtection "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetProtection",
              "members": [
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetProtection#load:member(1)",
                  "docComment": "/**\n * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\n *\n * @param propertyNames - A comma-delimited string or an array of strings that specify the properties to load.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "load(propertyNames?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string | string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "propertyNames",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "load"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtection#options:member",
                  "docComment": "/**\n * Specifies the protection options for the worksheet.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetProtectionOptions",
                      "canonicalReference": "excel!Excel.WorksheetProtectionOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "options",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetProtection#protect:member(1)",
                  "docComment": "/**\n * Protects a worksheet. Fails if the worksheet has already been protected.\n *\n * @param options - Optional. Sheet protection options.\n *\n * @param password - Optional. Sheet protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "protect(options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorksheetProtectionOptions",
                      "canonicalReference": "excel!Excel.WorksheetProtectionOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      }
                    }
                  ],
                  "name": "protect"
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtection#protected:member",
                  "docComment": "/**\n * Specifies if the worksheet is protected.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly protected: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "protected",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "MethodSignature",
                  "canonicalReference": "excel!Excel.WorksheetProtection#unprotect:member(1)",
                  "docComment": "/**\n * Unprotects a worksheet.\n *\n * @param password - sheet protection password.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unprotect(password?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "password",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "name": "unprotect"
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.WorksheetProtectionOptions:interface",
              "docComment": "/**\n * Represents the options in sheet protection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetProtectionOptions "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetProtectionOptions",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowAutoFilter:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing using auto filter feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowAutoFilter?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowAutoFilter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowDeleteColumns:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing deleting columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowDeleteColumns?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowDeleteColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowDeleteRows:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing deleting rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowDeleteRows?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowDeleteRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowEditObjects:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing editing objects.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowEditObjects?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowEditObjects",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowEditScenarios:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing editing scenarios.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowEditScenarios?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowEditScenarios",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowFormatCells:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing formatting cells.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowFormatCells?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowFormatCells",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowFormatColumns:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing formatting columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowFormatColumns?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowFormatColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowFormatRows:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing formatting rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowFormatRows?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowFormatRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowInsertColumns:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing inserting columns.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowInsertColumns?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowInsertColumns",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowInsertHyperlinks:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing inserting hyperlinks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowInsertHyperlinks?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowInsertHyperlinks",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowInsertRows:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing inserting rows.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowInsertRows?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowInsertRows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowPivotTables:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing using PivotTable feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowPivotTables?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowPivotTables",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#allowSort:member",
                  "docComment": "/**\n * Represents the worksheet protection option of allowing using sort feature.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "allowSort?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "allowSort",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetProtectionOptions#selectionMode:member",
                  "docComment": "/**\n * Represents the worksheet protection option of selection mode.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "selectionMode?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ProtectionSelectionMode",
                      "canonicalReference": "excel!Excel.ProtectionSelectionMode:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "selectionMode",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "excel!Excel.WorksheetSearchCriteria:interface",
              "docComment": "/**\n * Represents the worksheet search criteria to be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorksheetSearchCriteria "
                }
              ],
              "releaseTag": "Public",
              "name": "WorksheetSearchCriteria",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetSearchCriteria#completeMatch:member",
                  "docComment": "/**\n * Specifies if the match needs to be complete or partial. A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`). Default is false (partial).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "completeMatch?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "completeMatch",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "excel!Excel.WorksheetSearchCriteria#matchCase:member",
                  "docComment": "/**\n * Specifies if the match is case sensitive. Default is false (insensitive).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "matchCase?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "matchCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        }
      ]
    }
  ]
}
