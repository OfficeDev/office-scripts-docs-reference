### YamlMime:TSType
name: Excel.TableRowCollection
uid: 'excel!Excel.TableRowCollection:interface'
package: excel!
fullName: Excel.TableRowCollection
summary: >-
  Represents a collection of all the rows that are part of the table.


  Note that unlike Ranges or Columns, which will adjust if new rows/columns are
  added before them, a TableRow object represent the physical location of the
  table row, but not the data. That is, if the data is sorted or if new rows are
  added, a table row will continue to point at the index for which it was
  created.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: count
    uid: 'excel!Excel.TableRowCollection#count:member'
    package: excel!
    fullName: count
    summary: Returns the number of rows in the table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly count: number;'
      return:
        type: number
methods:
  - name: 'add(index, values)'
    uid: 'excel!Excel.TableRowCollection#add:member(1)'
    package: excel!
    fullName: 'add(index, values)'
    summary: >-
      Adds one or more rows to the table. The return object will be the top of
      the newly added row(s).


      Note that unlike Ranges or Columns, which will adjust if new rows/columns
      are added before them, a TableRow object represent the physical location
      of the table row, but not the data. That is, if the data is sorted or if
      new rows are added, a table row will continue to point at the index for
      which it was created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        add(
                    index?: number,
                    values?:
                        | Array<Array<boolean | string | number>>
                        | boolean
                        | string
                        | number
                ): TableRow;
      parameters:
        - id: index
          description: >-
            Optional. Specifies the relative position of the new row. If null or
            -1, the addition happens at the end. Any rows below the inserted row
            are shifted downwards. Zero-indexed.
          type: number
        - id: values
          description: >-
            Optional. A 2-dimensional array of unformatted values of the table
            row.
          type: |-
            | Array&lt;Array&lt;boolean | string | number&gt;&gt;
                            | boolean
                            | string
                            | number
                    
      return:
        type: '<xref uid="excel!Excel.TableRow:interface" />'
        description: ''
  - name: getCount()
    uid: 'excel!Excel.TableRowCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: Gets the number of rows in the table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type: '<xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;'
        description: ''
  - name: getItemAt(index)
    uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    package: excel!
    fullName: getItemAt(index)
    summary: >-
      Gets a row based on its position in the collection.


      Note that unlike Ranges or Columns, which will adjust if new rows/columns
      are added before them, a TableRow object represent the physical location
      of the table row, but not the data. That is, if the data is sorted or if
      new rows are added, a table row will continue to point at the index for
      which it was created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): TableRow;'
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type: number
      return:
        type: '<xref uid="excel!Excel.TableRow:interface" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.TableRowCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
