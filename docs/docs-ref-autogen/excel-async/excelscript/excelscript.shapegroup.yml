### YamlMime:TSType
name: Excel.ShapeGroup
uid: 'excel!Excel.ShapeGroup:interface'
package: excel!
fullName: Excel.ShapeGroup
summary: >-
  Represents a shape group inside a worksheet. To get the corresponding Shape
  object, use `ShapeGroup.shape`<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: id
    uid: 'excel!Excel.ShapeGroup#id:member'
    package: excel!
    fullName: id
    summary: Specifies the shape identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: shape
    uid: 'excel!Excel.ShapeGroup#shape:member'
    package: excel!
    fullName: shape
    summary: Returns the Shape object associated with the group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shape: Shape;'
      return:
        type: '<xref uid="excel!Excel.Shape:interface" />'
  - name: shapes
    uid: 'excel!Excel.ShapeGroup#shapes:member'
    package: excel!
    fullName: shapes
    summary: Returns the collection of Shape objects.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shapes: GroupShapeCollection;'
      return:
        type: '<xref uid="excel!Excel.GroupShapeCollection:interface" />'
methods:
  - name: load(propertyNames)
    uid: 'excel!Excel.ShapeGroup#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
  - name: ungroup()
    uid: 'excel!Excel.ShapeGroup#ungroup:member(1)'
    package: excel!
    fullName: ungroup()
    summary: Ungroups any grouped shapes in the specified shape group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ungroup(): void;'
      return:
        type: void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");

              let shapeGroup = sheet.shapes.getItem("Group").group;
              shapeGroup.ungroup();
              console.log("Shapes ungrouped");

              await context.sync();
          }
          ```
