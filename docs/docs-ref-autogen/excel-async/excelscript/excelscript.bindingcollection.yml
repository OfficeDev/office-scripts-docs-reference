### YamlMime:TSType
name: Excel.BindingCollection
uid: 'excel!Excel.BindingCollection:interface'
package: excel!
fullName: Excel.BindingCollection
summary: >-
  Represents the collection of all the binding objects that are part of the
  workbook.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: count
    uid: 'excel!Excel.BindingCollection#count:member'
    package: excel!
    fullName: count
    summary: Returns the number of bindings in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly count: number;'
      return:
        type: number
methods:
  - name: 'add(range, bindingType, id)'
    uid: 'excel!Excel.BindingCollection#add:member(1)'
    package: excel!
    fullName: 'add(range, bindingType, id)'
    summary: Add a new binding to a particular Range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        add(
                    range: Range | string,
                    bindingType: BindingType | "Range" | "Table" | "Text",
                    id: string
                ): Binding;
      parameters:
        - id: range
          description: >-
            Range to bind the binding to. May be an Excel Range object, or a
            string. If string, must contain the full address, including the
            sheet name
          type: '<xref uid="excel!Excel.Range:interface" /> | string'
        - id: bindingType
          description: Type of binding. See Excel.BindingType.
          type: >-
            <xref uid="excel!Excel.BindingType:enum" /> | "Range" | "Table" |
            "Text"
        - id: id
          description: Name of binding.
          type: string
      return:
        type: '<xref uid="excel!Excel.Binding:interface" />'
        description: ''
  - name: 'addFromNamedItem(name, bindingType, id)'
    uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
    package: excel!
    fullName: 'addFromNamedItem(name, bindingType, id)'
    summary: >-
      Add a new binding based on a named item in the workbook. If the named item
      references to multiple areas, the "InvalidReference" error will be
      returned.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        addFromNamedItem(
                    name: string,
                    bindingType: BindingType | "Range" | "Table" | "Text",
                    id: string
                ): Binding;
      parameters:
        - id: name
          description: Name from which to create binding.
          type: string
        - id: bindingType
          description: Type of binding. See Excel.BindingType.
          type: >-
            <xref uid="excel!Excel.BindingType:enum" /> | "Range" | "Table" |
            "Text"
        - id: id
          description: Name of binding.
          type: string
      return:
        type: '<xref uid="excel!Excel.Binding:interface" />'
        description: ''
  - name: 'addFromSelection(bindingType, id)'
    uid: 'excel!Excel.BindingCollection#addFromSelection:member(1)'
    package: excel!
    fullName: 'addFromSelection(bindingType, id)'
    summary: >-
      Add a new binding based on the current selection. If the selection has
      multiple areas, the "InvalidReference" error will be returned.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        addFromSelection(
                    bindingType: BindingType | "Range" | "Table" | "Text",
                    id: string
                ): Binding;
      parameters:
        - id: bindingType
          description: Type of binding. See Excel.BindingType.
          type: >-
            <xref uid="excel!Excel.BindingType:enum" /> | "Range" | "Table" |
            "Text"
        - id: id
          description: Name of binding.
          type: string
      return:
        type: '<xref uid="excel!Excel.Binding:interface" />'
        description: ''
  - name: getCount()
    uid: 'excel!Excel.BindingCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: Gets the number of bindings in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type: '<xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;'
        description: ''
  - name: getItem(id)
    uid: 'excel!Excel.BindingCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(id)
    summary: Gets a binding object by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(id: string): Binding;'
      parameters:
        - id: id
          description: Id of the binding object to be retrieved.
          type: string
      return:
        type: '<xref uid="excel!Excel.Binding:interface" />'
        description: ''
  - name: getItemAt(index)
    uid: 'excel!Excel.BindingCollection#getItemAt:member(1)'
    package: excel!
    fullName: getItemAt(index)
    summary: Gets a binding object based on its position in the items array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): Binding;'
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type: number
      return:
        type: '<xref uid="excel!Excel.Binding:interface" />'
        description: ''
  - name: getItemOrNullObject(id)
    uid: 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
    package: excel!
    fullName: getItemOrNullObject(id)
    summary: >-
      Gets a binding object by ID. If the binding object does not exist, will
      return a null object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemOrNullObject(id: string): Binding;'
      parameters:
        - id: id
          description: Id of the binding object to be retrieved.
          type: string
      return:
        type: '<xref uid="excel!Excel.Binding:interface" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.BindingCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
