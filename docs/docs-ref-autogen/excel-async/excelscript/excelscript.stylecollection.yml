### YamlMime:TSType
name: Excel.StyleCollection
uid: 'excel!Excel.StyleCollection:interface'
package: excel!
fullName: Excel.StyleCollection
summary: Represents a collection of all the styles.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: add(name)
    uid: 'excel!Excel.StyleCollection#add:member(1)'
    package: excel!
    fullName: add(name)
    summary: Adds a new style to the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'add(name: string): void;'
      parameters:
        - id: name
          description: Name of the style to be added.
          type: string
      return:
        type: void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          }
          ```
  - name: getCount()
    uid: 'excel!Excel.StyleCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: Gets the number of styles in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type: '<xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;'
        description: ''
  - name: getItem(name)
    uid: 'excel!Excel.StyleCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(name)
    summary: Gets a style by name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(name: string): Style;'
      parameters:
        - id: name
          description: Name of the style to be retrieved.
          type: string
      return:
        type: '<xref uid="excel!Excel.Style:interface" />'
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          }
          ```
  - name: getItemAt(index)
    uid: 'excel!Excel.StyleCollection#getItemAt:member(1)'
    package: excel!
    fullName: getItemAt(index)
    summary: Gets a style based on its position in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): Style;'
      parameters:
        - id: index
          description: Index value of the style object to be retrieved. Zero-indexed.
          type: number
      return:
        type: '<xref uid="excel!Excel.Style:interface" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.StyleCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
