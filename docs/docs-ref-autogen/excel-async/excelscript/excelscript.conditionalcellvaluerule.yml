### YamlMime:TSType
name: Excel.ConditionalCellValueRule
uid: 'excel!Excel.ConditionalCellValueRule:interface'
package: excel!
fullName: Excel.ConditionalCellValueRule
summary: Represents a cell value conditional format rule.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: formula1
    uid: 'excel!Excel.ConditionalCellValueRule#formula1:member'
    package: excel!
    fullName: formula1
    summary: 'The formula, if required, to evaluate the conditional format rule on.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula1: string;'
      return:
        type: string
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B21:E23");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          }
          ```
  - name: formula2
    uid: 'excel!Excel.ConditionalCellValueRule#formula2:member'
    package: excel!
    fullName: formula2
    summary: 'The formula, if required, to evaluate the conditional format rule on.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'formula2?: string;'
      return:
        type: string
  - name: operator
    uid: 'excel!Excel.ConditionalCellValueRule#operator:member'
    package: excel!
    fullName: operator
    summary: The operator of the cell value conditional format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        operator:
                    | ConditionalCellValueOperator
                    | "Invalid"
                    | "Between"
                    | "NotBetween"
                    | "EqualTo"
                    | "NotEqualTo"
                    | "GreaterThan"
                    | "LessThan"
                    | "GreaterThanOrEqual"
                    | "LessThanOrEqual";
      return:
        type: |-
          | <xref uid="excel!Excel.ConditionalCellValueOperator:enum" />
                      | "Invalid"
                      | "Between"
                      | "NotBetween"
                      | "EqualTo"
                      | "NotEqualTo"
                      | "GreaterThan"
                      | "LessThan"
                      | "GreaterThanOrEqual"
                      | "LessThanOrEqual"
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B21:E23");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          }
          ```
