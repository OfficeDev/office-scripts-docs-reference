### YamlMime:TSType
name: Excel.CommentReplyCollection
uid: 'excel!Excel.CommentReplyCollection:interface'
package: excel!
fullName: Excel.CommentReplyCollection
summary: Represents a collection of comment reply objects that are part of the comment.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'add(content, contentType)'
    uid: 'excel!Excel.CommentReplyCollection#add:member(1)'
    package: excel!
    fullName: 'add(content, contentType)'
    summary: Creates a comment reply for comment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        add(
                    content: CommentRichContent | string,
                    contentType?: ContentType | "Plain" | "Mention"
                ): CommentReply;
      parameters:
        - id: content
          description: >-
            The comment's content. This can be either a string or Interface
            CommentRichContent (e.g., for comments with mentions).
          type: '<xref uid="excel!Excel.CommentRichContent:interface" /> | string'
        - id: contentType
          description: >-
            Optional. The type of content contained within the comment. The
            default value is enum `ContentType.Plain`<!-- -->.
          type: |-
            <xref uid="excel!Excel.ContentType:enum" /> | "Plain" | "Mention"
                    
      return:
        type: '<xref uid="excel!Excel.CommentReply:interface" />'
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              // Adds a reply to the first comment in this worksheet.
              let sheet = context.workbook.worksheets.getItem("Comments");
              let comment = sheet.comments.getItemAt(0);
              comment.replies.add("Add content to this worksheet.");
              await context.sync();
          }
          ```
  - name: getCount()
    uid: 'excel!Excel.CommentReplyCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: Gets the number of comment replies in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type: '<xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;'
        description: ''
  - name: getItem(commentReplyId)
    uid: 'excel!Excel.CommentReplyCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(commentReplyId)
    summary: Returns a comment reply identified by its ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(commentReplyId: string): CommentReply;'
      parameters:
        - id: commentReplyId
          description: The identifier for the comment reply.
          type: string
      return:
        type: '<xref uid="excel!Excel.CommentReply:interface" />'
        description: ''
  - name: getItemAt(index)
    uid: 'excel!Excel.CommentReplyCollection#getItemAt:member(1)'
    package: excel!
    fullName: getItemAt(index)
    summary: Gets a comment reply based on its position in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): CommentReply;'
      parameters:
        - id: index
          description: >-
            The index value of the comment reply to be retrieved. The collection
            uses zero-based indexing.
          type: number
      return:
        type: '<xref uid="excel!Excel.CommentReply:interface" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.CommentReplyCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
