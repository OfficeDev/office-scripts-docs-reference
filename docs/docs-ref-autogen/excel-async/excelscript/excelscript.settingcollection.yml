### YamlMime:TSType
name: Excel.SettingCollection
uid: 'excel!Excel.SettingCollection:interface'
package: excel!
fullName: Excel.SettingCollection
summary: >-
  Represents a collection of key-value pair setting objects that are part of the
  workbook. The scope is limited to per file and add-in (task-pane or content)
  combination.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'add(key, value)'
    uid: 'excel!Excel.SettingCollection#add:member(1)'
    package: excel!
    fullName: 'add(key, value)'
    summary: Sets or adds the specified setting to the workbook.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        add(
                    key: string,
                    value: string | number | boolean | Date | Array<any> | any
                ): Setting;
      parameters:
        - id: key
          description: The Key of the new setting.
          type: string
        - id: value
          description: The Value for the new setting.
          type: |-
            string | number | boolean | Date | Array&lt;any&gt; | any
                    
      return:
        type: '<xref uid="excel!Excel.Setting:interface" />'
        description: ''
  - name: getCount()
    uid: 'excel!Excel.SettingCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: Gets the number of Settings in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type: '<xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;'
        description: ''
  - name: getItem(key)
    uid: 'excel!Excel.SettingCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(key)
    summary: Gets a Setting entry via the key.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(key: string): Setting;'
      parameters:
        - id: key
          description: Key of the setting.
          type: string
      return:
        type: '<xref uid="excel!Excel.Setting:interface" />'
        description: ''
  - name: getItemOrNullObject(key)
    uid: 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
    package: excel!
    fullName: getItemOrNullObject(key)
    summary: >-
      Gets a Setting entry via the key. If the Setting does not exist, will
      return a null object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemOrNullObject(key: string): Setting;'
      parameters:
        - id: key
          description: The key of the setting.
          type: string
      return:
        type: '<xref uid="excel!Excel.Setting:interface" />'
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          }
          ```
  - name: load(propertyNames)
    uid: 'excel!Excel.SettingCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
