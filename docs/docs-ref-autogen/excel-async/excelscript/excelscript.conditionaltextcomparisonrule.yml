### YamlMime:TSType
name: Excel.ConditionalTextComparisonRule
uid: 'excel!Excel.ConditionalTextComparisonRule:interface'
package: excel!
fullName: Excel.ConditionalTextComparisonRule
summary: Represents a Cell Value Conditional Format Rule
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: operator
    uid: 'excel!Excel.ConditionalTextComparisonRule#operator:member'
    package: excel!
    fullName: operator
    summary: The operator of the text conditional format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        operator:
                    | ConditionalTextOperator
                    | "Invalid"
                    | "Contains"
                    | "NotContains"
                    | "BeginsWith"
                    | "EndsWith";
      return:
        type: |-
          | <xref uid="excel!Excel.ConditionalTextOperator:enum" />
                      | "Invalid"
                      | "Contains"
                      | "NotContains"
                      | "BeginsWith"
                      | "EndsWith"
  - name: text
    uid: 'excel!Excel.ConditionalTextComparisonRule#text:member'
    package: excel!
    fullName: text
    summary: The Text value of conditional format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text: string;'
      return:
        type: string
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B16:D18");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          }
          ```
