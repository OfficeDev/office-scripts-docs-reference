### YamlMime:TSType
name: Excel.ConditionalRangeBorderCollection
uid: 'excel!Excel.ConditionalRangeBorderCollection:interface'
package: excel!
fullName: Excel.ConditionalRangeBorderCollection
summary: Represents the border objects that make up range border.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: bottom
    uid: 'excel!Excel.ConditionalRangeBorderCollection#bottom:member'
    package: excel!
    fullName: bottom
    summary: Gets the bottom border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly bottom: ConditionalRangeBorder;'
      return:
        type: '<xref uid="excel!Excel.ConditionalRangeBorder:interface" />'
  - name: count
    uid: 'excel!Excel.ConditionalRangeBorderCollection#count:member'
    package: excel!
    fullName: count
    summary: Number of border objects in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly count: number;'
      return:
        type: number
  - name: left
    uid: 'excel!Excel.ConditionalRangeBorderCollection#left:member'
    package: excel!
    fullName: left
    summary: Gets the left border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly left: ConditionalRangeBorder;'
      return:
        type: '<xref uid="excel!Excel.ConditionalRangeBorder:interface" />'
  - name: right
    uid: 'excel!Excel.ConditionalRangeBorderCollection#right:member'
    package: excel!
    fullName: right
    summary: Gets the right border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly right: ConditionalRangeBorder;'
      return:
        type: '<xref uid="excel!Excel.ConditionalRangeBorder:interface" />'
  - name: top
    uid: 'excel!Excel.ConditionalRangeBorderCollection#top:member'
    package: excel!
    fullName: top
    summary: Gets the top border.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly top: ConditionalRangeBorder;'
      return:
        type: '<xref uid="excel!Excel.ConditionalRangeBorder:interface" />'
methods:
  - name: getItem(index)
    uid: 'excel!Excel.ConditionalRangeBorderCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(index)
    summary: Gets a border object using its name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        getItem(
                    index:
                        | ConditionalRangeBorderIndex
                        | "EdgeTop"
                        | "EdgeBottom"
                        | "EdgeLeft"
                        | "EdgeRight"
                ): ConditionalRangeBorder;
      parameters:
        - id: index
          description: >-
            Index value of the border object to be retrieved. See
            Excel.ConditionalRangeBorderIndex for details.
          type: |-
            | <xref uid="excel!Excel.ConditionalRangeBorderIndex:enum" />
                            | "EdgeTop"
                            | "EdgeBottom"
                            | "EdgeLeft"
                            | "EdgeRight"
                    
      return:
        type: '<xref uid="excel!Excel.ConditionalRangeBorder:interface" />'
        description: ''
  - name: getItemAt(index)
    uid: 'excel!Excel.ConditionalRangeBorderCollection#getItemAt:member(1)'
    package: excel!
    fullName: getItemAt(index)
    summary: Gets a border object using its index.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): ConditionalRangeBorder;'
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type: number
      return:
        type: '<xref uid="excel!Excel.ConditionalRangeBorder:interface" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.ConditionalRangeBorderCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
