### YamlMime:TSType
name: Excel.Application
uid: 'excel!Excel.Application:interface'
package: excel!
fullName: Excel.Application
summary: Represents the Excel application that manages the workbook.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: calculationEngineVersion
    uid: 'excel!Excel.Application#calculationEngineVersion:member'
    package: excel!
    fullName: calculationEngineVersion
    summary: >-
      Returns the Excel calculation engine version used for the last full
      recalculation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type: number
  - name: calculationMode
    uid: 'excel!Excel.Application#calculationMode:member'
    package: excel!
    fullName: calculationMode
    summary: >-
      Returns the calculation mode used in the workbook, as defined by the
      constants in Excel.CalculationMode. Possible values are: `Automatic`<!--
      -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->,
      where Excel controls recalculation but ignores changes in tables;
      `Manual`<!-- -->, where calculation is done when the user requests it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        calculationMode:
                    | CalculationMode
                    | "Automatic"
                    | "AutomaticExceptTables"
                    | "Manual";
      return:
        type: |-
          | <xref uid="excel!Excel.CalculationMode:enum" />
                      | "Automatic"
                      | "AutomaticExceptTables"
                      | "Manual"
  - name: calculationState
    uid: 'excel!Excel.Application#calculationState:member'
    package: excel!
    fullName: calculationState
    summary: >-
      Returns the calculation state of the application. See
      Excel.CalculationState for details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        readonly calculationState:
                    | CalculationState
                    | "Done"
                    | "Calculating"
                    | "Pending";
      return:
        type: |-
          | <xref uid="excel!Excel.CalculationState:enum" />
                      | "Done"
                      | "Calculating"
                      | "Pending"
  - name: cultureInfo
    uid: 'excel!Excel.Application#cultureInfo:member'
    package: excel!
    fullName: cultureInfo
    summary: >-
      Provides information based on current system culture settings. This
      includes the culture names, number formatting, and other culturally
      dependent settings.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly cultureInfo: CultureInfo;'
      return:
        type: '<xref uid="excel!Excel.CultureInfo:interface" />'
  - name: decimalSeparator
    uid: 'excel!Excel.Application#decimalSeparator:member'
    package: excel!
    fullName: decimalSeparator
    summary: >-
      Gets the string used as the decimal separator for numeric values. This is
      based on Excel's local settings.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly decimalSeparator: string;'
      return:
        type: string
  - name: iterativeCalculation
    uid: 'excel!Excel.Application#iterativeCalculation:member'
    package: excel!
    fullName: iterativeCalculation
    summary: >-
      Returns the Iterative Calculation settings. In Excel on Windows and Mac,
      the settings will apply to the Excel Application. In Excel on the web and
      other platforms, the settings will apply to the active workbook.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly iterativeCalculation: IterativeCalculation;'
      return:
        type: '<xref uid="excel!Excel.IterativeCalculation:interface" />'
  - name: thousandsSeparator
    uid: 'excel!Excel.Application#thousandsSeparator:member'
    package: excel!
    fullName: thousandsSeparator
    summary: >-
      Gets the string used to separate groups of digits to the left of the
      decimal for numeric values. This is based on Excel's local settings.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly thousandsSeparator: string;'
      return:
        type: string
  - name: useSystemSeparators
    uid: 'excel!Excel.Application#useSystemSeparators:member'
    package: excel!
    fullName: useSystemSeparators
    summary: >-
      Specifies if the system separators of Excel are enabled. System separators
      include the decimal separator and thousands separator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly useSystemSeparators: boolean;'
      return:
        type: boolean
methods:
  - name: calculate(calculationType)
    uid: 'excel!Excel.Application#calculate:member(1)'
    package: excel!
    fullName: calculate(calculationType)
    summary: Recalculate all currently opened workbooks in Excel.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        calculate(
                    calculationType:
                        | CalculationType
                        | "Recalculate"
                        | "Full"
                        | "FullRebuild"
                ): void;
      parameters:
        - id: calculationType
          description: >-
            Specifies the calculation type to use. See Excel.CalculationType for
            details.
          type: |-
            | <xref uid="excel!Excel.CalculationType:enum" />
                            | "Recalculate"
                            | "Full"
                            | "FullRebuild"
                    
      return:
        type: void
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.Application#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
  - name: suspendApiCalculationUntilNextSync()
    uid: 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
    package: excel!
    fullName: suspendApiCalculationUntilNextSync()
    summary: >-
      Suspends calculation until the next "context.sync()" is called. Once set,
      it is the developer's responsibility to re-calc the workbook, to ensure
      that any dependencies are propagated.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suspendApiCalculationUntilNextSync(): void;'
      return:
        type: void
        description: ''
  - name: suspendScreenUpdatingUntilNextSync()
    uid: 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
    package: excel!
    fullName: suspendScreenUpdatingUntilNextSync()
    summary: >-
      Suspends screen updating until the next `context.sync()` is called.


      **Note**: Don't call `suspendScreenUpdatingUntilNextSync` repeatedly (such
      as in a loop). Repeated calls will cause the Excel window to flicker.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suspendScreenUpdatingUntilNextSync(): void;'
      return:
        type: void
        description: ''
