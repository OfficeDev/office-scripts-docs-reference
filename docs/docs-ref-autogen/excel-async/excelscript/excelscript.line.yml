### YamlMime:TSType
name: Excel.Line
uid: 'excel!Excel.Line:interface'
package: excel!
fullName: Excel.Line
summary: >-
  Represents a line inside a worksheet. To get the corresponding Shape object,
  use `Line.shape`<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: beginArrowheadLength
    uid: 'excel!Excel.Line#beginArrowheadLength:member'
    package: excel!
    fullName: beginArrowheadLength
    summary: >-
      Represents the length of the arrowhead at the beginning of the specified
      line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beginArrowheadLength: ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type: >-
          <xref uid="excel!Excel.ArrowheadLength:enum" /> | "Short" | "Medium" |
          "Long"
  - name: beginArrowheadStyle
    uid: 'excel!Excel.Line#beginArrowheadStyle:member'
    package: excel!
    fullName: beginArrowheadStyle
    summary: >-
      Represents the style of the arrowhead at the beginning of the specified
      line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        beginArrowheadStyle:
                    | ArrowheadStyle
                    | "None"
                    | "Triangle"
                    | "Stealth"
                    | "Diamond"
                    | "Oval"
                    | "Open";
      return:
        type: |-
          | <xref uid="excel!Excel.ArrowheadStyle:enum" />
                      | "None"
                      | "Triangle"
                      | "Stealth"
                      | "Diamond"
                      | "Oval"
                      | "Open"
  - name: beginArrowheadWidth
    uid: 'excel!Excel.Line#beginArrowheadWidth:member'
    package: excel!
    fullName: beginArrowheadWidth
    summary: >-
      Represents the width of the arrowhead at the beginning of the specified
      line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beginArrowheadWidth: ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type: >-
          <xref uid="excel!Excel.ArrowheadWidth:enum" /> | "Narrow" | "Medium" |
          "Wide"
  - name: beginConnectedShape
    uid: 'excel!Excel.Line#beginConnectedShape:member'
    package: excel!
    fullName: beginConnectedShape
    summary: >-
      Represents the shape to which the beginning of the specified line is
      attached.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly beginConnectedShape: Shape;'
      return:
        type: '<xref uid="excel!Excel.Shape:interface" />'
  - name: beginConnectedSite
    uid: 'excel!Excel.Line#beginConnectedSite:member'
    package: excel!
    fullName: beginConnectedSite
    summary: >-
      Represents the connection site to which the beginning of a connector is
      connected. Returns null when the beginning of the line is not attached to
      any shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly beginConnectedSite: number;'
      return:
        type: number
  - name: connectorType
    uid: 'excel!Excel.Line#connectorType:member'
    package: excel!
    fullName: connectorType
    summary: Represents the connector type for the line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectorType: ConnectorType | "Straight" | "Elbow" | "Curve";'
      return:
        type: >-
          <xref uid="excel!Excel.ConnectorType:enum" /> | "Straight" | "Elbow" |
          "Curve"
  - name: endArrowheadLength
    uid: 'excel!Excel.Line#endArrowheadLength:member'
    package: excel!
    fullName: endArrowheadLength
    summary: Represents the length of the arrowhead at the end of the specified line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endArrowheadLength: ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type: >-
          <xref uid="excel!Excel.ArrowheadLength:enum" /> | "Short" | "Medium" |
          "Long"
  - name: endArrowheadStyle
    uid: 'excel!Excel.Line#endArrowheadStyle:member'
    package: excel!
    fullName: endArrowheadStyle
    summary: Represents the style of the arrowhead at the end of the specified line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        endArrowheadStyle:
                    | ArrowheadStyle
                    | "None"
                    | "Triangle"
                    | "Stealth"
                    | "Diamond"
                    | "Oval"
                    | "Open";
      return:
        type: |-
          | <xref uid="excel!Excel.ArrowheadStyle:enum" />
                      | "None"
                      | "Triangle"
                      | "Stealth"
                      | "Diamond"
                      | "Oval"
                      | "Open"
  - name: endArrowheadWidth
    uid: 'excel!Excel.Line#endArrowheadWidth:member'
    package: excel!
    fullName: endArrowheadWidth
    summary: Represents the width of the arrowhead at the end of the specified line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endArrowheadWidth: ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type: >-
          <xref uid="excel!Excel.ArrowheadWidth:enum" /> | "Narrow" | "Medium" |
          "Wide"
  - name: endConnectedShape
    uid: 'excel!Excel.Line#endConnectedShape:member'
    package: excel!
    fullName: endConnectedShape
    summary: Represents the shape to which the end of the specified line is attached.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly endConnectedShape: Shape;'
      return:
        type: '<xref uid="excel!Excel.Shape:interface" />'
  - name: endConnectedSite
    uid: 'excel!Excel.Line#endConnectedSite:member'
    package: excel!
    fullName: endConnectedSite
    summary: >-
      Represents the connection site to which the end of a connector is
      connected. Returns null when the end of the line is not attached to any
      shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly endConnectedSite: number;'
      return:
        type: number
  - name: id
    uid: 'excel!Excel.Line#id:member'
    package: excel!
    fullName: id
    summary: Specifies the shape identifier.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: isBeginConnected
    uid: 'excel!Excel.Line#isBeginConnected:member'
    package: excel!
    fullName: isBeginConnected
    summary: Specifies if the beginning of the specified line is connected to a shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isBeginConnected: boolean;'
      return:
        type: boolean
  - name: isEndConnected
    uid: 'excel!Excel.Line#isEndConnected:member'
    package: excel!
    fullName: isEndConnected
    summary: Specifies if the end of the specified line is connected to a shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isEndConnected: boolean;'
      return:
        type: boolean
  - name: shape
    uid: 'excel!Excel.Line#shape:member'
    package: excel!
    fullName: shape
    summary: Returns the Shape object associated with the line.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shape: Shape;'
      return:
        type: '<xref uid="excel!Excel.Shape:interface" />'
methods:
  - name: 'connectBeginShape(shape, connectionSite)'
    uid: 'excel!Excel.Line#connectBeginShape:member(1)'
    package: excel!
    fullName: 'connectBeginShape(shape, connectionSite)'
    summary: Attaches the beginning of the specified connector to a specified shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectBeginShape(shape: Shape, connectionSite: number): void;'
      parameters:
        - id: shape
          description: The shape to connect.
          type: '<xref uid="excel!Excel.Shape:interface" />'
        - id: connectionSite
          description: >-
            The connection site on the shape to which the beginning of the
            connector is attached. Must be an integer between 0 (inclusive) and
            the connection-site count of the specified shape (exclusive).
          type: number
      return:
        type: void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          }
          ```
  - name: 'connectEndShape(shape, connectionSite)'
    uid: 'excel!Excel.Line#connectEndShape:member(1)'
    package: excel!
    fullName: 'connectEndShape(shape, connectionSite)'
    summary: Attaches the end of the specified connector to a specified shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectEndShape(shape: Shape, connectionSite: number): void;'
      parameters:
        - id: shape
          description: The shape to connect.
          type: '<xref uid="excel!Excel.Shape:interface" />'
        - id: connectionSite
          description: >-
            The connection site on the shape to which the end of the connector
            is attached. Must be an integer between 0 (inclusive) and the
            connection-site count of the specified shape (exclusive).
          type: number
      return:
        type: void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          }
          ```
  - name: disconnectBeginShape()
    uid: 'excel!Excel.Line#disconnectBeginShape:member(1)'
    package: excel!
    fullName: disconnectBeginShape()
    summary: Detaches the beginning of the specified connector from a shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disconnectBeginShape(): void;'
      return:
        type: void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          }
          ```
  - name: disconnectEndShape()
    uid: 'excel!Excel.Line#disconnectEndShape:member(1)'
    package: excel!
    fullName: disconnectEndShape()
    summary: Detaches the end of the specified connector from a shape.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disconnectEndShape(): void;'
      return:
        type: void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          }
          ```
  - name: load(propertyNames)
    uid: 'excel!Excel.Line#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
