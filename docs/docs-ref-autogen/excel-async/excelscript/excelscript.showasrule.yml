### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ShowAsRule:interface'
    name: Excel.ShowAsRule
    fullName: Excel.ShowAsRule
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ShowAsRule#baseField:member'
      - 'excel!Excel.ShowAsRule#baseItem:member'
      - 'excel!Excel.ShowAsRule#calculation:member'
  - uid: 'excel!Excel.ShowAsRule#baseField:member'
    summary: 'The base PivotField to base the ShowAs calculation, if applicable based on the ShowAsCalculation type, else null.'
    name: baseField
    fullName: baseField
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseField?: PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:interface'
  - uid: 'excel!Excel.ShowAsRule#baseItem:member'
    summary: 'The base Item to base the ShowAs calculation on, if applicable based on the ShowAsCalculation type, else null.'
    name: baseItem
    fullName: baseItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseItem?: PivotItem;'
      return:
        type:
          - 'excel!Excel.PivotItem:interface'
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              let farmDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem("Sum of Crates Sold at Farm");
              let wholesaleDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem("Sum of Crates Sold Wholesale");

              farmDataHierarchy.load("showAs");
              wholesaleDataHierarchy.load("showAs");
              await context.sync();

              // show the difference between crate sales of the "A Farms" and the other farms
              // this difference is both aggregated and shown for individual fruit types (where applicable)
              let farmShowAs = farmDataHierarchy.showAs;
              farmShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;
              farmShowAs.baseField = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm");
              farmShowAs.baseItem = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm").items.getItem("A Farms");
              farmDataHierarchy.showAs = farmShowAs;

              let wholesaleShowAs = wholesaleDataHierarchy.showAs;
              wholesaleShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;
              wholesaleShowAs.baseField = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm");
              wholesaleShowAs.baseItem = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm").items.getItem("A Farms");
              wholesaleDataHierarchy.showAs = wholesaleShowAs;
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ShowAsRule#calculation:member'
    summary: The ShowAs Calculation to use for the Data PivotField. See Excel.ShowAsCalculation for Details.
    name: calculation
    fullName: calculation
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        calculation:
                    | ShowAsCalculation
                    | "Unknown"
                    | "None"
                    | "PercentOfGrandTotal"
                    | "PercentOfRowTotal"
                    | "PercentOfColumnTotal"
                    | "PercentOfParentRowTotal"
                    | "PercentOfParentColumnTotal"
                    | "PercentOfParentTotal"
                    | "PercentOf"
                    | "RunningTotal"
                    | "PercentRunningTotal"
                    | "DifferenceFrom"
                    | "PercentDifferenceFrom"
                    | "RankAscending"
                    | "RankDecending"
                    | "Index";
      return:
        type:
          - 'excel!Excel.ShowAsRule#calculation~0:complex'
references:
  - uid: 'excel!Excel.PivotField:interface'
    name: PivotField
    fullName: Excel.PivotField
  - uid: 'excel!Excel.PivotItem:interface'
    name: PivotItem
    fullName: Excel.PivotItem
  - uid: 'excel!Excel.ShowAsRule#calculation~0:complex'
    name: |-
      | ShowAsCalculation
                  | "Unknown"
                  | "None"
                  | "PercentOfGrandTotal"
                  | "PercentOfRowTotal"
                  | "PercentOfColumnTotal"
                  | "PercentOfParentRowTotal"
                  | "PercentOfParentColumnTotal"
                  | "PercentOfParentTotal"
                  | "PercentOf"
                  | "RunningTotal"
                  | "PercentRunningTotal"
                  | "DifferenceFrom"
                  | "PercentDifferenceFrom"
                  | "RankAscending"
                  | "RankDecending"
                  | "Index"
    fullName: |-
      | Excel.ShowAsCalculation
                  | "Unknown"
                  | "None"
                  | "PercentOfGrandTotal"
                  | "PercentOfRowTotal"
                  | "PercentOfColumnTotal"
                  | "PercentOfParentRowTotal"
                  | "PercentOfParentColumnTotal"
                  | "PercentOfParentTotal"
                  | "PercentOf"
                  | "RunningTotal"
                  | "PercentRunningTotal"
                  | "DifferenceFrom"
                  | "PercentDifferenceFrom"
                  | "RankAscending"
                  | "RankDecending"
                  | "Index"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.ShowAsCalculation:enum'
        name: ShowAsCalculation
        fullName: Excel.ShowAsCalculation
      - name: |2-

                      | "Unknown"
                      | "None"
                      | "PercentOfGrandTotal"
                      | "PercentOfRowTotal"
                      | "PercentOfColumnTotal"
                      | "PercentOfParentRowTotal"
                      | "PercentOfParentColumnTotal"
                      | "PercentOfParentTotal"
                      | "PercentOf"
                      | "RunningTotal"
                      | "PercentRunningTotal"
                      | "DifferenceFrom"
                      | "PercentDifferenceFrom"
                      | "RankAscending"
                      | "RankDecending"
                      | "Index"
        fullName: |2-

                      | "Unknown"
                      | "None"
                      | "PercentOfGrandTotal"
                      | "PercentOfRowTotal"
                      | "PercentOfColumnTotal"
                      | "PercentOfParentRowTotal"
                      | "PercentOfParentColumnTotal"
                      | "PercentOfParentTotal"
                      | "PercentOf"
                      | "RunningTotal"
                      | "PercentRunningTotal"
                      | "DifferenceFrom"
                      | "PercentDifferenceFrom"
                      | "RankAscending"
                      | "RankDecending"
                      | "Index"
