### YamlMime:TSType
name: Excel.TableScopedCollection
uid: 'excel!Excel.TableScopedCollection:interface'
package: excel!
fullName: Excel.TableScopedCollection
summary: >-
  Represents a scoped collection of tables. For each table its top-left corner
  is considered its anchor location and the tables are sorted top to bottom and
  then left to right.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: getCount()
    uid: 'excel!Excel.TableScopedCollection#getCount:member(1)'
    package: excel!
    fullName: getCount()
    summary: Gets the number of tables in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type: '<xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;'
        description: ''
  - name: getFirst()
    uid: 'excel!Excel.TableScopedCollection#getFirst:member(1)'
    package: excel!
    fullName: getFirst()
    summary: >-
      Gets the first table in the collection. The tables in the collection are
      sorted top to bottom and left to right, such that top left table is the
      first table in the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirst(): Table;'
      return:
        type: '<xref uid="excel!Excel.Table:interface" />'
        description: ''
  - name: getItem(key)
    uid: 'excel!Excel.TableScopedCollection#getItem:member(1)'
    package: excel!
    fullName: getItem(key)
    summary: Gets a table by Name or ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(key: string): Table;'
      parameters:
        - id: key
          description: Name or ID of the table to be retrieved.
          type: string
      return:
        type: '<xref uid="excel!Excel.Table:interface" />'
        description: ''
  - name: load(propertyNames)
    uid: 'excel!Excel.TableScopedCollection#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
