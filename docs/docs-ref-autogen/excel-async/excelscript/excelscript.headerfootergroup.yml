### YamlMime:TSType
name: Excel.HeaderFooterGroup
uid: 'excel!Excel.HeaderFooterGroup:interface'
package: excel!
fullName: Excel.HeaderFooterGroup
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: defaultForAllPages
    uid: 'excel!Excel.HeaderFooterGroup#defaultForAllPages:member'
    package: excel!
    fullName: defaultForAllPages
    summary: >-
      The general header/footer, used for all pages unless even/odd or first
      page is specified.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly defaultForAllPages: HeaderFooter;'
      return:
        type: '<xref uid="excel!Excel.HeaderFooter:interface" />'
  - name: evenPages
    uid: 'excel!Excel.HeaderFooterGroup#evenPages:member'
    package: excel!
    fullName: evenPages
    summary: >-
      The header/footer to use for even pages, odd header/footer needs to be
      specified for odd pages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly evenPages: HeaderFooter;'
      return:
        type: '<xref uid="excel!Excel.HeaderFooter:interface" />'
  - name: firstPage
    uid: 'excel!Excel.HeaderFooterGroup#firstPage:member'
    package: excel!
    fullName: firstPage
    summary: >-
      The first page header/footer, for all other pages general or even/odd is
      used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly firstPage: HeaderFooter;'
      return:
        type: '<xref uid="excel!Excel.HeaderFooter:interface" />'
  - name: oddPages
    uid: 'excel!Excel.HeaderFooterGroup#oddPages:member'
    package: excel!
    fullName: oddPages
    summary: >-
      The header/footer to use for odd pages, even header/footer needs to be
      specified for even pages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly oddPages: HeaderFooter;'
      return:
        type: '<xref uid="excel!Excel.HeaderFooter:interface" />'
  - name: state
    uid: 'excel!Excel.HeaderFooterGroup#state:member'
    package: excel!
    fullName: state
    summary: >-
      The state by which headers/footers are set. See Excel.HeaderFooterState
      for details.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        state:
                    | HeaderFooterState
                    | "Default"
                    | "FirstAndDefault"
                    | "OddAndEven"
                    | "FirstOddAndEven";
      return:
        type: |-
          | <xref uid="excel!Excel.HeaderFooterState:enum" />
                      | "Default"
                      | "FirstAndDefault"
                      | "OddAndEven"
                      | "FirstOddAndEven"
  - name: useSheetMargins
    uid: 'excel!Excel.HeaderFooterGroup#useSheetMargins:member'
    package: excel!
    fullName: useSheetMargins
    summary: >-
      Gets or sets a flag indicating if headers/footers are aligned with the
      page margins set in the page layout options for the worksheet.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useSheetMargins: boolean;'
      return:
        type: boolean
  - name: useSheetScale
    uid: 'excel!Excel.HeaderFooterGroup#useSheetScale:member'
    package: excel!
    fullName: useSheetScale
    summary: >-
      Gets or sets a flag indicating if headers/footers should be scaled by the
      page percentage scale set in the page layout options for the worksheet.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useSheetScale: boolean;'
      return:
        type: boolean
methods:
  - name: load(propertyNames)
    uid: 'excel!Excel.HeaderFooterGroup#load:member(1)'
    package: excel!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call `context.sync()` before reading the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      parameters:
        - id: propertyNames
          description: >-
            A comma-delimited string or an array of strings that specify the
            properties to load.
          type: 'string | string[]'
      return:
        type: void
        description: ''
