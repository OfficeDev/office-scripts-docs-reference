### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SlicerItem:class'
    summary: Represents a slicer item in a slicer.
    name: Excel.SlicerItem
    fullName: Excel.SlicerItem
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.SlicerItem#context:member'
      - 'excel!Excel.SlicerItem#hasData:member'
      - 'excel!Excel.SlicerItem#isSelected:member'
      - 'excel!Excel.SlicerItem#key:member'
      - 'excel!Excel.SlicerItem#load:member(1)'
      - 'excel!Excel.SlicerItem#load:member(2)'
      - 'excel!Excel.SlicerItem#name:member'
      - 'excel!Excel.SlicerItem#set:member(1)'
  - uid: 'excel!Excel.SlicerItem#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SlicerItem#hasData:member'
    summary: True if the slicer item has data.
    name: hasData
    fullName: hasData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hasData: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.SlicerItem#isSelected:member'
    summary: >-
      True if the slicer item is selected. Setting this value will not clear other SlicerItems' selected state. By
      default, if the slicer item is the only one selected, when it is deselected, all items will be selected.
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.SlicerItem#key:member'
    summary: Represents the unique value representing the slicer item.
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.SlicerItem#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerItem;'
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SlicerItem#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.SlicerItem;
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.SlicerItem#name:member'
    summary: Represents the title displayed in the UI.
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.SlicerItem#set:member(1)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.SlicerItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.SlicerItem:class'
references:
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.SlicerItem:class'
    name: SlicerItem
    fullName: Excel.SlicerItem
