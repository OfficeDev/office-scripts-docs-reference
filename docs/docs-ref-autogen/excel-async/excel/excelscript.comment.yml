### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Comment:interface'
    summary: Represents a comment in the workbook.
    name: Excel.Comment
    fullName: Excel.Comment
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Comment#authorEmail:member'
      - 'excel!Excel.Comment#authorName:member'
      - 'excel!Excel.Comment#content:member'
      - 'excel!Excel.Comment#creationDate:member'
      - 'excel!Excel.Comment#delete:member(1)'
      - 'excel!Excel.Comment#getLocation:member(1)'
      - 'excel!Excel.Comment#id:member'
      - 'excel!Excel.Comment#load:member(1)'
      - 'excel!Excel.Comment#mentions:member'
      - 'excel!Excel.Comment#replies:member'
      - 'excel!Excel.Comment#resolved:member'
      - 'excel!Excel.Comment#richContent:member'
      - 'excel!Excel.Comment#updateMentions:member(1)'
  - uid: 'excel!Excel.Comment#authorEmail:member'
    summary: Gets the email of the comment's author.
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#authorName:member'
    summary: Gets the name of the comment's author.
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#content:member'
    summary: The comment's content. The string is plain text.
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Comments");
              let comment = sheet.comments.getItemAt(0);
              comment.content = "PLEASE add headers here.";
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Comment#creationDate:member'
    summary: >-
      Gets the creation time of the comment. Returns null if the comment was converted from a note, since the comment
      does not have a creation date.
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - '!Date:interface'
  - uid: 'excel!Excel.Comment#delete:member(1)'
    summary: Deletes the comment and all the connected replies.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### Examples

          ```typescript
          async function main(context: Excel.RequestContext) {
              context.workbook.comments.getItemByCell("Comments!A2").delete();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Comment#getLocation:member(1)'
    summary: Gets the cell where this comment is located.
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.Comment#id:member'
    summary: Specifies the comment identifier.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Comment#mentions:member'
    summary: 'Gets the entities (e.g., people) that are mentioned in comments.'
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mentions: CommentMention[];'
      return:
        type:
          - 'excel!Excel.Comment#mentions~0:complex'
  - uid: 'excel!Excel.Comment#replies:member'
    summary: Represents a collection of reply objects associated with the comment.
    name: replies
    fullName: replies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly replies: CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:interface'
  - uid: 'excel!Excel.Comment#resolved:member'
    summary: The comment thread status. A value of "true" means the comment thread is resolved.
    name: resolved
    fullName: resolved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'resolved: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Comment#richContent:member'
    summary: >-
      Gets the rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users.
      Your add-in should only use this to parse rich comment content.
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richContent: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#updateMentions:member(1)'
    summary: Updates the comment content with a specially formatted string and a list of mentions.
    name: updateMentions(contentWithMentions)
    fullName: updateMentions(contentWithMentions)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'updateMentions(contentWithMentions: CommentRichContent): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: contentWithMentions
          description: >-
            The content for the comment. This contains a specially formatted string and a list of mentions that will be
            parsed into the string when displayed by Excel.
          type:
            - 'excel!Excel.CommentRichContent:interface'
references:
  - uid: '!Date:interface'
    name: Date
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.Comment#mentions~0:complex'
    name: 'CommentMention[]'
    fullName: 'Excel.CommentMention[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentMention:interface'
        name: CommentMention
        fullName: Excel.CommentMention
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentReplyCollection:interface'
    name: CommentReplyCollection
    fullName: Excel.CommentReplyCollection
  - uid: 'excel!Excel.CommentRichContent:interface'
    name: CommentRichContent
    fullName: Excel.CommentRichContent
