### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeBorderCollection:interface'
    summary: Represents the border objects that make up range border.
    name: Excel.ConditionalRangeBorderCollection
    fullName: Excel.ConditionalRangeBorderCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeBorderCollection#bottom:member'
      - 'excel!Excel.ConditionalRangeBorderCollection#getItem:member(1)'
      - 'excel!Excel.ConditionalRangeBorderCollection#left:member'
      - 'excel!Excel.ConditionalRangeBorderCollection#load:member(1)'
      - 'excel!Excel.ConditionalRangeBorderCollection#right:member'
      - 'excel!Excel.ConditionalRangeBorderCollection#top:member'
  - uid: 'excel!Excel.ConditionalRangeBorderCollection#bottom:member'
    summary: Gets the bottom border.
    name: bottom
    fullName: bottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bottom: ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:interface'
  - uid: 'excel!Excel.ConditionalRangeBorderCollection#getItem:member(1)'
    summary: Gets a border object using its name.
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: ConditionalRangeBorderIndex): ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:interface'
        description: ''
      parameters:
        - id: index
          description: Index value of the border object to be retrieved. See Excel.ConditionalRangeBorderIndex for details.
          type:
            - 'excel!Excel.ConditionalRangeBorderIndex:enum'
  - uid: 'excel!Excel.ConditionalRangeBorderCollection#left:member'
    summary: Gets the left border.
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly left: ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:interface'
  - uid: 'excel!Excel.ConditionalRangeBorderCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeBorderCollection#right:member'
    summary: Gets the right border.
    name: right
    fullName: right
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly right: ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:interface'
  - uid: 'excel!Excel.ConditionalRangeBorderCollection#top:member'
    summary: Gets the top border.
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly top: ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:interface'
references:
  - uid: 'excel!Excel.ConditionalRangeBorder:interface'
    name: ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
  - uid: 'excel!Excel.ConditionalRangeBorderIndex:enum'
    name: ConditionalRangeBorderIndex
    fullName: Excel.ConditionalRangeBorderIndex
