### YamlMime:UniversalReference
items:
  - uid: 'excel!ExcelScript.Application:interface'
    summary: Represents the Excel application that manages the workbook.
    name: ExcelScript.Application
    fullName: ExcelScript.Application
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!ExcelScript.Application#calculate:member(1)'
      - 'excel!ExcelScript.Application#getCalculationEngineVersion:member(1)'
      - 'excel!ExcelScript.Application#getCalculationMode:member(1)'
      - 'excel!ExcelScript.Application#getCalculationState:member(1)'
      - 'excel!ExcelScript.Application#getCultureInfo:member(1)'
      - 'excel!ExcelScript.Application#getDecimalSeparator:member(1)'
      - 'excel!ExcelScript.Application#getIterativeCalculation:member(1)'
      - 'excel!ExcelScript.Application#getThousandsSeparator:member(1)'
      - 'excel!ExcelScript.Application#getUseSystemSeparators:member(1)'
      - 'excel!ExcelScript.Application#setCalculationMode:member(1)'
  - uid: 'excel!ExcelScript.Application#calculate:member(1)'
    summary: Recalculate all currently opened workbooks in Excel.
    name: calculate(calculationType)
    fullName: calculate(calculationType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationType: CalculationType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationType
          description: Specifies the calculation type to use. See Excel.CalculationType for details.
          type:
            - 'excel!ExcelScript.CalculationType:enum'
  - uid: 'excel!ExcelScript.Application#getCalculationEngineVersion:member(1)'
    summary: Returns the Excel calculation engine version used for the last full recalculation.
    name: getCalculationEngineVersion()
    fullName: getCalculationEngineVersion()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCalculationEngineVersion(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!ExcelScript.Application#getCalculationMode:member(1)'
    summary: >-
      Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode. Possible
      values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel
      controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user
      requests it.
    name: getCalculationMode()
    fullName: getCalculationMode()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCalculationMode(): CalculationMode;'
      return:
        type:
          - 'excel!ExcelScript.CalculationMode:enum'
        description: ''
  - uid: 'excel!ExcelScript.Application#getCalculationState:member(1)'
    summary: Returns the calculation state of the application. See Excel.CalculationState for details.
    name: getCalculationState()
    fullName: getCalculationState()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCalculationState(): CalculationState;'
      return:
        type:
          - 'excel!ExcelScript.CalculationState:enum'
        description: ''
  - uid: 'excel!ExcelScript.Application#getCultureInfo:member(1)'
    summary: >-
      Provides information based on current system culture settings. This includes the culture names, number formatting,
      and other culturally dependent settings.
    name: getCultureInfo()
    fullName: getCultureInfo()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCultureInfo(): CultureInfo;'
      return:
        type:
          - 'excel!ExcelScript.CultureInfo:interface'
        description: ''
  - uid: 'excel!ExcelScript.Application#getDecimalSeparator:member(1)'
    summary: Gets the string used as the decimal separator for numeric values. This is based on Excel's local settings.
    name: getDecimalSeparator()
    fullName: getDecimalSeparator()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDecimalSeparator(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'excel!ExcelScript.Application#getIterativeCalculation:member(1)'
    summary: >-
      Returns the Iterative Calculation settings. In Excel on Windows and Mac, the settings will apply to the Excel
      Application. In Excel on the web and other platforms, the settings will apply to the active workbook.
    name: getIterativeCalculation()
    fullName: getIterativeCalculation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIterativeCalculation(): IterativeCalculation;'
      return:
        type:
          - 'excel!ExcelScript.IterativeCalculation:interface'
        description: ''
  - uid: 'excel!ExcelScript.Application#getThousandsSeparator:member(1)'
    summary: >-
      Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on
      Excel's local settings.
    name: getThousandsSeparator()
    fullName: getThousandsSeparator()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getThousandsSeparator(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'excel!ExcelScript.Application#getUseSystemSeparators:member(1)'
    summary: >-
      Specifies if the system separators of Excel are enabled. System separators include the decimal separator and
      thousands separator.
    name: getUseSystemSeparators()
    fullName: getUseSystemSeparators()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUseSystemSeparators(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'excel!ExcelScript.Application#setCalculationMode:member(1)'
    summary: >-
      Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode. Possible
      values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel
      controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user
      requests it.
    name: setCalculationMode(calculationMode)
    fullName: setCalculationMode(calculationMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setCalculationMode(calculationMode: CalculationMode): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationMode
          description: ''
          type:
            - 'excel!ExcelScript.CalculationMode:enum'
references:
  - uid: 'excel!ExcelScript.CalculationType:enum'
    name: CalculationType
    fullName: ExcelScript.CalculationType
  - uid: 'excel!ExcelScript.CalculationMode:enum'
    name: CalculationMode
    fullName: ExcelScript.CalculationMode
  - uid: 'excel!ExcelScript.CalculationState:enum'
    name: CalculationState
    fullName: ExcelScript.CalculationState
  - uid: 'excel!ExcelScript.CultureInfo:interface'
    name: CultureInfo
    fullName: ExcelScript.CultureInfo
  - uid: 'excel!ExcelScript.IterativeCalculation:interface'
    name: IterativeCalculation
    fullName: ExcelScript.IterativeCalculation
