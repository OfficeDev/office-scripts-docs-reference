### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartCollection:class'
    summary: A collection of all the chart objects on a worksheet.
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.ChartCollection#add:member(1)'
      - 'excel!Excel.ChartCollection#add:member(2)'
      - 'excel!Excel.ChartCollection#context:member'
      - 'excel!Excel.ChartCollection#count:member'
      - 'excel!Excel.ChartCollection#getCount:member(1)'
      - 'excel!Excel.ChartCollection#getItem:member(1)'
      - 'excel!Excel.ChartCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.ChartCollection#items:member'
      - 'excel!Excel.ChartCollection#load:member(1)'
  - uid: 'excel!Excel.ChartCollection#add:member(1)'
    summary: Creates a new chart.
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: type
          description: Represents the type of a chart. See Excel.ChartType for details.
          type:
            - 'excel!Excel.ChartType:enum'
        - id: sourceData
          description: The Range object corresponding to the source data.
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: >-
            Optional. Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy
            for details.
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.ChartCollection#add:member(2)'
    summary: Creates a new chart.
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" |
        "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" |
        "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" |
        "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" |
        "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" |
        "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" |
        "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" |
        "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" |
        "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" |
        "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" |
        "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" |
        "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" |
        "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" |
        "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel",
        sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: typeString
          description: Represents the type of a chart. See Excel.ChartType for details.
          type:
            - >-
              "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" |
              "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" |
              "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" |
              "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie"
              | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" |
              "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" |
              "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" |
              "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" |
              "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" |
              "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" |
              "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" |
              "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" |
              "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line"
              | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" |
              "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
        - id: sourceData
          description: The Range object corresponding to the source data.
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: >-
            Optional. Specifies the way columns or rows are used as data series on the chart. See Excel.ChartSeriesBy
            for details.
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.ChartCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartCollection#count:member'
    summary: Returns the number of charts in the worksheet. Read-only.
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartCollection#getCount:member(1)'
    summary: Returns the number of charts in the worksheet.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartCollection#getItem:member(1)'
    summary: 'Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.'
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: Name of the chart to be retrieved.
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#getItemAt:member(1)'
    summary: Gets a chart based on its position in the collection.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
    summary: >-
      Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If
      the chart does not exist, will return a null object.
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: Name of the chart to be retrieved.
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'excel!Excel.ChartCollection#items~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Chart:class'
    name: Chart
    fullName: Excel.Chart
  - uid: 'excel!Excel.ChartType:enum'
    name: ChartType
    fullName: Excel.ChartType
  - uid: 'excel!Excel.Range:class'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.ChartSeriesBy:enum'
    name: ChartSeriesBy
    fullName: Excel.ChartSeriesBy
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.ChartCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartCollection#items~0:complex'
    name: 'Excel.Chart[]'
    fullName: 'Excel.Chart[]'
    spec.typeScript:
      - uid: 'excel!Excel.Chart:class'
        name: Excel.Chart
        fullName: Excel.Chart
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartCollection:class'
    name: ChartCollection
    fullName: Excel.ChartCollection
