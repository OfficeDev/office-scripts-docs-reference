### YamlMime:UniversalReference
items:
  - uid: 'excel!ExcelScript.DateTimeDataValidation:interface'
    summary: Represents the Date data validation criteria.
    name: ExcelScript.DateTimeDataValidation
    fullName: ExcelScript.DateTimeDataValidation
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!ExcelScript.DateTimeDataValidation#formula1:member'
      - 'excel!ExcelScript.DateTimeDataValidation#formula2:member'
      - 'excel!ExcelScript.DateTimeDataValidation#operator:member'
  - uid: 'excel!ExcelScript.DateTimeDataValidation#formula1:member'
    summary: >-
      Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the
      left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and
      NotBetween, specifies the lower bound operand. When setting the value, it can be passed in as a Date, a Range
      object, or a string formula (where the string is either a stringified date/time in ISO8601 format, a cell
      reference like "=A1", or a formula like "=MIN(A1, B1)"). When retrieving the value, it will always be returned as
      a string formula, for example: "=10", "=A1", "=SUM(A1:B5)", etc.
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string | Date | Range;'
      return:
        type:
          - 'excel!ExcelScript.DateTimeDataValidation#formula1~0:complex'
  - uid: 'excel!ExcelScript.DateTimeDataValidation#formula2:member'
    summary: >-
      With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary
      operators, such as GreaterThan. When setting the value, it can be passed in as a Date, a Range object, or a string
      (where the string is either a stringified date/time in ISO8601 format, a cell reference like "=A1", or a formula
      like "=MIN(A1, B1)"). When retrieving the value, it will always be returned as a string formula, for example:
      "=10", "=A1", "=SUM(A1:B5)", etc.
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string | Date | Range;'
      return:
        type:
          - 'excel!ExcelScript.DateTimeDataValidation#formula2~0:complex'
  - uid: 'excel!ExcelScript.DateTimeDataValidation#operator:member'
    summary: The operator to use for validating the data.
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: DataValidationOperator;'
      return:
        type:
          - 'excel!ExcelScript.DataValidationOperator:enum'
references:
  - uid: 'excel!ExcelScript.DateTimeDataValidation#formula1~0:complex'
    name: string | Date | Range
    fullName: string | Date | ExcelScript.Range
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!ExcelScript.Range:interface'
        name: Range
        fullName: ExcelScript.Range
  - uid: 'excel!ExcelScript.DateTimeDataValidation#formula2~0:complex'
    name: string | Date | Range
    fullName: string | Date | ExcelScript.Range
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!ExcelScript.Range:interface'
        name: Range
        fullName: ExcelScript.Range
  - uid: 'excel!ExcelScript.DataValidationOperator:enum'
    name: DataValidationOperator
    fullName: ExcelScript.DataValidationOperator
