### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Application:class'
    summary: Represents the Excel application that manages the workbook.
    name: Excel.Application
    fullName: Excel.Application
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.Application#calculate:member(1)'
      - 'excel!Excel.Application#calculate:member(2)'
      - 'excel!Excel.Application#calculationEngineVersion:member'
      - 'excel!Excel.Application#calculationMode:member'
      - 'excel!Excel.Application#calculationState:member'
      - 'excel!Excel.Application#context:member'
      - 'excel!Excel.Application#iterativeCalculation:member'
      - 'excel!Excel.Application#load:member(1)'
      - 'excel!Excel.Application#load:member(2)'
      - 'excel!Excel.Application#set:member(1)'
      - 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
      - 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
  - uid: 'excel!Excel.Application#calculate:member(1)'
    summary: Recalculate all currently opened workbooks in Excel.
    name: calculate(calculationType)
    fullName: calculate(calculationType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationType: Excel.CalculationType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationType
          description: Specifies the calculation type to use. See Excel.CalculationType for details.
          type:
            - 'excel!Excel.CalculationType:enum'
  - uid: 'excel!Excel.Application#calculate:member(2)'
    summary: Recalculate all currently opened workbooks in Excel.
    name: calculate(calculationTypeStringString)
    fullName: calculate(calculationTypeStringString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationTypeStringString: "Recalculate" | "Full" | "FullRebuild"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationTypeStringString
          description: Specifies the calculation type to use. See Excel.CalculationType for details.
          type:
            - '"Recalculate" | "Full" | "FullRebuild"'
  - uid: 'excel!Excel.Application#calculationEngineVersion:member'
    summary: Returns the Excel calculation engine version used for the last full recalculation. Read-only.
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Application#calculationMode:member'
    summary: >-
      Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode. Possible
      values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel
      controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user
      requests it.
    name: calculationMode
    fullName: calculationMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
      return:
        type:
          - 'excel!Excel.Application#calculationMode~0:complex'
  - uid: 'excel!Excel.Application#calculationState:member'
    summary: Returns the calculation state of the application. See Excel.CalculationState for details. Read-only.
    name: calculationState
    fullName: calculationState
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationState: Excel.CalculationState | "Done" | "Calculating" | "Pending";'
      return:
        type:
          - 'excel!Excel.Application#calculationState~0:complex'
  - uid: 'excel!Excel.Application#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Application#iterativeCalculation:member'
    summary: >-
      Returns the Iterative Calculation settings. In Excel on Windows and Mac, the settings will apply to the Excel
      Application. In Excel on the web and other platforms, the settings will apply to the active workbook.
    name: iterativeCalculation
    fullName: iterativeCalculation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iterativeCalculation: Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
  - uid: 'excel!Excel.Application#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Application#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Application;
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Application#set:member(1)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
    summary: >-
      Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to
      re-calc the workbook, to ensure that any dependencies are propagated.
    name: suspendApiCalculationUntilNextSync()
    fullName: suspendApiCalculationUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendApiCalculationUntilNextSync(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
    summary: Suspends sceen updating until the next "context.sync()" is called.
    name: suspendScreenUpdatingUntilNextSync()
    fullName: suspendScreenUpdatingUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendScreenUpdatingUntilNextSync(): void;'
      return:
        type:
          - void
        description: ''
references:
  - uid: 'excel!Excel.CalculationType:enum'
    name: Excel.CalculationType
  - uid: 'excel!Excel.Application#calculationMode~0:complex'
    name: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    fullName: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationMode:enum'
        name: Excel.CalculationMode
        fullName: Excel.CalculationMode
      - name: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
        fullName: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
  - uid: 'excel!Excel.Application#calculationState~0:complex'
    name: Excel.CalculationState | "Done" | "Calculating" | "Pending"
    fullName: Excel.CalculationState | "Done" | "Calculating" | "Pending"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationState:enum'
        name: Excel.CalculationState
        fullName: Excel.CalculationState
      - name: ' | "Done" | "Calculating" | "Pending"'
        fullName: ' | "Done" | "Calculating" | "Pending"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.IterativeCalculation:class'
    name: Excel.IterativeCalculation
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
