### YamlMime:UniversalReference
items:
  - uid: 'excel!ExcelScript.Slicer:interface'
    summary: Represents a slicer object in the workbook.
    name: ExcelScript.Slicer
    fullName: ExcelScript.Slicer
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!ExcelScript.Slicer#clearFilters:member(1)'
      - 'excel!ExcelScript.Slicer#delete:member(1)'
      - 'excel!ExcelScript.Slicer#getCaption:member(1)'
      - 'excel!ExcelScript.Slicer#getHeight:member(1)'
      - 'excel!ExcelScript.Slicer#getId:member(1)'
      - 'excel!ExcelScript.Slicer#getIsFilterCleared:member(1)'
      - 'excel!ExcelScript.Slicer#getLeft:member(1)'
      - 'excel!ExcelScript.Slicer#getName:member(1)'
      - 'excel!ExcelScript.Slicer#getSelectedItems:member(1)'
      - 'excel!ExcelScript.Slicer#getSlicerItem:member(1)'
      - 'excel!ExcelScript.Slicer#getSlicerItems:member(1)'
      - 'excel!ExcelScript.Slicer#getSortBy:member(1)'
      - 'excel!ExcelScript.Slicer#getStyle:member(1)'
      - 'excel!ExcelScript.Slicer#getTop:member(1)'
      - 'excel!ExcelScript.Slicer#getWidth:member(1)'
      - 'excel!ExcelScript.Slicer#getWorksheet:member(1)'
      - 'excel!ExcelScript.Slicer#selectItems:member(1)'
      - 'excel!ExcelScript.Slicer#setCaption:member(1)'
      - 'excel!ExcelScript.Slicer#setHeight:member(1)'
      - 'excel!ExcelScript.Slicer#setLeft:member(1)'
      - 'excel!ExcelScript.Slicer#setName:member(1)'
      - 'excel!ExcelScript.Slicer#setSortBy:member(1)'
      - 'excel!ExcelScript.Slicer#setStyle:member(1)'
      - 'excel!ExcelScript.Slicer#setTop:member(1)'
      - 'excel!ExcelScript.Slicer#setWidth:member(1)'
  - uid: 'excel!ExcelScript.Slicer#clearFilters:member(1)'
    summary: Clears all the filters currently applied on the slicer.
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!ExcelScript.Slicer#delete:member(1)'
    summary: Deletes the slicer.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getCaption:member(1)'
    summary: Represents the caption of slicer.
    name: getCaption()
    fullName: getCaption()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCaption(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getHeight:member(1)'
    summary: >-
      Represents the height, in points, of the slicer. Throws an "The argument is invalid or missing or has an incorrect
      format." exception when set with negative value or zero as input.
    name: getHeight()
    fullName: getHeight()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeight(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getId:member(1)'
    summary: Represents the unique id of slicer.
    name: getId()
    fullName: getId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getId(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getIsFilterCleared:member(1)'
    summary: True if all filters currently applied on the slicer are cleared.
    name: getIsFilterCleared()
    fullName: getIsFilterCleared()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIsFilterCleared(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getLeft:member(1)'
    summary: >-
      Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an "The
      argument is invalid or missing or has an incorrect format." exception when set with negative value as input.
    name: getLeft()
    fullName: getLeft()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLeft(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getName:member(1)'
    summary: Represents the name of slicer.
    name: getName()
    fullName: getName()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getName(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getSelectedItems:member(1)'
    summary: Returns an array of selected items' keys.
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): string[];'
      return:
        type:
          - 'string[]'
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getSlicerItem:member(1)'
    summary: 'Gets a slicer item using its key or name. If the slicer item does not exist, will return a null object.'
    name: getSlicerItem(key)
    fullName: getSlicerItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSlicerItem(key: string): SlicerItem | undefined;'
      return:
        type:
          - 'excel!ExcelScript.Slicer#getSlicerItem~0:complex'
        description: ''
      parameters:
        - id: key
          description: Key or name of the slicer to be retrieved.
          type:
            - string
  - uid: 'excel!ExcelScript.Slicer#getSlicerItems:member(1)'
    summary: Represents the collection of SlicerItems that are part of the slicer.
    name: getSlicerItems()
    fullName: getSlicerItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSlicerItems(): SlicerItem[];'
      return:
        type:
          - 'excel!ExcelScript.Slicer#getSlicerItems~0:complex'
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getSortBy:member(1)'
    summary: >-
      Represents the sort order of the items in the slicer. Possible values are: "DataSourceOrder", "Ascending",
      "Descending".
    name: getSortBy()
    fullName: getSortBy()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSortBy(): SlicerSortType;'
      return:
        type:
          - 'excel!ExcelScript.SlicerSortType:enum'
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getStyle:member(1)'
    summary: >-
      Constant value that represents the Slicer style. Possible values are: "SlicerStyleLight1" through
      "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".
      A custom user-defined style present in the workbook can also be specified.
    name: getStyle()
    fullName: getStyle()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getStyle(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getTop:member(1)'
    summary: >-
      Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an "The
      argument is invalid or missing or has an incorrect format." exception when set with negative value as input.
    name: getTop()
    fullName: getTop()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTop(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getWidth:member(1)'
    summary: >-
      Represents the width, in points, of the slicer. Throws an "The argument is invalid or missing or has an incorrect
      format." exception when set with negative value or zero as input.
    name: getWidth()
    fullName: getWidth()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWidth(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!ExcelScript.Slicer#getWorksheet:member(1)'
    summary: Represents the worksheet containing the slicer.
    name: getWorksheet()
    fullName: getWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWorksheet(): Worksheet;'
      return:
        type:
          - 'excel!ExcelScript.Worksheet:interface'
        description: ''
  - uid: 'excel!ExcelScript.Slicer#selectItems:member(1)'
    summary: >-
      Selects slicer items based on their keys. The previous selections are cleared. All items will be selected by
      default if the array is empty.
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: items
          description: Optional. The specified slicer item names to be selected.
          type:
            - 'string[]'
  - uid: 'excel!ExcelScript.Slicer#setCaption:member(1)'
    summary: Represents the caption of slicer.
    name: setCaption(caption)
    fullName: setCaption(caption)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setCaption(caption: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: caption
          description: ''
          type:
            - string
  - uid: 'excel!ExcelScript.Slicer#setHeight:member(1)'
    summary: >-
      Represents the height, in points, of the slicer. Throws an "The argument is invalid or missing or has an incorrect
      format." exception when set with negative value or zero as input.
    name: setHeight(height)
    fullName: setHeight(height)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setHeight(height: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: height
          description: ''
          type:
            - number
  - uid: 'excel!ExcelScript.Slicer#setLeft:member(1)'
    summary: >-
      Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an "The
      argument is invalid or missing or has an incorrect format." exception when set with negative value as input.
    name: setLeft(left)
    fullName: setLeft(left)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLeft(left: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: left
          description: ''
          type:
            - number
  - uid: 'excel!ExcelScript.Slicer#setName:member(1)'
    summary: Represents the name of slicer.
    name: setName(name)
    fullName: setName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setName(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: 'excel!ExcelScript.Slicer#setSortBy:member(1)'
    summary: >-
      Represents the sort order of the items in the slicer. Possible values are: "DataSourceOrder", "Ascending",
      "Descending".
    name: setSortBy(sortBy)
    fullName: setSortBy(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSortBy(sortBy: SlicerSortType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: ''
          type:
            - 'excel!ExcelScript.SlicerSortType:enum'
  - uid: 'excel!ExcelScript.Slicer#setStyle:member(1)'
    summary: >-
      Constant value that represents the Slicer style. Possible values are: "SlicerStyleLight1" through
      "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".
      A custom user-defined style present in the workbook can also be specified.
    name: setStyle(style)
    fullName: setStyle(style)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setStyle(style: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: style
          description: ''
          type:
            - string
  - uid: 'excel!ExcelScript.Slicer#setTop:member(1)'
    summary: >-
      Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an "The
      argument is invalid or missing or has an incorrect format." exception when set with negative value as input.
    name: setTop(top)
    fullName: setTop(top)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTop(top: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: top
          description: ''
          type:
            - number
  - uid: 'excel!ExcelScript.Slicer#setWidth:member(1)'
    summary: >-
      Represents the width, in points, of the slicer. Throws an "The argument is invalid or missing or has an incorrect
      format." exception when set with negative value or zero as input.
    name: setWidth(width)
    fullName: setWidth(width)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setWidth(width: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: width
          description: ''
          type:
            - number
references:
  - uid: 'excel!ExcelScript.Slicer#getSlicerItem~0:complex'
    name: SlicerItem | undefined
    fullName: ExcelScript.SlicerItem | undefined
    spec.typeScript:
      - uid: 'excel!ExcelScript.SlicerItem:interface'
        name: SlicerItem
        fullName: ExcelScript.SlicerItem
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'excel!ExcelScript.Slicer#getSlicerItems~0:complex'
    name: 'SlicerItem[]'
    fullName: 'ExcelScript.SlicerItem[]'
    spec.typeScript:
      - uid: 'excel!ExcelScript.SlicerItem:interface'
        name: SlicerItem
        fullName: ExcelScript.SlicerItem
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!ExcelScript.SlicerSortType:enum'
    name: SlicerSortType
    fullName: ExcelScript.SlicerSortType
  - uid: 'excel!ExcelScript.Worksheet:interface'
    name: Worksheet
    fullName: ExcelScript.Worksheet
