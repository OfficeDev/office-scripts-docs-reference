### YamlMime:TSType
name: ExcelScript.TableColumn
uid: 'ExcelScript!ExcelScript.TableColumn:interface'
package: ExcelScript!
fullName: ExcelScript.TableColumn
summary: Represents a column in a table.
remarks: |-


  #### Examples

  ```TypeScript
  /**
   * This script shows how to get the range of a table column.
   */
  function main(workbook: ExcelScript.Workbook) {
    // Get the first table in the workbook.
    const table = workbook.getTables()[0];

    // Get the range of the table column named "Type".
    const typeColumn : ExcelScript.TableColumn = table.getColumn("Type");
    const range = typeColumn.getRange();

    // Do something with the range...
  }
  ```
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: delete()
    uid: 'ExcelScript!ExcelScript.TableColumn#delete:member(1)'
    package: ExcelScript!
    fullName: delete()
    summary: Deletes the column from the table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script removes a specific column from a table.
           */
          function main(workbook: ExcelScript.Workbook) {
              // Get the table named "Inventory".
              const table = workbook.getTable("Inventory");

              // If it exists, remove the column named "Category".
              let categoryColumn = table.getColumnByName("Category");
              if (categoryColumn) {
                  categoryColumn.delete();
              }
          }
          ```
  - name: getFilter()
    uid: 'ExcelScript!ExcelScript.TableColumn#getFilter:member(1)'
    package: ExcelScript!
    fullName: getFilter()
    summary: Retrieves the filter applied to the column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFilter(): Filter;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Filter:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script adds a table filter to only show the top 10% of values 
           * belonging to a particular column.
           */
          function main(workbook: ExcelScript.Workbook) {
              // Get the first table on the current worksheet.
              const table = workbook.getActiveWorksheet().getTables()[0];

              // Get the filter for the "PageViews" table column.
              const pageViewFilter = table.getColumnByName("PageViews").getFilter();

              // Apply a filter to only show the rows with the top 10% of values in this column.
              pageViewFilter.applyTopPercentFilter(10);
          }
          ```
  - name: getHeaderRowRange()
    uid: 'ExcelScript!ExcelScript.TableColumn#getHeaderRowRange:member(1)'
    package: ExcelScript!
    fullName: getHeaderRowRange()
    summary: Gets the range object associated with the header row of the column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getHeaderRowRange(): Range;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
        description: ''
  - name: getId()
    uid: 'ExcelScript!ExcelScript.TableColumn#getId:member(1)'
    package: ExcelScript!
    fullName: getId()
    summary: Returns a unique key that identifies the column within the table.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getId(): number;'
      return:
        type: number
        description: ''
  - name: getIndex()
    uid: 'ExcelScript!ExcelScript.TableColumn#getIndex:member(1)'
    package: ExcelScript!
    fullName: getIndex()
    summary: Returns the index number of the column within the columns collection of the table. Zero-indexed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getIndex(): number;'
      return:
        type: number
        description: ''
  - name: getName()
    uid: 'ExcelScript!ExcelScript.TableColumn#getName:member(1)'
    package: ExcelScript!
    fullName: getName()
    summary: Specifies the name of the table column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getName(): string;'
      return:
        type: string
        description: ''
  - name: getRange()
    uid: 'ExcelScript!ExcelScript.TableColumn#getRange:member(1)'
    package: ExcelScript!
    fullName: getRange()
    summary: Gets the range object associated with the entire column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRange(): Range;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
        description: ''
  - name: getRangeBetweenHeaderAndTotal()
    uid: 'ExcelScript!ExcelScript.TableColumn#getRangeBetweenHeaderAndTotal:member(1)'
    package: ExcelScript!
    fullName: getRangeBetweenHeaderAndTotal()
    summary: Gets the range object associated with the data body of the column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRangeBetweenHeaderAndTotal(): Range;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script adds a new column to a table.
           * It then sets the formulas in the new column to be the product
           * of the values in the two preceding columns.
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the first table in the workbook.
            const table = workbook.getTables()[0];

            // Append an empty column to the table with the header "Total". 
            const totalColumn = table.addColumn(-1, null, "Total");

            // Get the names of the two preceding columns.
            const productColumnName1 = table.getColumns()[totalColumn.getIndex() - 1].getName();
            const productColumnName2 = table.getColumns()[totalColumn.getIndex() - 2].getName();
            
            // Set the formulas in the "Total" column to be the product of the two preceding columns.
            totalColumn.getRangeBetweenHeaderAndTotal().setFormula(
              `=[@[${productColumnName1}]]*[@[${productColumnName2}]]`
            );
          }
          ```
  - name: getTotalRowRange()
    uid: 'ExcelScript!ExcelScript.TableColumn#getTotalRowRange:member(1)'
    package: ExcelScript!
    fullName: getTotalRowRange()
    summary: Gets the range object associated with the totals row of the column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTotalRowRange(): Range;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script logs the value in the total row of a table column.
           */
          function main(workbook: ExcelScript.Workbook) {
              // Get the table named "Cities".
              const table = workbook.getTable("Cities");

              // Get the total row from the "Population" column.
              const column = table.getColumn("Population");
              const totalRange = column.getTotalRowRange();

              // Log the total value.
              console.log(totalRange.getValue());
          }
          ```
  - name: setName(name)
    uid: 'ExcelScript!ExcelScript.TableColumn#setName:member(1)'
    package: ExcelScript!
    fullName: setName(name)
    summary: Specifies the name of the table column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setName(name: string): void;'
      parameters:
        - id: name
          description: ''
          type: string
      return:
        type: void
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script renames a column in an existing table.
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the "Employee" table.
            const employeeTable = workbook.getTable("Employee");

            // Rename a column from "EmplID" to "Employee ID".
            const idColumn = employeeTable.getColumnByName("EmplID");
            idColumn.setName("Employee ID");
          }
          ```
