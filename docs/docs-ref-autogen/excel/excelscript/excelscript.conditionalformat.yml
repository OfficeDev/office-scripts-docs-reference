### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat:interface'
    summary: 'An object encapsulating a conditional format''s range, format, rule, and other properties.'
    name: ExcelScript.ConditionalFormat
    fullName: ExcelScript.ConditionalFormat
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.ConditionalFormat#delete:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getCustom:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getId:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getPreset:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getPriority:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getRange:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getRanges:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getStopIfTrue:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#getType:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#setPriority:member(1)'
      - 'ExcelScript!ExcelScript.ConditionalFormat#setStopIfTrue:member(1)'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#delete:member(1)'
    summary: Deletes this conditional format.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue:member(1)'
    summary: >-
      Returns the cell value conditional format properties if the current conditional format is a CellValue type. For
      example to format all cells between 5 and 10.
    name: getCellValue()
    fullName: getCellValue()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellValue(): CellValueConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale:member(1)'
    summary: Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.
    name: getColorScale()
    fullName: getColorScale()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColorScale(): ColorScaleConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCustom:member(1)'
    summary: Returns the custom conditional format properties if the current conditional format is a custom type.
    name: getCustom()
    fullName: getCustom()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCustom(): CustomConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getCustom~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar:member(1)'
    summary: Returns the data bar properties if the current conditional format is a data bar.
    name: getDataBar()
    fullName: getDataBar()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBar(): DataBarConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet:member(1)'
    summary: Returns the IconSet conditional format properties if the current conditional format is an IconSet type.
    name: getIconSet()
    fullName: getIconSet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIconSet(): IconSetConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getId:member(1)'
    summary: The Priority of the Conditional Format within the current ConditionalFormatCollection.
    name: getId()
    fullName: getId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getId(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getPreset:member(1)'
    summary: Returns the preset criteria conditional format. See ExcelScript.PresetCriteriaConditionalFormat for more details.
    name: getPreset()
    fullName: getPreset()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreset(): PresetCriteriaConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getPreset~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getPriority:member(1)'
    summary: >-
      The priority (or index) within the conditional format collection that this conditional format currently exists in.
      Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order. Use a
      negative priority to begin from the back. Priorities greater than than bounds will get and set to the maximum (or
      minimum if negative) priority. Also note that if you change the priority, you have to re-fetch a new copy of the
      object at that new priority location if you want to make further changes to it.
    name: getPriority()
    fullName: getPriority()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPriority(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getRange:member(1)'
    summary: >-
      Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to
      multiple ranges.
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.Range:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getRanges:member(1)'
    summary: 'Returns the RangeAreas, comprising one or more rectangular ranges, the conditonal format is applied to.'
    name: getRanges()
    fullName: getRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(): RangeAreas;'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeAreas:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getStopIfTrue:member(1)'
    summary: >-
      If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.
      Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these
    name: getStopIfTrue()
    fullName: getStopIfTrue()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getStopIfTrue(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison:member(1)'
    summary: >-
      Returns the specific text conditional format properties if the current conditional format is a text type. For
      example to format cells matching the word "Text".
    name: getTextComparison()
    fullName: getTextComparison()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextComparison(): TextConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom:member(1)'
    summary: >-
      Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type. For
      example to format the top 10% or bottom 10 items.
    name: getTopBottom()
    fullName: getTopBottom()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTopBottom(): TopBottomConditionalFormat | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getType:member(1)'
    summary: A type of conditional format. Only one can be set at a time.
    name: getType()
    fullName: getType()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getType(): ConditionalFormatType;'
      return:
        type:
          - 'ExcelScript!ExcelScript.ConditionalFormatType:enum'
        description: ''
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#setPriority:member(1)'
    summary: >-
      The priority (or index) within the conditional format collection that this conditional format currently exists in.
      Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order. Use a
      negative priority to begin from the back. Priorities greater than than bounds will get and set to the maximum (or
      minimum if negative) priority. Also note that if you change the priority, you have to re-fetch a new copy of the
      object at that new priority location if you want to make further changes to it.
    name: setPriority(priority)
    fullName: setPriority(priority)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPriority(priority: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: priority
          description: ''
          type:
            - number
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#setStopIfTrue:member(1)'
    summary: >-
      If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.
      Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these
    name: setStopIfTrue(stopIfTrue)
    fullName: setStopIfTrue(stopIfTrue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setStopIfTrue(stopIfTrue: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: stopIfTrue
          description: ''
          type:
            - boolean
references:
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCellValue~0:complex'
    name: CellValueConditionalFormat | undefined
    fullName: ExcelScript.CellValueConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.CellValueConditionalFormat:interface'
        name: CellValueConditionalFormat
        fullName: ExcelScript.CellValueConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getColorScale~0:complex'
    name: ColorScaleConditionalFormat | undefined
    fullName: ExcelScript.ColorScaleConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.ColorScaleConditionalFormat:interface'
        name: ColorScaleConditionalFormat
        fullName: ExcelScript.ColorScaleConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getCustom~0:complex'
    name: CustomConditionalFormat | undefined
    fullName: ExcelScript.CustomConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.CustomConditionalFormat:interface'
        name: CustomConditionalFormat
        fullName: ExcelScript.CustomConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getDataBar~0:complex'
    name: DataBarConditionalFormat | undefined
    fullName: ExcelScript.DataBarConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat:interface'
        name: DataBarConditionalFormat
        fullName: ExcelScript.DataBarConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getIconSet~0:complex'
    name: IconSetConditionalFormat | undefined
    fullName: ExcelScript.IconSetConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.IconSetConditionalFormat:interface'
        name: IconSetConditionalFormat
        fullName: ExcelScript.IconSetConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getPreset~0:complex'
    name: PresetCriteriaConditionalFormat | undefined
    fullName: ExcelScript.PresetCriteriaConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.PresetCriteriaConditionalFormat:interface'
        name: PresetCriteriaConditionalFormat
        fullName: ExcelScript.PresetCriteriaConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.Range:interface'
    name: Range
    fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.RangeAreas:interface'
    name: RangeAreas
    fullName: ExcelScript.RangeAreas
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTextComparison~0:complex'
    name: TextConditionalFormat | undefined
    fullName: ExcelScript.TextConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.TextConditionalFormat:interface'
        name: TextConditionalFormat
        fullName: ExcelScript.TextConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormat#getTopBottom~0:complex'
    name: TopBottomConditionalFormat | undefined
    fullName: ExcelScript.TopBottomConditionalFormat | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.TopBottomConditionalFormat:interface'
        name: TopBottomConditionalFormat
        fullName: ExcelScript.TopBottomConditionalFormat
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.ConditionalFormatType:enum'
    name: ConditionalFormatType
    fullName: ExcelScript.ConditionalFormatType
