### YamlMime:TSType
name: ExcelScript.TextRange
uid: 'ExcelScript!ExcelScript.TextRange:interface'
package: ExcelScript!
fullName: ExcelScript.TextRange
summary: 'Contains the text that is attached to a shape, in addition to properties and methods for manipulating the text.'
remarks: |-


  #### Examples

  ```TypeScript
  /**
   * This script adds text to a shape.
   */
  function main(workbook: ExcelScript.Workbook) {
    // Create a hexagon shape in the current worksheet.
    const sheet = workbook.getActiveWorksheet();
    const hexagon = sheet.addGeometricShape(ExcelScript.GeometricShapeType.hexagon);
    
    // Set the text of the shape.
    const hexText: ExcelScript.TextRange = hexagon.getTextFrame().getTextRange();
    hexText.setText("Forest");
  }
  ```
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: getFont()
    uid: 'ExcelScript!ExcelScript.TextRange#getFont:member(1)'
    package: ExcelScript!
    fullName: getFont()
    summary: Returns a `ShapeFont` object that represents the font attributes for the text range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFont(): ShapeFont;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ShapeFont:interface" />'
        description: ''
  - name: 'getSubstring(start, length)'
    uid: 'ExcelScript!ExcelScript.TextRange#getSubstring:member(1)'
    package: ExcelScript!
    fullName: 'getSubstring(start, length)'
    summary: Returns a TextRange object for the substring in the given range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSubstring(start: number, length?: number): TextRange;'
      parameters:
        - id: start
          description: The zero-based index of the first character to get from the text range.
          type: number
        - id: length
          description: >-
            Optional. The number of characters to be returned in the new text range. If length is omitted, all the
            characters from start to the end of the text range's last paragraph will be returned.
          type: number
      return:
        type: '<xref uid="ExcelScript!ExcelScript.TextRange:interface" />'
        description: ''
  - name: getText()
    uid: 'ExcelScript!ExcelScript.TextRange#getText:member(1)'
    package: ExcelScript!
    fullName: getText()
    summary: Represents the plain text content of the text range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getText(): string;'
      return:
        type: string
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script writes all the text from the workbook's geometric shapes in a new worksheet.
           */
          function main(workbook: ExcelScript.Workbook) {
            // Create a new worksheet.
            const shapeTextSheet = workbook.addWorksheet("ShapeText");
            let shapeTextValues: string[][] = [];

            // Get the text from every geometric shape in every worksheet.
            workbook.getWorksheets().forEach((sheet) => {
              sheet.getShapes().forEach((shape) => {
                if (shape.getType() === ExcelScript.ShapeType.geometricShape)
                shapeTextValues.push([
                  sheet.getName(),
                  shape.getGeometricShapeType().toString(),
                  shape.getTextFrame().getTextRange().getText()]);
              });
            });

            // Add the text to the new worksheet.
            const range = shapeTextSheet.getRangeByIndexes(
              0,
              0, 
              shapeTextValues.length, 
              shapeTextValues[0].length);
            range.setValues(shapeTextValues);
          }
          ```
  - name: setText(text)
    uid: 'ExcelScript!ExcelScript.TextRange#setText:member(1)'
    package: ExcelScript!
    fullName: setText(text)
    summary: Represents the plain text content of the text range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setText(text: string): void;'
      parameters:
        - id: text
          description: ''
          type: string
      return:
        type: void
        description: ''
