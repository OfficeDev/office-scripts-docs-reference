### YamlMime:TSType
name: ExcelScript.DataBarConditionalFormat
uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat:interface'
package: ExcelScript!
fullName: ExcelScript.DataBarConditionalFormat
summary: Represents an Excel conditional data bar type.
remarks: |-


  #### Examples

  ```TypeScript
  /**
   * This script creates data bar conditional formatting on the select ranged.
   * The scale of the data bar goes from 0 to 1000.
   */
  function main(workbook: ExcelScript.Workbook) {
    // Get the selected range.
    const selected = workbook.getSelectedRange();
    
    // Create new conditional formatting on the range.
    const format = selected.addConditionalFormat(ExcelScript.ConditionalFormatType.dataBar);
    const dataBarFormat: ExcelScript.DataBarConditionalFormat = format.getDataBar();

    // Set the lower bound of the data bar formatting to be 0.
    const lowerBound: ExcelScript.ConditionalDataBarRule = {
      type: ExcelScript.ConditionalFormatRuleType.number,
      formula: "0"
    };
    dataBarFormat.setLowerBoundRule(lowerBound);

    // Set the upper bound of the data bar formatting to be 1000.
    const upperBound: ExcelScript.ConditionalDataBarRule = {
      type: ExcelScript.ConditionalFormatRuleType.number,
      formula: "1000"
    };
    dataBarFormat.setUpperBoundRule(upperBound);
  }
  ```
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: getAxisColor()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getAxisColor:member(1)'
    package: ExcelScript!
    fullName: getAxisColor()
    summary: >-
      HTML color code representing the color of the Axis line, in the form \#RRGGBB (e.g., "FFA500") or as a named HTML
      color (e.g., "orange"). Value is "" (an empty string) if no axis is present or set.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAxisColor(): string;'
      return:
        type: string
        description: ''
  - name: getAxisFormat()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getAxisFormat:member(1)'
    package: ExcelScript!
    fullName: getAxisFormat()
    summary: Representation of how the axis is determined for an Excel data bar.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAxisFormat(): ConditionalDataBarAxisFormat;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarAxisFormat:enum" />'
        description: ''
  - name: getBarDirection()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getBarDirection:member(1)'
    package: ExcelScript!
    fullName: getBarDirection()
    summary: Specifies the direction that the data bar graphic should be based on.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBarDirection(): ConditionalDataBarDirection;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarDirection:enum" />'
        description: ''
  - name: getLowerBoundRule()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getLowerBoundRule:member(1)'
    package: ExcelScript!
    fullName: getLowerBoundRule()
    summary: >-
      The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar. The
      `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of
      `x.lowerBoundRule.formula = ...`<!-- -->).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLowerBoundRule(): ConditionalDataBarRule;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarRule:interface" />'
        description: ''
  - name: getNegativeFormat()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getNegativeFormat:member(1)'
    package: ExcelScript!
    fullName: getNegativeFormat()
    summary: Representation of all values to the left of the axis in an Excel data bar.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNegativeFormat(): ConditionalDataBarNegativeFormat;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarNegativeFormat:interface" />'
        description: ''
  - name: getPositiveFormat()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getPositiveFormat:member(1)'
    package: ExcelScript!
    fullName: getPositiveFormat()
    summary: Representation of all values to the right of the axis in an Excel data bar.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPositiveFormat(): ConditionalDataBarPositiveFormat;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarPositiveFormat:interface" />'
        description: ''
  - name: getShowDataBarOnly()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getShowDataBarOnly:member(1)'
    package: ExcelScript!
    fullName: getShowDataBarOnly()
    summary: 'If `true`<!-- -->, hides the values from the cells where the data bar is applied.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShowDataBarOnly(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getUpperBoundRule()
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#getUpperBoundRule:member(1)'
    package: ExcelScript!
    fullName: getUpperBoundRule()
    summary: >-
      The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar. The
      `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of
      `x.upperBoundRule.formula = ...`<!-- -->).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getUpperBoundRule(): ConditionalDataBarRule;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarRule:interface" />'
        description: ''
  - name: setAxisColor(axisColor)
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#setAxisColor:member(1)'
    package: ExcelScript!
    fullName: setAxisColor(axisColor)
    summary: >-
      HTML color code representing the color of the Axis line, in the form \#RRGGBB (e.g., "FFA500") or as a named HTML
      color (e.g., "orange"). Value is "" (an empty string) if no axis is present or set.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setAxisColor(axisColor: string): void;'
      parameters:
        - id: axisColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setAxisFormat(axisFormat)
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#setAxisFormat:member(1)'
    package: ExcelScript!
    fullName: setAxisFormat(axisFormat)
    summary: Representation of how the axis is determined for an Excel data bar.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setAxisFormat(axisFormat: ConditionalDataBarAxisFormat): void;'
      parameters:
        - id: axisFormat
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarAxisFormat:enum" />'
      return:
        type: void
        description: ''
  - name: setBarDirection(barDirection)
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#setBarDirection:member(1)'
    package: ExcelScript!
    fullName: setBarDirection(barDirection)
    summary: Specifies the direction that the data bar graphic should be based on.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setBarDirection(barDirection: ConditionalDataBarDirection): void;'
      parameters:
        - id: barDirection
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarDirection:enum" />'
      return:
        type: void
        description: ''
  - name: setLowerBoundRule(lowerBoundRule)
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#setLowerBoundRule:member(1)'
    package: ExcelScript!
    fullName: setLowerBoundRule(lowerBoundRule)
    summary: >-
      The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar. The
      `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of
      `x.lowerBoundRule.formula = ...`<!-- -->).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setLowerBoundRule(lowerBoundRule: ConditionalDataBarRule): void;'
      parameters:
        - id: lowerBoundRule
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarRule:interface" />'
      return:
        type: void
        description: ''
  - name: setShowDataBarOnly(showDataBarOnly)
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#setShowDataBarOnly:member(1)'
    package: ExcelScript!
    fullName: setShowDataBarOnly(showDataBarOnly)
    summary: 'If `true`<!-- -->, hides the values from the cells where the data bar is applied.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setShowDataBarOnly(showDataBarOnly: boolean): void;'
      parameters:
        - id: showDataBarOnly
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setUpperBoundRule(upperBoundRule)
    uid: 'ExcelScript!ExcelScript.DataBarConditionalFormat#setUpperBoundRule:member(1)'
    package: ExcelScript!
    fullName: setUpperBoundRule(upperBoundRule)
    summary: >-
      The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar. The
      `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of
      `x.upperBoundRule.formula = ...`<!-- -->).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setUpperBoundRule(upperBoundRule: ConditionalDataBarRule): void;'
      parameters:
        - id: upperBoundRule
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ConditionalDataBarRule:interface" />'
      return:
        type: void
        description: ''
