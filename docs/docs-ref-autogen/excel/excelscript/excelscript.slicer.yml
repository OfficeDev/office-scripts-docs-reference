### YamlMime:TSType
name: ExcelScript.Slicer
uid: 'ExcelScript!ExcelScript.Slicer:interface'
package: ExcelScript!
fullName: ExcelScript.Slicer
summary: Represents a `Slicer` object in the workbook.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: clearFilters()
    uid: 'ExcelScript!ExcelScript.Slicer#clearFilters:member(1)'
    package: ExcelScript!
    fullName: clearFilters()
    summary: Clears all the filters currently applied on the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearFilters(): void;'
      return:
        type: void
        description: ''
  - name: delete()
    uid: 'ExcelScript!ExcelScript.Slicer#delete:member(1)'
    package: ExcelScript!
    fullName: delete()
    summary: Deletes the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getCaption()
    uid: 'ExcelScript!ExcelScript.Slicer#getCaption:member(1)'
    package: ExcelScript!
    fullName: getCaption()
    summary: Represents the caption of the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCaption(): string;'
      return:
        type: string
        description: ''
  - name: getHeight()
    uid: 'ExcelScript!ExcelScript.Slicer#getHeight:member(1)'
    package: ExcelScript!
    fullName: getHeight()
    summary: >-
      Represents the height, in points, of the slicer. Throws an
      `InvalidArgument` exception when set with a negative value or zero as an
      input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getHeight(): number;'
      return:
        type: number
        description: ''
  - name: getId()
    uid: 'ExcelScript!ExcelScript.Slicer#getId:member(1)'
    package: ExcelScript!
    fullName: getId()
    summary: Represents the unique ID of the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getId(): string;'
      return:
        type: string
        description: ''
  - name: getIsFilterCleared()
    uid: 'ExcelScript!ExcelScript.Slicer#getIsFilterCleared:member(1)'
    package: ExcelScript!
    fullName: getIsFilterCleared()
    summary: >-
      Value is `true` if all filters currently applied on the slicer are
      cleared.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getIsFilterCleared(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getLeft()
    uid: 'ExcelScript!ExcelScript.Slicer#getLeft:member(1)'
    package: ExcelScript!
    fullName: getLeft()
    summary: >-
      Represents the distance, in points, from the left side of the slicer to
      the left of the worksheet. Throws an `InvalidArgument` error when set with
      a negative value as an input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLeft(): number;'
      return:
        type: number
        description: ''
  - name: getName()
    uid: 'ExcelScript!ExcelScript.Slicer#getName:member(1)'
    package: ExcelScript!
    fullName: getName()
    summary: Represents the name of the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getName(): string;'
      return:
        type: string
        description: ''
  - name: getSelectedItems()
    uid: 'ExcelScript!ExcelScript.Slicer#getSelectedItems:member(1)'
    package: ExcelScript!
    fullName: getSelectedItems()
    summary: Returns an array of selected items' keys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSelectedItems(): string[];'
      return:
        type: 'string[]'
        description: ''
  - name: getSlicerItem(key)
    uid: 'ExcelScript!ExcelScript.Slicer#getSlicerItem:member(1)'
    package: ExcelScript!
    fullName: getSlicerItem(key)
    summary: >-
      Gets a slicer item using its key or name. If the slicer item doesn't
      exist, then this function will return an object with its `isNullObject`
      property set to `true`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSlicerItem(key: string): SlicerItem | undefined;'
      parameters:
        - id: key
          description: Key or name of the slicer to be retrieved.
          type: string
      return:
        type: >-
          <xref uid="ExcelScript!ExcelScript.SlicerItem:interface" /> |
          undefined
        description: ''
  - name: getSlicerItems()
    uid: 'ExcelScript!ExcelScript.Slicer#getSlicerItems:member(1)'
    package: ExcelScript!
    fullName: getSlicerItems()
    summary: Represents the collection of slicer items that are part of the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSlicerItems(): SlicerItem[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.SlicerItem:interface" />[]'
        description: ''
  - name: getSortBy()
    uid: 'ExcelScript!ExcelScript.Slicer#getSortBy:member(1)'
    package: ExcelScript!
    fullName: getSortBy()
    summary: >-
      Represents the sort order of the items in the slicer. Possible values are:
      "DataSourceOrder", "Ascending", "Descending".
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSortBy(): SlicerSortType;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.SlicerSortType:enum" />'
        description: ''
  - name: getStyle()
    uid: 'ExcelScript!ExcelScript.Slicer#getStyle:member(1)'
    package: ExcelScript!
    fullName: getStyle()
    summary: >-
      Constant value that represents the slicer style. Possible values are:
      "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1"
      through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".
      A custom user-defined style present in the workbook can also be specified.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getStyle(): string;'
      return:
        type: string
        description: ''
  - name: getTop()
    uid: 'ExcelScript!ExcelScript.Slicer#getTop:member(1)'
    package: ExcelScript!
    fullName: getTop()
    summary: >-
      Represents the distance, in points, from the top edge of the slicer to the
      top of the worksheet. Throws an `InvalidArgument` error when set with a
      negative value as an input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTop(): number;'
      return:
        type: number
        description: ''
  - name: getWidth()
    uid: 'ExcelScript!ExcelScript.Slicer#getWidth:member(1)'
    package: ExcelScript!
    fullName: getWidth()
    summary: >-
      Represents the width, in points, of the slicer. Throws an
      `InvalidArgument` error when set with a negative value or zero as an
      input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getWidth(): number;'
      return:
        type: number
        description: ''
  - name: getWorksheet()
    uid: 'ExcelScript!ExcelScript.Slicer#getWorksheet:member(1)'
    package: ExcelScript!
    fullName: getWorksheet()
    summary: Represents the worksheet containing the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getWorksheet(): Worksheet;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Worksheet:interface" />'
        description: ''
  - name: selectItems(items)
    uid: 'ExcelScript!ExcelScript.Slicer#selectItems:member(1)'
    package: ExcelScript!
    fullName: selectItems(items)
    summary: >-
      Selects slicer items based on their keys. The previous selections are
      cleared. All items will be selected by default if the array is empty.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectItems(items?: string[]): void;'
      parameters:
        - id: items
          description: Optional. The specified slicer item names to be selected.
          type: 'string[]'
      return:
        type: void
        description: ''
  - name: setCaption(caption)
    uid: 'ExcelScript!ExcelScript.Slicer#setCaption:member(1)'
    package: ExcelScript!
    fullName: setCaption(caption)
    summary: Represents the caption of the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setCaption(caption: string): void;'
      parameters:
        - id: caption
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setHeight(height)
    uid: 'ExcelScript!ExcelScript.Slicer#setHeight:member(1)'
    package: ExcelScript!
    fullName: setHeight(height)
    summary: >-
      Represents the height, in points, of the slicer. Throws an
      `InvalidArgument` exception when set with a negative value or zero as an
      input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setHeight(height: number): void;'
      parameters:
        - id: height
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setLeft(left)
    uid: 'ExcelScript!ExcelScript.Slicer#setLeft:member(1)'
    package: ExcelScript!
    fullName: setLeft(left)
    summary: >-
      Represents the distance, in points, from the left side of the slicer to
      the left of the worksheet. Throws an `InvalidArgument` error when set with
      a negative value as an input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setLeft(left: number): void;'
      parameters:
        - id: left
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setName(name)
    uid: 'ExcelScript!ExcelScript.Slicer#setName:member(1)'
    package: ExcelScript!
    fullName: setName(name)
    summary: Represents the name of the slicer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setName(name: string): void;'
      parameters:
        - id: name
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setSortBy(sortBy)
    uid: 'ExcelScript!ExcelScript.Slicer#setSortBy:member(1)'
    package: ExcelScript!
    fullName: setSortBy(sortBy)
    summary: >-
      Represents the sort order of the items in the slicer. Possible values are:
      "DataSourceOrder", "Ascending", "Descending".
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSortBy(sortBy: SlicerSortType): void;'
      parameters:
        - id: sortBy
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.SlicerSortType:enum" />'
      return:
        type: void
        description: ''
  - name: setStyle(style)
    uid: 'ExcelScript!ExcelScript.Slicer#setStyle:member(1)'
    package: ExcelScript!
    fullName: setStyle(style)
    summary: >-
      Constant value that represents the slicer style. Possible values are:
      "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1"
      through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".
      A custom user-defined style present in the workbook can also be specified.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setStyle(style: string): void;'
      parameters:
        - id: style
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setTop(top)
    uid: 'ExcelScript!ExcelScript.Slicer#setTop:member(1)'
    package: ExcelScript!
    fullName: setTop(top)
    summary: >-
      Represents the distance, in points, from the top edge of the slicer to the
      top of the worksheet. Throws an `InvalidArgument` error when set with a
      negative value as an input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setTop(top: number): void;'
      parameters:
        - id: top
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setWidth(width)
    uid: 'ExcelScript!ExcelScript.Slicer#setWidth:member(1)'
    package: ExcelScript!
    fullName: setWidth(width)
    summary: >-
      Represents the width, in points, of the slicer. Throws an
      `InvalidArgument` error when set with a negative value or zero as an
      input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setWidth(width: number): void;'
      parameters:
        - id: width
          description: ''
          type: number
      return:
        type: void
        description: ''
