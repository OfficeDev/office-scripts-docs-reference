### YamlMime:TSType
name: ExcelScript.PivotFilters
uid: 'ExcelScript!ExcelScript.PivotFilters:interface'
package: ExcelScript!
fullName: ExcelScript.PivotFilters
summary: An interface representing all PivotFilters currently applied to a given PivotField.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: dateFilter
    uid: 'ExcelScript!ExcelScript.PivotFilters#dateFilter:member'
    package: ExcelScript!
    fullName: dateFilter
    summary: The PivotField's currently applied date filter. This property is `null` if no value filter is applied.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dateFilter?: PivotDateFilter;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotDateFilter:interface" />'
  - name: labelFilter
    uid: 'ExcelScript!ExcelScript.PivotFilters#labelFilter:member'
    package: ExcelScript!
    fullName: labelFilter
    summary: The PivotField's currently applied label filter. This property is `null` if no value filter is applied.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'labelFilter?: PivotLabelFilter;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotLabelFilter:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script filters items that start with "L" from the "Type" field
           * of the "Farm Sales" PivotTable.
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the PivotTable.
            const pivotTable = workbook.getActiveWorksheet().getPivotTable("Farm Sales");

            // Get the "Type" field.
            const field = pivotTable.getHierarchy("Type").getPivotField("Type");

            // Filter out any types that start with "L" (such as "Lemons" and "Limes").
            const filter: ExcelScript.PivotLabelFilter = {
              condition: ExcelScript.LabelFilterCondition.beginsWith,
              substring: "L",
              exclusive: true
            };

            // Apply the label filter to the field.
            field.applyFilter({ labelFilter: filter });
          }
          ```
  - name: manualFilter
    uid: 'ExcelScript!ExcelScript.PivotFilters#manualFilter:member'
    package: ExcelScript!
    fullName: manualFilter
    summary: The PivotField's currently applied manual filter. This property is `null` if no value filter is applied.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'manualFilter?: PivotManualFilter;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotManualFilter:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script adds a manual filter to a PivotTable. 
           */
          function main(workbook: ExcelScript.Workbook)
          {
            // Get the first PivotTable in the workbook.
            const pivot = workbook.getPivotTables()[0];

            // Get the hierarchy to use as the filter.
            const location = pivot.getHierarchy("Location");

            // Use "Location" as the FilterHierarchy.
            pivot.addFilterHierarchy(location);

            // Select items for the filter.
            // Note that hierarchies and fields have a 1:1 relationship in Excel,
            // so `getFields()[0]` always gets the correct field.
            location.getFields()[0].applyFilter({
              manualFilter: {
                selectedItems: ["Seattle", "Chicago"]
              }
            });
          }
          ```
  - name: valueFilter
    uid: 'ExcelScript!ExcelScript.PivotFilters#valueFilter:member'
    package: ExcelScript!
    fullName: valueFilter
    summary: The PivotField's currently applied value filter. This property is `null` if no value filter is applied.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'valueFilter?: PivotValueFilter;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotValueFilter:interface" />'
        description: |-


          #### Examples

          ```TypeScript
          /**
           * This script applies a PivotValueFilter to the first row hierarchy in the PivotTable.
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the PivotTable on the current worksheet.
            let sheet = workbook.getActiveWorksheet();
            let pivotTable = sheet.getPivotTables()[0];

            // Get the first row hierarchy to use as the field which gets filtered.
            let rowHierarchy = pivotTable.getRowHierarchies()[0];

            // Get the first data hierarchy to use as the values for filtering the rows.
            let dataHierarchy = pivotTable.getDataHierarchies()[0];

            // Create a filter that excludes values greater than 500.
            let filter: ExcelScript.PivotValueFilter = {
              condition: ExcelScript.ValueFilterCondition.greaterThan,
              comparator: 500,
              value: dataHierarchy.getName()
            };

            // Apply the filter.
            rowHierarchy.getPivotField(rowHierarchy.getName()).applyFilter({
              valueFilter: filter
            });
          }
          ```
