### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.RangeView:interface'
    summary: RangeView represents a set of visible cells of the parent range.
    name: ExcelScript.RangeView
    fullName: ExcelScript.RangeView
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.RangeView#getCellAddresses:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getColumnCount:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getFormulas:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getFormulasLocal:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getFormulasR1C1:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getIndex:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getNumberFormat:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getRange:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getRowCount:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getRows:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getText:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getValues:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getValueTypes:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setFormulas:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setFormulasLocal:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setFormulasR1C1:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setNumberFormat:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setValues:member(1)'
  - uid: 'ExcelScript!ExcelScript.RangeView#getCellAddresses:member(1)'
    summary: Represents the cell addresses of the RangeView.
    name: getCellAddresses()
    fullName: getCellAddresses()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellAddresses(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getColumnCount:member(1)'
    summary: The number of visible columns.
    name: getColumnCount()
    fullName: getColumnCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getFormulas:member(1)'
    summary: Represents the formula in A1-style notation.
    name: getFormulas()
    fullName: getFormulas()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormulas(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getFormulasLocal:member(1)'
    summary: >-
      Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the
      English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.
    name: getFormulasLocal()
    fullName: getFormulasLocal()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormulasLocal(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getFormulasR1C1:member(1)'
    summary: Represents the formula in R1C1-style notation.
    name: getFormulasR1C1()
    fullName: getFormulasR1C1()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormulasR1C1(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getIndex:member(1)'
    summary: Returns a value that represents the index of the RangeView.
    name: getIndex()
    fullName: getIndex()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIndex(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getNumberFormat:member(1)'
    summary: Represents Excel's number format code for the given cell.
    name: getNumberFormat()
    fullName: getNumberFormat()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNumberFormat(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getRange:member(1)'
    summary: Gets the parent range associated with the current RangeView.
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.Range:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getRowCount:member(1)'
    summary: The number of visible rows.
    name: getRowCount()
    fullName: getRowCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getRows:member(1)'
    summary: Represents a collection of range views associated with the range.
    name: getRows()
    fullName: getRows()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRows(): RangeView[];'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeView#getRows~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getText:member(1)'
    summary: >-
      Text values of the specified range. The Text value will not depend on the cell width. The \# sign substitution
      that happens in Excel UI will not affect the text value returned by the API.
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getValues:member(1)'
    summary: >-
      Represents the raw values of the specified range view. The data returned could be of type string, number, or a
      boolean. Cells that contain an error will return the error string.
    name: getValues()
    fullName: getValues()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getValues(): (string | number | boolean)[][];'
      return:
        type:
          - '(string | number | boolean)[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getValueTypes:member(1)'
    summary: Represents the type of data of each cell.
    name: getValueTypes()
    fullName: getValueTypes()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getValueTypes(): RangeValueType[][];'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeView#getValueTypes~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#setFormulas:member(1)'
    summary: Represents the formula in A1-style notation.
    name: setFormulas(formulas)
    fullName: setFormulas(formulas)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormulas(formulas: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formulas
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setFormulasLocal:member(1)'
    summary: >-
      Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the
      English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.
    name: setFormulasLocal(formulasLocal)
    fullName: setFormulasLocal(formulasLocal)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormulasLocal(formulasLocal: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formulasLocal
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setFormulasR1C1:member(1)'
    summary: Represents the formula in R1C1-style notation.
    name: setFormulasR1C1(formulasR1C1)
    fullName: setFormulasR1C1(formulasR1C1)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormulasR1C1(formulasR1C1: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formulasR1C1
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setNumberFormat:member(1)'
    summary: Represents Excel's number format code for the given cell.
    name: setNumberFormat(numberFormat)
    fullName: setNumberFormat(numberFormat)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNumberFormat(numberFormat: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: numberFormat
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setValues:member(1)'
    summary: >-
      Represents the raw values of the specified range view. The data returned could be of type string, number, or a
      boolean. Cells that contain an error will return the error string.
    name: setValues(values)
    fullName: setValues(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(values: (string | number | boolean)[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: ''
          type:
            - '(string | number | boolean)[][]'
references:
  - uid: 'ExcelScript!ExcelScript.Range:interface'
    name: Range
    fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.RangeView#getRows~0:complex'
    name: 'RangeView[]'
    fullName: 'ExcelScript.RangeView[]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.RangeView:interface'
        name: RangeView
        fullName: ExcelScript.RangeView
      - name: '[]'
        fullName: '[]'
  - uid: 'ExcelScript!ExcelScript.RangeView#getValueTypes~0:complex'
    name: 'RangeValueType[][]'
    fullName: 'ExcelScript.RangeValueType[][]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.RangeValueType:enum'
        name: RangeValueType
        fullName: ExcelScript.RangeValueType
      - name: '[][]'
        fullName: '[][]'
