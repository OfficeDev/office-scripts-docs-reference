### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection:class'
    summary: >-
      A scoped collection of custom XML parts. A scoped collection is the result of some operation, e.g. filtering by
      namespace. A scoped collection cannot be scoped any further.
    name: Excel.CustomXmlPartScopedCollection
    fullName: Excel.CustomXmlPartScopedCollection
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#context:member'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#getCount:member(1)'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#getItem:member(1)'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#getItemOrNullObject:member(1)'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#getOnlyItem:member(1)'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#getOnlyItemOrNullObject:member(1)'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#items:member'
      - 'excel-scripts!Excel.CustomXmlPartScopedCollection#load:member(1)'
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#getCount:member(1)'
    summary: Gets the number of CustomXML parts in this collection.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPartScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#getItem:member(1)'
    summary: Gets a custom XML part based on its ID.
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.CustomXmlPart;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart:class'
        description: ''
      parameters:
        - id: id
          description: ID of the object to be retrieved.
          type:
            - string
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#getItemOrNullObject:member(1)'
    summary: >-
      Gets a custom XML part based on its ID. If the CustomXmlPart does not exist, the return object's isNull property
      will be true.
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.CustomXmlPart;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart:class'
        description: ''
      parameters:
        - id: id
          description: ID of the object to be retrieved.
          type:
            - string
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#getOnlyItem:member(1)'
    summary: 'If the collection contains exactly one item, this method returns it. Otherwise, this method produces an error.'
    name: getOnlyItem()
    fullName: getOnlyItem()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOnlyItem(): Excel.CustomXmlPart;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart:class'
        description: ''
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#getOnlyItemOrNullObject:member(1)'
    summary: 'If the collection contains exactly one item, this method returns it. Otherwise, this method returns Null.'
    name: getOnlyItemOrNullObject()
    fullName: getOnlyItemOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOnlyItemOrNullObject(): Excel.CustomXmlPart;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart:class'
        description: ''
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.CustomXmlPart[];'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPartScopedCollection#items~0:complex'
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CustomXmlPartScopedCollection;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPartScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
references:
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel-scripts!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel-scripts!Excel.CustomXmlPart:class'
    name: Excel.CustomXmlPart
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection#items~0:complex'
    name: 'Excel.CustomXmlPart[]'
    fullName: 'Excel.CustomXmlPart[]'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.CustomXmlPart:class'
        name: Excel.CustomXmlPart
        fullName: Excel.CustomXmlPart
      - name: '[]'
        fullName: '[]'
  - uid: 'excel-scripts!Excel.CustomXmlPartScopedCollection:class'
    name: Excel.CustomXmlPartScopedCollection
