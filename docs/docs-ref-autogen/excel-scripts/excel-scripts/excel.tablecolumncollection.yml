### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.TableColumnCollection:class'
    summary: |-
      Represents a collection of all the columns that are part of the table.

      \[Api set: ExcelApi 1.1\]
    name: Excel.TableColumnCollection
    fullName: Excel.TableColumnCollection
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.TableColumnCollection#add:member(1)'
      - 'excel-scripts!Excel.TableColumnCollection#context:member'
      - 'excel-scripts!Excel.TableColumnCollection#count:member'
      - 'excel-scripts!Excel.TableColumnCollection#getCount:member(1)'
      - 'excel-scripts!Excel.TableColumnCollection#getItem:member(1)'
      - 'excel-scripts!Excel.TableColumnCollection#getItemAt:member(1)'
      - 'excel-scripts!Excel.TableColumnCollection#getItemOrNullObject:member(1)'
      - 'excel-scripts!Excel.TableColumnCollection#items:member'
      - 'excel-scripts!Excel.TableColumnCollection#load:member(1)'
      - 'excel-scripts!Excel.TableColumnCollection#toJSON:member(1)'
  - uid: 'excel-scripts!Excel.TableColumnCollection#add:member(1)'
    summary: >-
      Adds a new column to the table.


      \[Api set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional
      (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.\]
    name: 'add(index, values, name)'
    fullName: 'add(index, values, name)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?:
        string): Excel.TableColumn;
      return:
        type:
          - 'excel-scripts!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: index
          description: >-
            Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end.
            Columns with a higher index will be shifted to the side. Zero-indexed.
          type:
            - number
        - id: values
          description: Optional. A 2-dimensional array of unformatted values of the table column.
          type:
            - 'excel-scripts!Excel.TableColumnCollection#add~0:complex'
        - id: name
          description: 'Optional. Specifies the name of the new column. If null, the default name will be used.'
          type:
            - string
  - uid: 'excel-scripts!Excel.TableColumnCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.TableColumnCollection#count:member'
    summary: |-
      Returns the number of columns in the table. Read-only.

      \[Api set: ExcelApi 1.1\]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel-scripts!Excel.TableColumnCollection#getCount:member(1)'
    summary: |-
      Gets the number of columns in the table.

      \[Api set: ExcelApi 1.4\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel-scripts!Excel.TableColumnCollection#getCount~0:complex'
        description: ''
  - uid: 'excel-scripts!Excel.TableColumnCollection#getItem:member(1)'
    summary: |-
      Gets a column object by Name or ID.

      \[Api set: ExcelApi 1.1\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Excel.TableColumn;'
      return:
        type:
          - 'excel-scripts!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: key
          description: Column Name or ID.
          type:
            - number | string
  - uid: 'excel-scripts!Excel.TableColumnCollection#getItemAt:member(1)'
    summary: |-
      Gets a column based on its position in the collection.

      \[Api set: ExcelApi 1.1\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableColumn;'
      return:
        type:
          - 'excel-scripts!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type:
            - number
  - uid: 'excel-scripts!Excel.TableColumnCollection#getItemOrNullObject:member(1)'
    summary: |-
      Gets a column object by Name or ID. If the column does not exist, will return a null object.

      \[Api set: ExcelApi 1.4\]
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
      return:
        type:
          - 'excel-scripts!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: key
          description: Column Name or ID.
          type:
            - number | string
  - uid: 'excel-scripts!Excel.TableColumnCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableColumn[];'
      return:
        type:
          - 'excel-scripts!Excel.TableColumnCollection#items~0:complex'
  - uid: 'excel-scripts!Excel.TableColumnCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
      return:
        type:
          - 'excel-scripts!Excel.TableColumnCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.TableColumnCollection#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.TableColumnCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
      return:
        type:
          - 'excel-scripts!Excel.Interfaces.TableColumnCollectionData:interface'
        description: ''
references:
  - uid: 'excel-scripts!Excel.TableColumn:class'
    name: Excel.TableColumn
  - uid: 'excel-scripts!Excel.TableColumnCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.TableColumnCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel-scripts!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel-scripts!Excel.TableColumnCollection#items~0:complex'
    name: 'Excel.TableColumn[]'
    fullName: 'Excel.TableColumn[]'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.TableColumn:class'
        name: Excel.TableColumn
        fullName: Excel.TableColumn
      - name: '[]'
        fullName: '[]'
  - uid: 'excel-scripts!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel-scripts!Excel.Interfaces.TableColumnCollectionData:interface'
    name: Excel.Interfaces.TableColumnCollectionData
