### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection:class'
    summary: Represents a collection of all the conditional formats that are overlap the range.
    name: Excel.ConditionalFormatCollection
    fullName: Excel.ConditionalFormatCollection
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.ConditionalFormatCollection#add:member(1)'
      - 'excel-scripts!Excel.ConditionalFormatCollection#add:member(2)'
      - 'excel-scripts!Excel.ConditionalFormatCollection#clearAll:member(1)'
      - 'excel-scripts!Excel.ConditionalFormatCollection#context:member'
      - 'excel-scripts!Excel.ConditionalFormatCollection#getCount:member(1)'
      - 'excel-scripts!Excel.ConditionalFormatCollection#getItem:member(1)'
      - 'excel-scripts!Excel.ConditionalFormatCollection#getItemAt:member(1)'
      - 'excel-scripts!Excel.ConditionalFormatCollection#items:member'
      - 'excel-scripts!Excel.ConditionalFormatCollection#load:member(1)'
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#add:member(1)'
    summary: Adds a new conditional format to the collection at the first/top priority.
    name: add(type)
    fullName: add(type)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ConditionalFormatType): Excel.ConditionalFormat;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormat:class'
        description: ''
      parameters:
        - id: type
          description: The type of conditional format being added. See Excel.ConditionalFormatType for details.
          type:
            - 'excel-scripts!Excel.ConditionalFormatType:enum'
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#add:member(2)'
    summary: Adds a new conditional format to the collection at the first/top priority.
    name: add(typeStringString)
    fullName: add(typeStringString)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        add(typeStringString: "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" |
        "ContainsText" | "CellValue"): Excel.ConditionalFormat;
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormat:class'
        description: ''
      parameters:
        - id: typeStringString
          description: The type of conditional format being added. See Excel.ConditionalFormatType for details.
          type:
            - >-
              "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" |
              "CellValue"
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#clearAll:member(1)'
    summary: Clears all conditional formats active on the current specified range.
    name: clearAll()
    fullName: clearAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#getCount:member(1)'
    summary: Returns the number of conditional formats in the workbook. Read-only.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormatCollection#getCount~0:complex'
        description: ''
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#getItem:member(1)'
    summary: Returns a conditional format for the given ID.
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.ConditionalFormat;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormat:class'
        description: Conditional Format object.
      parameters:
        - id: id
          description: The id of the conditional format.
          type:
            - string
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#getItemAt:member(1)'
    summary: Returns a conditional format at the given index.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ConditionalFormat;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormat:class'
        description: ''
      parameters:
        - id: index
          description: Index of the conditional formats to be retrieved.
          type:
            - number
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#items:member'
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ConditionalFormat[];'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormatCollection#items~0:complex'
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatCollection;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalFormatCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
references:
  - uid: 'excel-scripts!Excel.ConditionalFormat:class'
    name: Excel.ConditionalFormat
  - uid: 'excel-scripts!Excel.ConditionalFormatType:enum'
    name: Excel.ConditionalFormatType
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel-scripts!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection#items~0:complex'
    name: 'Excel.ConditionalFormat[]'
    fullName: 'Excel.ConditionalFormat[]'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.ConditionalFormat:class'
        name: Excel.ConditionalFormat
        fullName: Excel.ConditionalFormat
      - name: '[]'
        fullName: '[]'
  - uid: 'excel-scripts!Excel.ConditionalFormatCollection:class'
    name: Excel.ConditionalFormatCollection
