### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat:class'
    summary: Represents a Top/Bottom conditional format.
    name: Excel.TopBottomConditionalFormat
    fullName: Excel.TopBottomConditionalFormat
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.TopBottomConditionalFormat#context:member'
      - 'excel-scripts!Excel.TopBottomConditionalFormat#format:member'
      - 'excel-scripts!Excel.TopBottomConditionalFormat#load:member(1)'
      - 'excel-scripts!Excel.TopBottomConditionalFormat#load:member(2)'
      - 'excel-scripts!Excel.TopBottomConditionalFormat#rule:member'
      - 'excel-scripts!Excel.TopBottomConditionalFormat#set:member(1)'
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat#format:member'
    summary: >-
      Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.
      Read-only.
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalRangeFormat:class'
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TopBottomConditionalFormat;'
      return:
        type:
          - 'excel-scripts!Excel.TopBottomConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TopBottomConditionalFormat;
      return:
        type:
          - 'excel-scripts!Excel.TopBottomConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat#rule:member'
    summary: The criteria of the Top/Bottom conditional format.
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.ConditionalTopBottomRule;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalTopBottomRule:interface'
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat#set:member(1)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TopBottomConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel-scripts!Excel.TopBottomConditionalFormat:class'
references:
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.ConditionalRangeFormat:class'
    name: Excel.ConditionalRangeFormat
  - uid: 'excel-scripts!Excel.TopBottomConditionalFormat:class'
    name: Excel.TopBottomConditionalFormat
  - uid: 'excel-scripts!Excel.ConditionalTopBottomRule:interface'
    name: Excel.ConditionalTopBottomRule
