### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.CustomXmlPart:class'
    summary: Represents a custom XML part object in a workbook.
    name: Excel.CustomXmlPart
    fullName: Excel.CustomXmlPart
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.CustomXmlPart#context:member'
      - 'excel-scripts!Excel.CustomXmlPart#delete:member(1)'
      - 'excel-scripts!Excel.CustomXmlPart#getXml:member(1)'
      - 'excel-scripts!Excel.CustomXmlPart#id:member'
      - 'excel-scripts!Excel.CustomXmlPart#load:member(1)'
      - 'excel-scripts!Excel.CustomXmlPart#load:member(2)'
      - 'excel-scripts!Excel.CustomXmlPart#namespaceUri:member'
      - 'excel-scripts!Excel.CustomXmlPart#setXml:member(1)'
      - 'excel-scripts!Excel.CustomXmlPart#toJSON:member(1)'
  - uid: 'excel-scripts!Excel.CustomXmlPart#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.CustomXmlPart#delete:member(1)'
    summary: Deletes the custom XML part.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.CustomXmlPart#getXml:member(1)'
    summary: Gets the custom XML part's full XML content.
    name: getXml()
    fullName: getXml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXml(): ClientResult<string>;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart#getXml~0:complex'
        description: ''
  - uid: 'excel-scripts!Excel.CustomXmlPart#id:member'
    summary: The custom XML part's ID. Read-only.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.CustomXmlPart#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CustomXmlPart;'
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.CustomXmlPart#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.CustomXmlPart;
      return:
        type:
          - 'excel-scripts!Excel.CustomXmlPart:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel-scripts!Excel.CustomXmlPart#namespaceUri:member'
    summary: The custom XML part's namespace URI. Read-only.
    name: namespaceUri
    fullName: namespaceUri
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly namespaceUri: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.CustomXmlPart#setXml:member(1)'
    summary: Sets the custom XML part's full XML content.
    name: setXml(xml)
    fullName: setXml(xml)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXml(xml: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: XML content for the part.
          type:
            - string
  - uid: 'excel-scripts!Excel.CustomXmlPart#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.CustomXmlPart object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Excel.Interfaces.CustomXmlPartData`<!-- -->) that contains shallow copies of
      any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CustomXmlPartData;'
      return:
        type:
          - 'excel-scripts!Excel.Interfaces.CustomXmlPartData:interface'
        description: ''
references:
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.CustomXmlPart#getXml~0:complex'
    name: ClientResult<string>
    fullName: Excel.ClientResult<string>
    spec.typeScript:
      - uid: 'excel-scripts!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'excel-scripts!Excel.CustomXmlPart:class'
    name: Excel.CustomXmlPart
  - uid: 'excel-scripts!Excel.Interfaces.CustomXmlPartData:interface'
    name: Excel.Interfaces.CustomXmlPartData
