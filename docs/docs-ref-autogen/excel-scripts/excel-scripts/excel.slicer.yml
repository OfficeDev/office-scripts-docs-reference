### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.Slicer:class'
    summary: Represents a slicer object in the workbook.
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.Slicer#caption:member'
      - 'excel-scripts!Excel.Slicer#clearFilters:member(1)'
      - 'excel-scripts!Excel.Slicer#context:member'
      - 'excel-scripts!Excel.Slicer#delete:member(1)'
      - 'excel-scripts!Excel.Slicer#getSelectedItems:member(1)'
      - 'excel-scripts!Excel.Slicer#height:member'
      - 'excel-scripts!Excel.Slicer#id:member'
      - 'excel-scripts!Excel.Slicer#isFilterCleared:member'
      - 'excel-scripts!Excel.Slicer#left:member'
      - 'excel-scripts!Excel.Slicer#load:member(1)'
      - 'excel-scripts!Excel.Slicer#load:member(2)'
      - 'excel-scripts!Excel.Slicer#name:member'
      - 'excel-scripts!Excel.Slicer#selectItems:member(1)'
      - 'excel-scripts!Excel.Slicer#set:member(1)'
      - 'excel-scripts!Excel.Slicer#slicerItems:member'
      - 'excel-scripts!Excel.Slicer#sortBy:member'
      - 'excel-scripts!Excel.Slicer#style:member'
      - 'excel-scripts!Excel.Slicer#top:member'
      - 'excel-scripts!Excel.Slicer#width:member'
      - 'excel-scripts!Excel.Slicer#worksheet:member'
  - uid: 'excel-scripts!Excel.Slicer#caption:member'
    summary: Represents the caption of slicer.
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.Slicer#clearFilters:member(1)'
    summary: Clears all the filters currently applied on the slicer.
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.Slicer#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.Slicer#delete:member(1)'
    summary: Deletes the slicer.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.Slicer#getSelectedItems:member(1)'
    summary: Returns an array of selected items' keys. Read-only.
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): ClientResult<string[]>;'
      return:
        type:
          - 'excel-scripts!Excel.Slicer#getSelectedItems~0:complex'
        description: ''
  - uid: 'excel-scripts!Excel.Slicer#height:member'
    summary: >-
      Represents the height, in points, of the slicer. Throws an "The argument is invalid or missing or has an incorrect
      format." exception when set with negative value or zero as input.
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel-scripts!Excel.Slicer#id:member'
    summary: Represents the unique id of slicer. Read-only.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.Slicer#isFilterCleared:member'
    summary: True if all filters currently applied on the slicer are cleared.
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel-scripts!Excel.Slicer#left:member'
    summary: >-
      Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an "The
      argument is invalid or missing or has an incorrect format." exception when set with negative value as input.
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel-scripts!Excel.Slicer#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - 'excel-scripts!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.Slicer#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Slicer;
      return:
        type:
          - 'excel-scripts!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel-scripts!Excel.Slicer#name:member'
    summary: Represents the name of slicer.
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.Slicer#selectItems:member(1)'
    summary: >-
      Selects slicer items based on their keys. The previous selections are cleared. All items will be selected by
      default if the array is empty.
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: items
          description: Optional. The specified slicer item names to be selected.
          type:
            - 'string[]'
  - uid: 'excel-scripts!Excel.Slicer#set:member(1)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel-scripts!Excel.Slicer:class'
  - uid: 'excel-scripts!Excel.Slicer#slicerItems:member'
    summary: Represents the collection of SlicerItems that are part of the slicer. Read-only.
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - 'excel-scripts!Excel.SlicerItemCollection:class'
  - uid: 'excel-scripts!Excel.Slicer#sortBy:member'
    summary: >-
      Represents the sort order of the items in the slicer. Possible values are: "DataSourceOrder", "Ascending",
      "Descending".
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - 'excel-scripts!Excel.Slicer#sortBy~0:complex'
  - uid: 'excel-scripts!Excel.Slicer#style:member'
    summary: >-
      Constant value that represents the Slicer style. Possible values are: "SlicerStyleLight1" through
      "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".
      A custom user-defined style present in the workbook can also be specified.
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.Slicer#top:member'
    summary: >-
      Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an "The
      argument is invalid or missing or has an incorrect format." exception when set with negative value as input.
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel-scripts!Excel.Slicer#width:member'
    summary: >-
      Represents the width, in points, of the slicer. Throws an "The argument is invalid or missing or has an incorrect
      format." exception when set with negative value or zero as input.
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel-scripts!Excel.Slicer#worksheet:member'
    summary: Represents the worksheet containing the slicer. Read-only.
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel-scripts!Excel.Worksheet:class'
references:
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.Slicer#getSelectedItems~0:complex'
    name: 'ClientResult<string[]>'
    fullName: 'Excel.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel-scripts!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel-scripts!Excel.Slicer:class'
    name: Excel.Slicer
  - uid: 'excel-scripts!Excel.SlicerItemCollection:class'
    name: Excel.SlicerItemCollection
  - uid: 'excel-scripts!Excel.Slicer#sortBy~0:complex'
    name: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    fullName: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    spec.typeScript:
      - uid: 'excel-scripts!Excel.SlicerSortType:enum'
        name: Excel.SlicerSortType
        fullName: Excel.SlicerSortType
      - name: ' | "DataSourceOrder" | "Ascending" | "Descending"'
        fullName: ' | "DataSourceOrder" | "Ascending" | "Descending"'
  - uid: 'excel-scripts!Excel.Worksheet:class'
    name: Excel.Worksheet
