### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.TableRow:class'
    summary: >-
      Represents a row in a table.


      Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object
      represent the physical location of the table row, but not the data. That is, if the data is sorted or if new rows
      are added, a table row will continue to point at the index for which it was created.


      \[Api set: ExcelApi 1.1\]
    name: Excel.TableRow
    fullName: Excel.TableRow
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.TableRow#context:member'
      - 'excel-scripts!Excel.TableRow#delete:member(1)'
      - 'excel-scripts!Excel.TableRow#getRange:member(1)'
      - 'excel-scripts!Excel.TableRow#index:member'
      - 'excel-scripts!Excel.TableRow#load:member(1)'
      - 'excel-scripts!Excel.TableRow#load:member(2)'
      - 'excel-scripts!Excel.TableRow#set:member(1)'
      - 'excel-scripts!Excel.TableRow#toJSON:member(1)'
      - 'excel-scripts!Excel.TableRow#values:member'
  - uid: 'excel-scripts!Excel.TableRow#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.TableRow#delete:member(1)'
    summary: |-
      Deletes the row from the table.

      \[Api set: ExcelApi 1.1\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel-scripts!Excel.TableRow#getRange:member(1)'
    summary: |-
      Returns the range object associated with the entire row.

      \[Api set: ExcelApi 1.1\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel-scripts!Excel.Range:class'
        description: ''
  - uid: 'excel-scripts!Excel.TableRow#index:member'
    summary: |-
      Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.

      \[Api set: ExcelApi 1.1\]
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel-scripts!Excel.TableRow#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
      return:
        type:
          - 'excel-scripts!Excel.TableRow:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.TableRow#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableRow;
      return:
        type:
          - 'excel-scripts!Excel.TableRow:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel-scripts!Excel.TableRow#set:member(1)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableRow): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel-scripts!Excel.TableRow:class'
  - uid: 'excel-scripts!Excel.TableRow#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.TableRow object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.TableRowData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowData;'
      return:
        type:
          - 'excel-scripts!Excel.Interfaces.TableRowData:interface'
        description: ''
  - uid: 'excel-scripts!Excel.TableRow#values:member'
    summary: >-
      Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean.
      Cells that contain an error will return the error string.


      \[Api set: ExcelApi 1.1\]
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
references:
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel-scripts!Excel.TableRow:class'
    name: Excel.TableRow
  - uid: 'excel-scripts!Excel.Interfaces.TableRowData:interface'
    name: Excel.Interfaces.TableRowData
