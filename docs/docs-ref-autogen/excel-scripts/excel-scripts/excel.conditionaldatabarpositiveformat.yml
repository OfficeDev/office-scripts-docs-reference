### YamlMime:UniversalReference
items:
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat:class'
    summary: |-
      Represents a conditional format DataBar Format for the positive side of the data bar.

      \[Api set: ExcelApi 1.6\]
    name: Excel.ConditionalDataBarPositiveFormat
    fullName: Excel.ConditionalDataBarPositiveFormat
    langs:
      - typeScript
    type: class
    package: excel-scripts!
    children:
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#borderColor:member'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#context:member'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#fillColor:member'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#gradientFill:member'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#load:member(1)'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#load:member(2)'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#set:member(1)'
      - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#toJSON:member(1)'
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#borderColor:member'
    summary: >-
      HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML
      color (e.g. "orange"). "" (empty string) if no border is present or set.


      \[Api set: ExcelApi 1.6\]
    name: borderColor
    fullName: borderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderColor: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#context:member'
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel-scripts!Excel.RequestContext:class'
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#fillColor:member'
    summary: >-
      HTML color code representing the fill color, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g.
      "orange").


      \[Api set: ExcelApi 1.6\]
    name: fillColor
    fullName: fillColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillColor: string;'
      return:
        type:
          - string
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#gradientFill:member'
    summary: |-
      Boolean representation of whether or not the DataBar has a gradient.

      \[Api set: ExcelApi 1.6\]
    name: gradientFill
    fullName: gradientFill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientFill: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#load:member(1)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#load:member(2)'
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalDataBarPositiveFormat;
      return:
        type:
          - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#set:member(1)'
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalDataBarPositiveFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel-scripts!Excel.ConditionalDataBarPositiveFormat:class'
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat#toJSON:member(1)'
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.ConditionalDataBarPositiveFormat object is an API object, the `toJSON`
      method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalDataBarPositiveFormatData`<!--
      -->) that contains shallow copies of any loaded child properties from the original object.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalDataBarPositiveFormatData;'
      return:
        type:
          - 'excel-scripts!Excel.Interfaces.ConditionalDataBarPositiveFormatData:interface'
        description: ''
references:
  - uid: 'excel-scripts!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel-scripts!Excel.ConditionalDataBarPositiveFormat:class'
    name: Excel.ConditionalDataBarPositiveFormat
  - uid: 'excel-scripts!Excel.Interfaces.ConditionalDataBarPositiveFormatData:interface'
    name: Excel.Interfaces.ConditionalDataBarPositiveFormatData
